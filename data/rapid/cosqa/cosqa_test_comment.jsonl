[{"nl_input": "This Python code is a function named `shot_noise` that is used to generate shot noise. The function takes two parameters: `x` and `severity`. `x` is a numpy array that represents the input image, and `severity` is an optional parameter that determines the severity of the noise. The function normalizes the input image `x` by dividing it by 255, then clips the normalized image to the range [0, 1] using numpy's `np.clip` function. The clipped image is then converted to the desired data type (`np.uint8`) using numpy's `np.around` function. The function returns the clipped and converted image.\n", "url": "bf4f16738e1373b1734389fb368c4035", "gt": "Shot noise corruption to images ."}, {"nl_input": "This Python function takes a comma-delimited string as input and converts it into a list. If the input is already a list, it simply returns the list. If the input is a string, it splits the string into a list of elements based on the comma delimiter. If the input is neither a list nor a string, it returns an empty list.\n", "url": "bef112878733e2d59a2929a7920b88a7", "gt": "Convert comma - delimited list / string into a list of strings"}, {"nl_input": "This Python function is used to find the last index of a numpy array. It takes two parameters: `x`, which is a numpy array, and `default_dim`, which is the default index to return if `x` does not have a defined shape.\n", "url": "123635b9b49cfe244f1f03b3cf7a2181", "gt": "Returns the last dimension s index or default_dim if x has no shape ."}, {"nl_input": "This Python code is a function that tags named entities in a given Named Entity Recognition (NER) document. The function takes a parameter `nerdoc` which is a document object containing sentences and features. It then iterates over each sentence in the document, extracts a feature list for each sentence, and tags the named entities in the sentence using a trained Named Entity Recognition (NER) model. The tagged entities are then stored in a list.\n", "url": "588db07117735817741eca7dee7745a4", "gt": "Tag the given document . Parameters ---------- nerdoc : estnltk . estner . Document The document to be tagged ."}, {"nl_input": "The provided Python code is a function that takes two arguments: a list `a` and a list `ids`. The function is designed to find the minimum value in each segment defined by the indices in `ids`. The function uses the `numpy` library to perform the operations.\n\nThe function `SegmentMin` takes two arguments:\n\n- `a`: a list of numbers.\n- `ids`: a list of indices.\n\nThe function uses a lambda function to find the minimum value in each segment defined by the indices in `ids`. The `numpy` library's `amin` function is used to find the minimum value in each segment. The `axis` parameter is set to 0, which means the function will find the minimum value along the first axis (i.e., the indices in `ids`).\n\nThe function then returns the segment map, which is a list of the minimum values in each segment.\n\nThe function `seg_map` is not defined in the provided code, but it seems to be a helper function that takes a function and two lists as arguments and returns a list of the results of applying the function to the elements in the second list.", "url": "0ac06c72778fbae3d211690a5144ee35", "gt": "Segmented min op ."}, {"nl_input": "This Python code is used to set the title of the console window. The purpose of this code is to change the title of the console window to the input message. If the platform of the system is Windows, it uses the ctypes library to call the SetConsoleTitleW function from the kernel32 DLL, which sets the title of the console window.\n", "url": "adb202dabb7da58b5d21780a6344bf64", "gt": "Sets the title of the console window ."}, {"nl_input": "This Python code is used to find the greatest common divisor (GCD) of an array of numbers. The GCD is the largest number that can perfectly divide all the numbers in the array without a remainder. The function `_gcd_array` takes an array of numbers as input and returns the GCD of all the numbers in the array.\n", "url": "7a0e230522dc1bfb6f427d5c55f1b354", "gt": "Return the largest real value h such that all elements in x are integer multiples of h ."}, {"nl_input": "The provided Python code is a method definition for a class, which is not clear without additional context. However, based on the method name and its parameters, it seems to be a method that is used to get the next value from a sequence. The method is not clear as it is not a standard Python method, and the parameters are not clear.\n\nWithout additional context, it's hard to provide a more precise summary. If you could provide more details about the purpose of this method, I would be more than happy to help.\n", "url": "718ca45cd2a8aeb3d6d3c93b5772846b", "gt": "For Python3 compatibility of generator ."}, {"nl_input": "This Python code is a function that converts a string to a Unicode string. If the input is a bytes object or a string in Python 2, it first decodes the string to UTF-8 encoding.\n", "url": "0fd02d1357d249743abe621c23164a46", "gt": "bytes to unicode"}, {"nl_input": "This Python code defines a function `force_iterable` that takes a function `f` as an argument. The function `force_iterable` is a decorator that wraps the original function `f`. The purpose of this decorator is to ensure that the returned result of the original function `f` is iterable. If the result is not iterable, it is wrapped in a list with a single element.\n", "url": "1cf347f32e0553e66342c5b228b6d453", "gt": "Will make any functions return an iterable objects by wrapping its result in a list ."}, {"nl_input": "This Python function is used for linear interpolation, which is a method of curve fitting or interpolation in which a new data point is found at a value that is a linear combination of the known data points. The function takes three arguments: x, X, and Y. x is the value at which the function needs to be evaluated, X and Y are the arrays of known data points. The function returns the value of the function at x, calculated using linear interpolation.\n", "url": "80c2dd99d1070a015466e83c6bbaca96", "gt": "Given two data points [ X Y ] linearly interpolate those at x ."}, {"nl_input": "This Python code is used to convert GraphQL queries into JSON format. The purpose of this code is to convert a list of GraphQL queries into a JSON object. Each query in the list is represented as a key-value pair in the JSON object, where the key is \"q{}\" where {} is the index of the query in the list. The JSON object is then converted into a JSON string using the json.dumps() function.\n", "url": "30ec3c40428cf0142b78086fcf52ab34", "gt": "Queries should be a list of GraphQL objects"}, {"nl_input": "This Python code is used to find the maximum ID in a database. The code defines a function `maxId` that takes a model object as an argument. If the length of the database is 0, it returns 0. Otherwise, it uses the `map` function to apply a lambda function to each object in the database, extracting the ID. The `max` function is then used to find the maximum ID among these.\n", "url": "af9699e529fc3f759e3b88f38e727526", "gt": "int : current max id of objects"}, {"nl_input": "This Python code is used to update a dictionary with the values from another dictionary. The purpose of this code is to merge two dictionaries into one.\n", "url": "6d3492893fe452efa23b2aa871bb96ba", "gt": "update () extends rather than replaces existing key lists ."}, {"nl_input": "This Python code is a function that calculates the number of ways to choose k items from a set of n items. The function uses a combination formula, which is a mathematical formula used to calculate the number of ways to choose k items from a set of n items, where the order of selection matters.\n", "url": "08fedeb109d03a7efb9a793b2faf11e3", "gt": "get the number of quartets as n - choose - k . This is used in equal splits to decide whether a split should be exhaustively sampled or randomly sampled . Edges near tips can be exhaustive while highly nested edges probably have too many quartets"}, {"nl_input": "This Python code is used to create a multi-index from a pandas DataFrame. The purpose of this code is to provide a more efficient way to handle multi-level indexing in a pandas DataFrame.\n", "url": "640aa848a8c64fde652dc858267e207e", "gt": "Create an index from the columns of a dataframe"}, {"nl_input": "The Python code is a function named `test3` that starts a MVisionProcess object and then waits for 5 seconds before stopping it.\n", "url": "305d82a1849c66873989c4284d69ab1d", "gt": "Test the multiprocess"}, {"nl_input": "The provided Python code is a function named `backward_delete_word` that is used to delete a word from a buffer. The function is used to control the Rubout operation, which is a process used in text editors to delete characters. The function takes an argument `e` and uses it to control the buffer. It then calls `self.finalize()` to finalize the operation.\n", "url": "6d0e43840f9291ed29bad306bcad084b", "gt": "u Delete the character behind the cursor . A numeric argument means to kill the characters instead of deleting them ."}, {"nl_input": "The Python code is a function that takes a Python object (`o`) as an argument and prints its YAML representation. The function uses the `yaml` module's `dump` function to convert the Python object into a YAML string. The `default_flow_style` parameter is set to `False` to ensure that the output is in a block style, which is more human-readable. The `indent` parameter is set to `4` to indent the output by four spaces, and the `encoding` parameter is set to `'utf-8'` to ensure that the output is encoded in UTF-8.\n", "url": "77ef270248a249d46314cb1cc698b63b", "gt": "Pretty print an object as YAML ."}, {"nl_input": "This Python code is an asynchronous function named `vc_check` that is used to check if the Discord voice client is loaded and if PyNaCl (Native Client Library) and libopus (Opus audio codec library) are loaded. If any of these conditions are not met, it raises a `commands.CheckFailure` exception. If all conditions are met, it returns `True`.\n", "url": "b5a7289d2fab611cfcc7c4ed4b850c0f", "gt": "Check for whether VC is available in this bot ."}, {"nl_input": "The Python function `info` is a method that logs an informational message to a logger. The message is prefixed with a custom message_prefix and then the text passed to the function.\n", "url": "96e946ca05b4d59e5a6276c0b3af415b", "gt": "Ajout d un message de log de type INFO"}, {"nl_input": "This Python code is a function that uses the scikit-learn library's DecisionTreeClassifier to create a decision tree model. The model is then used to predict the probability of a sample belonging to a certain class. The function `cric__decision_tree` is designed to return the model for use in other parts of the code.\n", "url": "c3435338c01b1a188567decfc5fc0927", "gt": "Decision Tree"}, {"nl_input": "This Python function is used to find the index of a specific element in a list. The function takes two parameters: `self` and `elem`. `self` is the instance of the class, and `elem` is the element to be searched for. The function returns the index of `elem` in the list.\n", "url": "a81aae6b2b81cacc3595226458d367e8", "gt": "Find the index of elem in the reversed iterator ."}, {"nl_input": "This Python function is designed to check if a given data type (dtype) is a numeric type. It uses the numpy library to perform the check. The function returns True if the dtype is a numeric type, and False otherwise.\n", "url": "0682dad1c78a66e735141f7465044213", "gt": "Return True if dtype is a numeric type ."}, {"nl_input": "The provided Python code is a function that calculates the number of elements in a data structure. The function is named \"shape\" and it's used to get the number of elements in a data structure. The data structure could be a list, a tuple, a dictionary, or any other type of data structure.\n\nThe function first checks if the data attribute of the object is None. If it is, it returns (0, 0) as there are no elements in the data structure.\n\nIf the data attribute is not None, it then calculates the number of elements in the data structure by finding the length of the data attribute and the number of dimensions in the object.\n\nThe function returns a tuple with two elements: the number of elements in the data structure and the number of dimensions in the object.\n", "url": "03902bd67078aa4474f8a53295175922", "gt": "Compute the shape of the dataset as ( rows cols ) ."}, {"nl_input": "This Python code is designed to check the platform on which the code is running. It uses the `sys.platform` module to get the platform information, and then checks if the platform starts with \"linux\", \"darwin\", or \"cygwin\". If the platform is one of these, it returns `True`, otherwise it returns `False`.\n", "url": "8251bcf4cb40c1528106d1b53d5f5d85", "gt": "Returns whether the given platform is a Unix - like platform with the usual Unix filesystem . When the parameter is omitted it defaults to sys . platform"}, {"nl_input": "This Python function is designed to check if a given key is of type BaseCondition and if its operation is \"==\" and if its column matches the hash key of a given query object.\n", "url": "92ac75d4fe43a04ecb953753efd02c0e", "gt": "Only allows == against query_on . hash_key"}, {"nl_input": "The provided Python code is a function that cleans up a document by removing any whitespace-only text nodes from the document. The function takes a document as input and iterates over its child nodes. If a node is a text node and only contains whitespace, the function removes this node from the document.\n", "url": "e4a076b56da21a4b5fe16b2735022613", "gt": "Remove text nodes containing only whitespace"}, {"nl_input": "This Python function takes a string input, `date_str`, and checks if it is in a valid ISO 8601 format. If the string is longer than 10 characters, it attempts to parse it as a date using the `isodate.parse_date` function. If the string is not longer than 10 characters, it attempts to parse it as a datetime using the `isodate.parse_datetime` function. If both attempts fail, the function returns `False` and a list with a message indicating that the datetime provided is not in a valid ISO 8601 format.\n", "url": "fb219ccbaa6021dddb6fd7adce3cc214", "gt": "Attempts to parse a date formatted in ISO 8601 format"}, {"nl_input": "The provided Python code is a function that takes an iterable as input and returns a new list that contains only the unique elements from the original iterable.\n", "url": "a62a2755f5b02fde0ea76637776e4739", "gt": "Return unique list of items preserving order ."}, {"nl_input": "This Python code defines a function `isstring` that checks if a given value is either a string or a bytes object. The function uses the `isinstance` function to check if the value is an instance of either a string or bytes class. If the value is a string or bytes object, the function returns `True`, otherwise it returns `False`.\n", "url": "26c958614bee5fc1c19896b5f0551f81", "gt": "Report whether the given value is a byte or unicode string ."}, {"nl_input": "The provided Python code is a method that creates a masked array (ma) from a given data array (self.data), a mask array (self.mask), and a fill value (self.fill_value). The masked array is a numpy array that masks the elements in the original array that are marked as True in the mask array.\n", "url": "0773ccccc7a4410b99a67a524e967ef2", "gt": "Creates converts to a masked array"}, {"nl_input": "The provided Python code is a function that trims leading and trailing whitespace from a string. The function uses regular expressions (RE) to identify and remove leading and trailing whitespace from the input string.\n", "url": "59c94f3828b90b2607f5aa28822b7c61", "gt": "Trim left - right given string"}, {"nl_input": "This Python code is used to calculate the start of the month for a given date. The function `start_of_month` takes a date as input and returns the start of the month for that date. If the input is a `datetime` object, it first converts it to the ordinal number of the day, then calculates the start of the day for that day, and finally replaces the day with 1 to get the start of the month.\n", "url": "29ccc9cc8cfe03ed5a7d60a2087692cd", "gt": "Return a new datetime . datetime object with values that represent a start of a month . : param val : Date to ... : type val : datetime . datetime | datetime . date : rtype : datetime . datetime"}, {"nl_input": "The provided Python code is a function that is designed to clean up a database connection. The function takes an instance of a class (`self`) and an object (`app`) as arguments. It then checks if the `close_all` method exists in the `database` attribute of the `self` object. If it does, it calls this method to close all database connections.\n", "url": "0276eac263fca46f864f24050a9ea3e9", "gt": "Close all connections ."}, {"nl_input": "This Python function is used to get the local IP address of the machine. The function uses the `socket` and `getaddrinfo` functions to get information about the network interfaces on the local machine. It then filters out the IP addresses associated with the 'http' protocol and returns the first one it finds.\n", "url": "0424d5e9fb2e0ef43c6f3ae42a6c2316", "gt": "Get the local ip of this device"}, {"nl_input": "This Python code is used to create a directory if it doesn't already exist. The function `mkdir` takes two arguments: `dir` and `enter`. `dir` is the name of the directory to be created, and `enter` is a boolean value that determines whether to create the directory if it doesn't exist.\n\nIf the directory `dir` does not exist, the function uses the `os.makedirs` function to create the directory. This function creates all necessary parent directories in the path specified by `dir`.\n\nThe function also checks if the directory `dir` exists using the `os.path.exists` function. If the directory does not exist, the function will not proceed to create the directory.\n", "url": "92c4f725f0d1d243dd04b7d28c2f983f", "gt": "Create directory with template for topic of the current environment"}, {"nl_input": "This Python code is used to set environment variables for a SCons build system. The purpose of this code is to set the 'CXX' variable to 'CC', 'CXXFLAGS' to '-LANG:std' and 'SHCXX' to '$CXX', 'SHOBJSUFFIX' to '.o', and 'STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME' to 1. These variables are used by the SCons build system to control the compilation process.\n", "url": "d86c7ef069bae9bd25b1719469eaa20e", "gt": "Add Builders and construction variables for SGI MIPS C ++ to an Environment ."}, {"nl_input": "This Python function `scale_image` is designed to resize an image. The image is resized to fit a new width while maintaining the original aspect ratio. The new height is calculated as the original aspect ratio times the new width. The resized image is then returned.\n", "url": "1374156da8327d67bd9b7097f1cd1692", "gt": "Resizes an image preserving the aspect ratio ."}, {"nl_input": "This Python code is designed to find the index of the first occurrence of a pattern in a list of strings. The pattern is searched using a custom function (lookup_func) that defaults to using the 'match' function from the 're' module. If the pattern is found 'n' times in the list of strings, the function returns the index of the first occurrence. If no such occurrence is found, it returns -1.\n", "url": "7d6d4d30261325455aae41d30721f891", "gt": "Return index of the nth match found of pattern in strings"}, {"nl_input": "The Python code is checking if a given data type is a real floating-point number. It uses the numpy library to perform this check. The function `is_real_floating_dtype` takes a data type as input and returns `True` if the data type is a real floating-point number, and `False` otherwise.\n", "url": "a5fcb7627c23a69f2c2c9416c128e1f5", "gt": "Return True if dtype is a real floating point type ."}, {"nl_input": "This Python code is used to create a BigQuery table. The purpose of this code is to create a table in a specific database schema with a given table name. The table is created using the provided SQL query. The table is then passed to a callback function for further processing. If any exception occurs during the process, it is caught and handled by the exception_handler function.\n", "url": "32b013a3ed613334012d04e2cfcc7a7a", "gt": "Create a bigquery table . The caller must supply a callback that takes one argument a google . cloud . bigquery . Table and mutates it ."}, {"nl_input": "The provided Python code is a function that calculates the nth number in the Fibonacci sequence. The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1.\n", "url": "215b9f753c4bedbf5e252691c757d9ae", "gt": "a normal old python function to return the Nth fibonacci number ."}, {"nl_input": "The provided Python code is a function that converts a string to a date object. The function takes a string as input and checks if it is a valid date. If it is, it returns the date object. If not, it uses the dateutil library to parse the string and return the date object.\n", "url": "dfec582c3aa4ec5eaafa97cc052f017e", "gt": "Return a Python date that corresponds to the specified string representation ."}, {"nl_input": "This Python code is a function that attempts to make a request to a server. It uses the `requests` library to make the request. If the request fails due to an HTTP error code, it raises a `requests.RequestException`. If the request is successful, it returns the time taken to make the request and the response. If the request fails due to a socket error, it catches the exception and logs an error message. If the request fails due to a 406 status code (indicating a need for enrollment), it also logs an error message. If the request fails after several attempts, it logs an error message and raises the exception.\n", "url": "1e5bac42bcbc9caf07b1a590df790c7d", "gt": "Retry the request a few times before we determine it failed ."}, {"nl_input": "This Python function is used to read a JSON file and return the content as a Python object. The function is named `_read_json_file` and it takes a single argument, `json_file`, which is the path to the JSON file to be read. The function uses the `open` function to open the JSON file in read mode. Then, it uses the `json.load` function to parse the JSON file. The `object_pairs_hook` parameter is set to `OrderedDict`, which means that the JSON file will be parsed as a list of key-value pairs, where the keys are strings and the values are the parsed Python objects. The function finally returns the parsed JSON file as a Python object.\n", "url": "a0a2b0aaa72c7779cfe2be0738354f8c", "gt": "Helper function to read JSON file as OrderedDict"}, {"nl_input": "This Python code is used for replacing all occurrences of a dictionary of replacements in an input string. The dictionary keys are replaced with their corresponding values.\n", "url": "85d3c78c884351b4ba1ab4b9bbd83d89", "gt": "Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** ."}, {"nl_input": "This Python code is used for cross-joining two pandas DataFrames. The purpose of the code is to combine the columns of two DataFrames, df1 and df2, in a cross-joined manner. The cross-joined DataFrame will have all possible combinations of the columns from both df1 and df2.\n", "url": "347fd8e0a2fd4e7d60db3a5ab300aee6", "gt": "Return a dataframe that is a cross between dataframes df1 and df2"}, {"nl_input": "The provided Python code is a function that flattens a nested list. The function takes a list of any type (Any) as input and returns a new list that is a flattened version of the input list.\n", "url": "a585673f9c5f7a80e31dda59ae292d9a", "gt": "Converts a list of lists into a flat list . Args : x : list of lists"}, {"nl_input": "The Python code is a function that takes in four parameters: a string, a name, a style, and a when. It then uses the `color` function to change the color of the string based on the provided name, style, and when. The `write` function is then used to print the colorized string.\n", "url": "96a6f76f819c942ab3d6ea2451f8f2f3", "gt": "Write the given colored string to standard out ."}, {"nl_input": "This Python code is used to update global variables in a way that is incompatible with Java's classpath. It checks if the platform is not 'java' and is not a command-line interface (CLI), and if so, it removes the incompatible global variables from the global namespace.\n", "url": "db80e58cf17dd98d1e3e4ff2cdfd5bb0", "gt": "Patch the globals to remove the objects not available on some platforms ."}, {"nl_input": "The provided Python code is a function that takes a string as an argument and prints it with a timestamp. The function is named \"good\" and it's used to print a message with a timestamp. The message is prefixed and suffixed with two special characters (\"# \"). The timestamp is also included in the message.\n", "url": "e2aa9367d8be0f1d00d8b3baa409dd7a", "gt": "Print emphasized good the given txt message"}, {"nl_input": "This Python code is used to verify if a given file is a valid image file. The code uses the Pillow library to open an image file and then checks if the file is valid. It also verifies the CRC checksum of the image. If the image file is valid, it returns True, otherwise it returns False.\n", "url": "78471e6efe57a56cdcbd6dc99918d5e9", "gt": "Indicate whether the specified image file is valid or not ."}, {"nl_input": "The provided Python code is a function that is used to flush a specific data structure. The function is named \"Flush\" and it is used to clear or remove all elements from a specific data structure. The data structure it is used on is a doubly linked list (self._age).\n\nThe function works by continuously popping the leftmost element from the list (self._age) and then immediately killing (or removing) that node's data. This is done to ensure that the list is empty and ready for the next set of data to be flushed.\n\nThe function also resets the hash map (self._hash) to an empty dictionary. This is done to ensure that the hash map is ready for the next set of data to be flushed.\n", "url": "0669053426216dbed5fb7b5c5d5f0e2b", "gt": "Flush all items from cache ."}, {"nl_input": "This Python code is a function that prints an error message. The function takes a string `msg` as an argument and checks if the system is a POSIX-compliant system (i.e., a Unix-like system). If the system is POSIX-compliant, it prints the error message in ANSI color codes. If the system is not POSIX-compliant, it simply prints the error message without any color codes.\n", "url": "e018e33b4b9bfadcd5b2801d5f2bb07b", "gt": "Print an error message"}, {"nl_input": "This Python code is designed to remove specific keys from a dictionary. The function `multi_pop` takes a dictionary `d` and a variable number of arguments (`*args`). It then iterates over the provided arguments, and if a key is found in the dictionary, it removes that key-value pair from the dictionary and stores it in a new dictionary `retval`. Finally, it returns the new dictionary.\n", "url": "76651b46ae4fa8a26688ff91f2822a35", "gt": "pops multiple keys off a dict like object"}, {"nl_input": "This Python function is used to retrieve a specific attribute from a model's field. The function takes three parameters: the model, the model field, and the attribute to retrieve. It first creates a dictionary of all fields in the model using a list comprehension, where each field's name is used as the key and the field itself is the value. Then, it retrieves the attribute from the field with the given name using the getattr function.\n", "url": "4d40e0af146c3ed90744e11883779b2f", "gt": "Returns the specified attribute for the specified field on the model class ."}, {"nl_input": "This Python function, `fix_call`, is used to call a callable object with a variable number of positional and keyword arguments. If a `TypeError` is raised during the execution of the callable, the function `fix_type_error` is called to handle the exception. The `reexcept` statement is used to re-raise the exception, and the function returns the result of the callable.\n", "url": "20241a259de49265645c61a4331ec435", "gt": "Call callable ( * args ** kw ) fixing any type errors that come out ."}, {"nl_input": "This Python code is used to create a table map, which is a data structure that allows for efficient and easy manipulation of data. The table map is a dictionary-like object that maps headers to rows. The headers are represented as keys, and the rows are represented as values.\n\nThe code defines two functions, `make_table_map`, which takes a `table` and a `headers` as input. The `table` is a data table (like a pandas DataFrame) and the `headers` is a list of column names.\n\nThe function first initializes an empty dictionary `header_parts`. Then, for each header in the `headers`, it sets the corresponding key in `header_parts` to a string that represents the header.\n\nThe function then defines two lambda functions, `header_code` and `body_code`, which represent the headers and the body of the table map, respectively. These functions use the `header_parts` dictionary to generate the appropriate header and body for each row.\n\nFinally, the function returns a tuple containing the `header_code` and `body_code`. These are used to create the table map, which is a dictionary-", "url": "4bf3b9d30f1dc43cd9a257f7c001464b", "gt": "Create a function to map from rows with the structure of the headers to the structure of the table ."}, {"nl_input": "This Python function, `round_sig`, is designed to round a number to a specified number of significant figures. The function takes two parameters: `x` and `sig`. `x` is the number to be rounded, and `sig` is the number of significant figures to which `x` is to be rounded. The function returns the rounded value of `x`.\n", "url": "fcee00bb04d97a1c4b375046f0e3f094", "gt": "Round the number to the specified number of significant figures"}, {"nl_input": "This Python function checks if a specific interface exists in the running configuration of a device. It uses a configuration parser to find the lines that start with \"interface\" followed by the specified interface name. If such a line is found, the function returns True, indicating that the interface exists. If no such line is found, the function returns False, indicating that the interface does not exist.\n", "url": "7752c2898f7c89e4e3bbdcc1d36f55ee", "gt": "Check whether interface exists ."}, {"nl_input": "The provided Python code is a function that checks if a given input is a non-empty string. The function uses a try-except block to handle potential errors. If the input is not a string, it raises a TypeError. If the string is empty after stripping leading and trailing whitespace, it also raises a ValueError. If neither of these errors occur, the function returns True.\n", "url": "4c267ab3b1fbf3f4c4270f715d93e37c", "gt": "Validate if non empty string"}, {"nl_input": "This Python code is used to strip spaces from a string or list of strings. The purpose of this code is to remove any leading or trailing spaces from each element in a list. If the `join` parameter is set to `True`, the elements of the list are joined with a space character (`' '`) using the `join` method. If `join` is set to `False`, the list of strings is returned as is.\n", "url": "c2470f0a06ff47da7848e58f4b1660bb", "gt": "Cleans trailing whitespaces and replaces also multiple whitespaces with a single space ."}, {"nl_input": "The Python code is designed to check if a given variable is a tuple with exactly two elements, all of which are either integers or floating-point numbers.\n", "url": "78a1d1468f072b1981c8d8674ce82a8f", "gt": "Check whether the passed variable is a tuple with two floats or integers"}, {"nl_input": "This Python function is designed to fetch a job from a remote queue (RQ) system. The function takes two parameters: `self` and `rq_id`, and `rq_origin`. It first checks if `rq_id` or `rq_origin` are not set. If they are, it returns `None`. If they are set, it attempts to fetch the job with the given `rq_id` from the specified `rq_origin`. If a `NoSuchJobError` is raised, it returns `None`.\n", "url": "44da2dcc6b77c92c6d2ded457f0dff61", "gt": "The last RQ Job this ran on"}, {"nl_input": "The provided Python code is a function that decodes a value from a given stream. The function first decodes the length of the value, then it unpacks the value from the stream. The length of the value is decoded using the `decode_length` function, and the actual value is unpacked using the `unpack_value` function.\n", "url": "3ac89cc6e7278682dcf430aa32e4074e", "gt": "Decode the contents of a value from a serialized stream ."}, {"nl_input": "The provided Python code is a function that rotates a list by a certain number of steps. The function takes two parameters: a list `l` and an optional parameter `steps`. If no `steps` parameter is provided, it defaults to 1. The function then checks if the length of the list `l` is not 0. If it is, it calculates the remainder of the `steps` parameter divided by the length of the list `l`. This remainder is then assigned to `steps`. If `steps` is not 0, it extracts the first `steps` elements from the list `l` and stores them in a new list `firstPart`. Then, it deletes the first `steps` elements from the original list `l`. Finally, it extends the list `l` with the `firstPart` list.\n", "url": "707569fdd77ebde2ce9e44aeb15df944", "gt": "r Like rotate but modifies l in - place ."}, {"nl_input": "This Python code is used to convert a numpy ndarray to a string. The purpose of this code is to convert a numpy ndarray to a string, where the string is formatted to include the shape of the array and the data type of the array.\n", "url": "d0df2377b019e7963fd32ca8ad6667b7", "gt": "Format numpy array as a string ."}, {"nl_input": "This Python code is designed to find duplicate items in a list. It uses a dictionary to keep track of the indices of each item in the list. If an item is encountered for the first time, its index is added to the list in the dictionary. If an item is encountered again, its index is appended to the list in the dictionary. The function then returns the dictionary of item indices.\n", "url": "f663b65182d638f4a50a8edd8d907ce2", "gt": "Return dict mapping item - > indices ."}, {"nl_input": "This Python code is used to add execute permission to a file. The purpose of this code is to change the permissions of a file to allow it to be executed.\n", "url": "e398c233699ff803f1d5a5d64f31d77c", "gt": "Add executable permissions to the file"}, {"nl_input": "This Python function checks if a given text string starts with any of the prefixes provided in a list. It does this by iterating over the list of prefixes and checking if the text string starts with each one. If it does, it immediately returns True. If it goes through all the prefixes without finding a match, it returns False.\n", "url": "848410ee09fccd5cd9d637b91b29dab9", "gt": "Return True if the given string starts with one of the prefixes in the given list otherwise return False ."}, {"nl_input": "This Python function is used to check if a given item is a directory. It takes as input the parent directory and the item to be checked, and returns True if the item is a directory and False otherwise.\n", "url": "ca432f95f8726269ef3e7f30fd1a43ef", "gt": "Helper that returns if parent / item is a directory ."}, {"nl_input": "The provided Python code is a function that takes a 2D numpy array and a value as input, and returns the index of the first occurrence of the input value in the array.\n", "url": "94119862fe17106353860bbfe1d89231", "gt": "Return the indices of all the val in m"}, {"nl_input": "This Python code is a recursive function that checks if a given input list is a valid representation of an empty tree. An empty tree is a tree where each node has no children. The function iterates over each item in the input list, and for each item, it checks if it is a list. If it is not a list, it is a leaf node in the tree, and the function returns False. If it is a list, the function recursively calls itself to check the subtree rooted at this item. If the subtree is not empty, the function returns True. If the subtree is empty, the function returns False.\n", "url": "d77464bbd1d4690e450af59886ceb745", "gt": "Recursively iterate through values in nested lists ."}, {"nl_input": "The provided Python code is a function that handles a double click event on a wxPython application. The function is named \"OnDoubleClick\" and it takes an event object as an argument. The event object represents the event that has occurred in the application.\n\nThe function first finds the node at the position of the event using the \"findNodeAtPosition\" method of the \"HotMapNavigator\" class. This method takes the \"hot_map\" object and the \"event\" object as arguments.\n\nIf a node is found, the function posts an event to the application. The event is of type \"SquareActivationEvent\" and it takes the \"node\", \"point\" and \"map\" as arguments. The \"node\" is the node that was clicked, \"point\" is the position of the click, and \"map\" is the \"self\" object, which is the instance of the class.\n\nIn summary, this function is designed to handle the double click event on a wxPython application, and if a node is clicked, it posts an event to the application.\n", "url": "18a4c302730948b48a653fb99dfe5f4f", "gt": "Double click on a given square in the map"}, {"nl_input": "This Python code is a recursive Depth-First Search (DFS) algorithm that traverses a graph data structure. The purpose of this code is to find all the nodes that are reachable from a given node in a graph.\n", "url": "a0a4bfd06d70e1443c66598deeeef9f6", "gt": "DFS detect connected component recursive implementation"}, {"nl_input": "This Python code is designed to find the longest substring in a list of strings that is a substring of all the strings in the list. It does this by iterating over all possible lengths of substrings and checking if they are present in all strings. If a longer substring is found, it is stored as the longest one.\n", "url": "08a0e7248e853cbfb87305700f081955", "gt": "Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python"}, {"nl_input": "This Python function, `_dotify`, is used to convert a string `data` into a dot-separated string. The function takes two parameters: `cls`, which is a class object, and `data`, which is a string to be converted. The function iterates over each character in the string, and if the character is in the `PRINTABLE_DATA` attribute of the class, it replaces the character with a dot. If the character is not in the `PRINTABLE_DATA` attribute, it leaves the character as is. The function then joins all the characters together into a single string, with a dot as the separator.\n", "url": "78ab1db794bcc9dca29d020e49f51eb6", "gt": "Add dots ."}, {"nl_input": "The provided Python code is a function that takes a 2D numpy array (a) as input and returns a 1D numpy array (s). The function is designed to calculate some statistics based on the input array.\n\nThe function first initializes a 1D numpy array (s) with 6 elements, all set to zero. Then, it assigns the values from the input array (a) to the corresponding positions in the array (s).\n\nThe last two lines of the function are setting the values of the 6 elements in the array (s) to the corresponding values from the input array (a).\n\nThe function is named 'a2s' to indicate that it's a function that calculates some statistics from a 2D numpy array.\n", "url": "7d7c9d0f3deb7edef22d856213841fb9", "gt": "convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )"}, {"nl_input": "This Python code is converting a 2D array (list of lists) into a 1D vector. The function `arr_to_vector` takes a 2D array as input, calculates the total number of elements in the 2D array, and then converts the 2D array into a 1D vector.\n", "url": "cdbc3b94d8dc579d2fdda174b7d41881", "gt": "Reshape a multidimensional array to a vector ."}, {"nl_input": "The provided Python code is a function that takes a model object as an argument and assigns it to a specific index in a list. The function is used to register a model in a lemmatisation process. The model is a class instance, and the lemmatisation process is a process of converting words into their base or root form.\n", "url": "66f6db21565028d4fad0f3cfa2faa44a", "gt": "Register a modele onto the lemmatizer"}, {"nl_input": "The provided Python code is a function that renders a table from a given data and fields. The function uses the `datalab.utils.commands.HtmlBuilder.render_table` method to render the table.\n", "url": "521b584906bc8240a28beac05fa8a4dd", "gt": "Helper to render a list of dictionaries as an HTML display object ."}, {"nl_input": "This Python function converts a Unix timestamp (ms) to a datetime object in Python's datetime module. The function takes a Unix timestamp in milliseconds as input, converts it to a datetime object, and then adjusts the timezone to UTC.\n", "url": "b17378f402d83c02a4e7bf5b967bca23", "gt": "Converts a millisecond accuracy timestamp to a datetime"}, {"nl_input": "The provided Python code is a function that converts a string to CamelCase. The function takes a string as input, splits it into words using underscores as separators, and then capitalizes the first word and joins the rest with lowercase letters.\n", "url": "c954b335d705a71796714fc13a69018b", "gt": "Convert to camel case ."}, {"nl_input": "This Python function, `get_lines`, is designed to read a file line by line and return the line at the specified line number. The function takes two parameters: a file handle (`handle`) and a line number (`line`). It iterates over the file handle, and when it encounters the specified line number, it returns the line.\n", "url": "abc96f2c92b62e0900fb5359682ed0f1", "gt": "Get zero - indexed line from an open file - like ."}, {"nl_input": "This Python function is used to get a variable from a dictionary, _VARS. If the variable is not in the dictionary, it is created using the factory function provided.\n", "url": "a0327bfe2ebddf93ceabf0d5ccb9f890", "gt": "Gets a global variable given its name ."}, {"nl_input": "This Python function `replace_all` takes a string `text` and a dictionary `dic` as input. It iterates over the dictionary, replacing each key-value pair in the `text` with the corresponding value from the `dic`. The function then returns the modified string.\n", "url": "248a51a67e1e4f407628e9ccafebb8d6", "gt": "Takes a string and dictionary . replaces all occurrences of i with j"}, {"nl_input": "This Python code is designed to check for missing values (NaNs) in a given dataset (X). If such values are found, it will print a warning message and count the number of rows with NaNs. The percentage of rows with NaNs is also calculated and displayed. Only complete rows with NaNs will be plotted.\n", "url": "ad5bd51b70e1f23385706f6e87a1af60", "gt": "Warn if nans exist in a numpy array ."}, {"nl_input": "This Python code is a method that is being called as a function. The purpose of this code is to define a special method called `__call__`, which is a special method in Python that is used to define the call operation. The `__call__` method is called when a function or an instance of a class is called as a function.\n\nThe method takes three arguments: `self`, `obj`, and `*arg`. `self` is a reference to the instance of the class, `obj` is the object to which the method is being called, and `*arg` are the arguments that are passed to the method.\n\nThe `bound_method` is a bound method that is being returned by the `__get__` method of the `_manager` attribute of the instance `obj`. This method is then called with the `*arg` and `*kw` arguments.\n\nThe `return` statement returns the result of the call to the bound method.\n", "url": "efb9ec101eb27e6bc1248d7878ee42a9", "gt": "Call the unbound method . We essentially build a bound method and call that . This ensures that the code for managing observers is invoked in the same was as it would be for a bound method ."}, {"nl_input": "The provided Python code is a function that converts a list of strings into a single string, separated by a specified separator.\n", "url": "bde3fb5a6302302752336ef6267a3877", "gt": ">>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7"}, {"nl_input": "This Python code is used to split a string into multiple substrings of a specified length. The function `_split_str` takes two arguments: a string `s` and a number `n`. It splits the string `s` into multiple substrings of length `n` and returns a list of these substrings.\n", "url": "76cd4a4bb3cb411efcd7e36430af7631", "gt": "split string into list of strings by specified number ."}, {"nl_input": "This Python code is a custom sorting function that sorts a list of objects based on a key function. The key function is used to extract a sorting key from each object, and the list of objects is sorted based on these keys.\n", "url": "4aace1140f498da16c231c1d664bc11c", "gt": "Order - preserving sorting function ."}, {"nl_input": "This Python code is used to create a directory if it doesn't already exist. The function `mkdir` takes two arguments: `dir` and `enter`. `dir` is the name of the directory to be created, and `enter` is a boolean value that determines whether to create the directory if it doesn't exist.\n\nIf the directory `dir` does not exist, the function uses the `os.makedirs` function to create the directory. This function creates all necessary parent directories in the path specified by `dir`.\n\nThe function also checks if the directory `dir` exists using the `os.path.exists` function. If the directory does not exist, the function will not proceed to create the directory.\n", "url": "92c4f725f0d1d243dd04b7d28c2f983f", "gt": "Create directory with template for topic of the current environment"}, {"nl_input": "The provided Python code is a function that sanitizes a given string by converting it to lowercase, replacing non-alphanumeric characters with underscores, and removing any underscores that are adjacent to each other.\n", "url": "67e48b1877d796ea66fb7448c13e582f", "gt": "Remove non - alphanumerical characters from metric word . And trim excessive underscores ."}, {"nl_input": "The provided Python code is a function that renames the leaf labels in a tree structure based on the number of the labels. The function is named `_renamer` and it takes a parameter `tre` which is supposed to be a tree structure. The function replaces the leaf labels in the tree with the names of the labels from a list. The names are obtained from a dictionary `self.samples` where the keys are the names of the labels and the values are the corresponding numbers. The function then returns a new tree structure with the renamed leaf labels.\n", "url": "a35d426aad387434705c007efdc6f5d8", "gt": "renames newick from numbers to sample names"}, {"nl_input": "This Python code is used to calculate the greatest common divisor (GCD) of a list of numbers. The GCD is the largest number that can divide all the numbers in the list without a remainder. The code uses a method to calculate the GCD of two numbers, and then uses this method to calculate the GCD of a list of numbers.\n", "url": "ea16c18890317cf7a6b4d6a0d1d42fbd", "gt": "Returns the greatest common divisor for a sequence of numbers . Uses a numerical tolerance so can be used on floats"}, {"nl_input": "This Python code defines a function `is_listish` that checks if a given object is a list, tuple, or set. The function uses the `isinstance` function to check if the object is an instance of any of these types. If the object is a list, tuple, or set, the function returns `True`. Otherwise, it calls the function `is_sequence` to check if the object is a sequence (like a list, tuple, or set).\n", "url": "1cf7b63ec959e949becf181328c3cd52", "gt": "Check if something quacks like a list ."}, {"nl_input": "The provided Python code is a function that takes a string of comma-separated values and splits them into a list. The function first strips any leading or trailing whitespace from each value, then it splits the string into a list of individual values. If the list contains only one element, it simply returns the original list.\n", "url": "83b708851d8a2b1f85ac0c32273ee690", "gt": "Split a string with comma or space - separated elements into a list ."}, {"nl_input": "The provided Python code is a function that retrieves the data type of a specific column in a given table. The function is named \"get_datatype\" and it takes two parameters: \"table\" and \"column\". The function then returns the data type of the column in the specified table. The data type is then converted to uppercase using the upper() method.\n", "url": "9a59c46a79ec9a1b3731b4548cca5a35", "gt": "Returns database SQL datatype for a column : e . g . VARCHAR ."}, {"nl_input": "The provided Python code calculates the median of a list of numbers. The purpose of this code is to find the middle value in a sorted list of numbers. If the list is empty, it raises a StatisticsError. If the list has an odd number of elements, the median is the middle value. If the list has an even number of elements, the median is the average of the two middle values.\n", "url": "997b00081c660133f7a1864bfcd2e171", "gt": "Return the high median of data ."}, {"nl_input": "The provided Python code is a function that converts a pandas Series into a numpy array, and reshapes the array to match the original series' shape.\n", "url": "82304e3180b3ef100b8e39ece9ac1d39", "gt": "Convert arrays of datetime . datetime and datetime . timedelta objects into datetime64 and timedelta64 according to the pandas convention ."}, {"nl_input": "This Python function `make_coord_dict` takes a coordinate object as input, which is expected to have attributes 'zoom', 'column', and 'row'. It then returns a dictionary with the values of these attributes, converted to integers if they are exact integers. The dictionary keys are 'z', 'x', and 'y', and the values are the corresponding attributes of the input object.\n", "url": "f67b0373a9f046509fad8d0562410c39", "gt": "helper function to make a dict from a coordinate for logging"}, {"nl_input": "This Python code is used for a specific task. The task is to perform a Fast Fourier Transform (FFT) on two complex arrays, `fdata` and `s`, and then perform an inverse Fast Fourier Transform (IFFT) on the result. The result is a complex array of length `Nmax + 1`, which represents the convolution of the two input arrays.\n", "url": "5cf5cc55de5757c435dcdbdd195fa0d1", "gt": "Assume fdata has even rows"}, {"nl_input": "This Python code is a function that flattens a tensor (a) except for the last element. The function uses TensorFlow (a library for machine learning) to perform this operation.\n\nThe function takes a tensor (a) as input. It reshapes the tensor to a 1D tensor by setting the first dimension to -1 and the second dimension to the last dimension of the original tensor. If TensorFlow is not running in eager mode, it sets the shape of the reshaped tensor to be the same as the original tensor, except for the first dimension which is set to None. Finally, it returns the reshaped tensor.\n", "url": "72a8ef07c2b3b7ac06dd53c3280aa1f4", "gt": "Flatten all dimensions of a except the last ."}, {"nl_input": "This Python function is designed to retrieve the nth element from a list in a more efficient way than using the `iloc` method. The function takes two parameters: an array `arr` and an integer `n`. It tries to return the nth element of the array using the `iloc` method, which is more efficient than using the `loc` method. If an error occurs (such as if `n` is out of range for the array), it catches the `KeyError` and `IndexError` exceptions, and returns `np.nan` (a special value in numpy that represents \"not a number\").\n", "url": "95fe08e717d93da59f9b5c17579ef66e", "gt": "Return the nth value of array"}, {"nl_input": "The provided Python code is a function that takes three arguments: a string `text`, a list of styles, and a boolean `reset`. The function stylizes the given text by applying the provided styles. If the `reset` argument is `True`, it appends the attribute \"reset\" to the styles. The function then returns a string that is the concatenation of the styles, the text, and the \"reset\" attribute if `reset` is `True`.\n", "url": "4a001865bf994287cdf1092a7be76350", "gt": "conveniently styles your text as and resets ANSI codes at its end ."}, {"nl_input": "The Python function `monthly` is designed to return the first day of the current month. It uses the `datetime.date.today` method to get the current date, and then uses the `datetime.date` constructor to create a new `date` object with the year and month of the current date. The `date.year` and `date.month` attributes are then used to set the year and month of the new `date` object, respectively. The `date.day` attribute is set to 1 to ensure the first day of the month is returned.\n", "url": "74483d2e3e4816f59f302670fc2add82", "gt": "Take a date object and return the first day of the month ."}, {"nl_input": "This Python code is used to run a specific command in a specific context. The command to be run is determined based on the input parameters. If `all` is set to `True`, the command is 'tox', otherwise it's 'py.test'. If `verbose` is set to `True`, the command is also 'verbose' (i.e., '-v'). The command is then run in the context using the `run` method of the context object. The return code of the command is then returned.\n", "url": "12a70ddb1c8efce59ed94b4732ccce1b", "gt": "Run the tests ."}, {"nl_input": "The provided Python code is a function that normalizes a given vector. The function takes a vector as input, calculates the sum of the squares of all elements in the vector, and then takes the square root of this sum. The result is the normalized version of the input vector.\n", "url": "f40fe1d1e953f62337812550e43f7ebc", "gt": "Get unit vector for a given one ."}, {"nl_input": "The provided Python code is a function that takes a date string in the format 'mm/dd/yyyy' and returns the corresponding year. If the date string is not in the correct format, the function returns 0.\n", "url": "6c997aefc629ec3ddb36fa1869964c25", "gt": "Returns the year ."}, {"nl_input": "This Python function, `_rank`, is used to rank a list of objects based on a certain attribute. The function uses the `nlargest` function from the `heapq` module to find the n largest elements in the ranking list. The key for `nlargest` is the `ranking.get` method, which is used to get the attribute of each object in the list.\n", "url": "4ffacc05681c3e55136ae1aca8a91b26", "gt": "return the first n sentences with highest ranking"}, {"nl_input": "This Python function is designed to generate a JSON response from a given data and a template. The function uses Django's `render_to_string` and `json_encode` functions to render a template with a given context and then encode the resulting data as JSON. The function then returns an HTTP response with the JSON data and the 'application/json' content type.\n", "url": "0aa7b5cc50b7b2fc58973bcd7bb80020", "gt": "Old style use JSONTemplateResponse instead of this ."}, {"nl_input": "This Python code is used to find the row in a list of rows with the maximum value in a specific column. The function `argmax` takes a list of rows and a column name as input, and returns the row with the maximum value in that column.\n", "url": "b28453d2e0b8222a369ff53ddfa194a9", "gt": "Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows ."}, {"nl_input": "The provided Python code is a function that replaces all occurrences of a specified string in a given string. The function takes two parameters: the main string (`s`) and a list of strings to be replaced (`replace`). It then iterates over the list of replacements, replacing all occurrences of each string in the main string with the next string in the list.\n", "url": "5cc38f990774f5e46761e330e30ba551", "gt": "Replace multiple values in a string"}, {"nl_input": "The Python code is a function that reads a file and returns its content without any leading or trailing whitespace. The function is named \"get_property\" and it takes a parameter \"filename\". The file is opened using the \"with\" statement, which ensures that the file is properly closed after it is no longer needed. The content of the file is read into a string using the \"read\" method, and then the string is stripped of leading and trailing whitespace using the \"strip\" method.\n", "url": "e49d4cb2c549747b334ad86c75fed3c3", "gt": "Opens the file and reads the value"}, {"nl_input": "This Python function, `as_list`, is designed to convert a class instance into a list format. The purpose of this function is to convert the instance's name and value attributes, as well as the list of its child instances into a list format.\n", "url": "f56f6544f22eb714a280494b428d028c", "gt": "Return all child objects in nested lists of strings ."}, {"nl_input": "This Python code is designed to calculate the median of a list of numbers. The function `fast_median` takes a list of numbers as input and returns the median of the list. If the list is empty, it returns a masked value.\n", "url": "86a3784ce948451d6f92d9d8027f66e0", "gt": "Fast median operation for masked array using 50th - percentile"}, {"nl_input": "The Python code is designed to terminate a process if it is still alive. The function `kill_mprocess` takes a process as an argument and checks if the process is still alive. If the process is alive, it terminates it and returns `True`. If the process is not alive, it returns `False`.\n", "url": "ff5650a6fb621a5dd82d24d3fdc0acc1", "gt": "kill process Args : process - Popen object for process"}, {"nl_input": "The provided Python code is a function that checks if a given pair of elements exists in a list. The function takes two parameters: a list of elements and a pair of elements to search for. It iterates over the list, and for each element, it checks if it is equal to the given pair. If it is, it returns the index of the element in the list. If the function has checked all elements and hasn't found a match, it returns -1.\n", "url": "ede2661d49f95400193f400c777d9bb7", "gt": "If pair is in search_list return the index . Otherwise return - 1"}, {"nl_input": "The provided Python code is a function that selects a specific field from a given table in a database. The function takes three parameters: the table, the field, and an optional parameter for a complement. If no complement is provided, the function will return the field. If a complement is provided, the function will return the complement of the field.\n", "url": "6d691369f43d77bf61e57088cbb540aa", "gt": "Select rows where the given field evaluates True ."}, {"nl_input": "The provided Python code is a function that checks the syntax of a URL. The function takes a URL as an input and returns None if the URL is not valid.\n", "url": "2aee16e7ce75310a4402b9b751615bed", "gt": "Check the syntax of the given URL ."}, {"nl_input": "This Python function is designed to format a title string. The purpose of this function is to prepend a specific string to the beginning of a given title string.\n", "url": "bc4cedef2d13710f541bee8a0b25cc9b", "gt": "format mpv s title"}, {"nl_input": "This Python code implements a Fast Fourier Transform (FFT) bandpass filter. The purpose of this filter is to eliminate frequencies outside a certain range (specified by the 'lowcut' and 'highcut' parameters) from the input data. The FFT is used to transform the input data into the frequency domain, and then the filter is applied to this transformed data. The filtered data is then transformed back into the time domain using the inverse Fast Fourier Transform (IFFT). The filter is normalized to ensure that the output data has the correct amplitude.\n", "url": "86780644487ad34f70f295b2b0d48f74", "gt": "http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801"}, {"nl_input": "This Python code is used to calculate the cumulative distribution function (CDF) of a normal distribution. The CDF is a measure of the probability that a random variable is less than or equal to a given value.\n\nThe function `normcdf` is used to calculate the cumulative distribution function of a normal distribution. The function takes two arguments: `x` and `log`. `x` is the value at which the cumulative distribution function is to be calculated. If `log` is `True`, the function calculates the logarithm of the cumulative distribution function. If `x` is a scalar, the function calculates the cumulative distribution function for that value. If `x` is an array, the function calculates the cumulative distribution function for each element in the array.\n\nThe function first checks if `x` is a scalar or an array. If `x` is a scalar, it is copied and passed to the function `flib.normcdf`. If `x` is an array, it is passed to the function `np.atleast_1d` to ensure that it is a 1-dimensional array. The function then calculates the cumulative distribution function for each", "url": "ea825e032e07f3974f9144799bf7ae57", "gt": "Normal cumulative density function ."}, {"nl_input": "This Python function is used to generate a string that represents a line in a tree structure. The function takes an optional parameter `no_type` which defaults to `False`. If `no_type` is `True`, the function will return a string that represents the line without the type name. Otherwise, it will return a string that represents the line with the type name.\n", "url": "e7c7a5c899b079bc11587820e4bc5bc0", "gt": "Return the receiver s contribution to tree diagram ."}, {"nl_input": "This Python code is used to retrieve an item from a list of items based on its ID. The purpose of this code is to find and return an item from a list of items that has a matching ID.\n", "url": "9bc06fc86f744f32effbee5c3fb819f1", "gt": "Return a JSSObject for the element with ID id_"}, {"nl_input": "The provided Python code is a function composition function. It takes a list of functions as input and returns a new function that applies the list of functions in sequence to a given input.\n", "url": "3489959eeae90ba054249170c05b205f", "gt": "composion of preprocessing functions"}, {"nl_input": "This Python function is designed to convert a binary address into an IPv4 address. The binary address is packed into a 32-bit unsigned integer, and then the integer is converted into a string using the `inet_ntop` function from the `socket` module, which converts an IP address from a string format to a binary format.\n", "url": "8df29dc77c73b7c88e379a59e99ce43c", "gt": "Converts binary address to Ipv4 format ."}, {"nl_input": "This Python function, `print_log`, is used to log messages to the standard error stream (`sys.stderr`). The function takes two or more arguments: `text` and `colors`. The `text` argument is the message to be logged, and the `colors` argument is a list of color codes to be used for formatting the log message.\n\nThe function uses the `sprint` function from the `sprint` module to format the log message, and then writes it to the standard error stream. The color codes are formatted using the `format` function and the `*` operator to unpack the list of color codes.\n\nThe log message includes the name of the script that is running the function, followed by the `text` argument. The color codes are also included in the log message.\n\nThe `+ \"\\n\"` is used to ensure that each log message is written on a new line.\n", "url": "336b9bafdd37d354437a6c0bf18ca5ba", "gt": "Print a log message to standard error ."}, {"nl_input": "This Python code is used to fetch the names of all tables in a given SQLite database connection. The purpose of this code is to provide a list of all table names in the database.\n", "url": "b08c3d745d6f7e646d2b3ccf262f3d81", "gt": "Return a list of the table names in the database ."}, {"nl_input": "This Python code is a function that checks if a resource exists in a given database. The function takes a self parameter, which is a reference to the instance of the class. The function then uses the r_session attribute of the instance to send a HEAD request to the database URL. If the response status code is not 200 or 404, it raises an HTTPError. Finally, it checks if the response status code is 200, which means the resource exists.\n", "url": "02bd43c82e1cda155a1f8e42686f5917", "gt": "Performs an existence check on the remote database ."}, {"nl_input": "This Python function is used to retrieve a system variable from a remote server. The function takes two parameters: 'remote' and 'name'. If a server object is not None, it will call the 'getSystemVariable' method of the server object with the 'remote' and 'name' parameters.\n", "url": "864a4dafef1292703051736e4cad33c7", "gt": "Get single system variable from CCU / Homegear"}, {"nl_input": "The provided Python code is a function that generates a file path based on the remote root and a package name. If a package name is provided, it appends it to the remote root. If not, it simply returns the remote root. This function is used in a class to generate file paths in a distributed system.\n", "url": "9c7eee617072fa977274be4dcd7f6281", "gt": "The full remote import path as used in import statements in . go source files ."}, {"nl_input": "This Python code is designed to delete all files in the directory that match a given pattern. The `glob` module in Python is used to find all files in a directory, and the `os` module is used to remove these files.\n", "url": "28ecff7f6156dd9d5d8dd360941562f7", "gt": "Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) ."}, {"nl_input": "The provided Python code is a function that takes three parameters: a handler, an item, and a value. It then formats the value list into a string, with each value separated by a comma. The function uses the `join` method to combine the string values into a single string, and the `str` function to convert each value to a string. The result is then returned.\n", "url": "c94f78d28d8b78bbf30d3d201d9059b3", "gt": "Format list ."}, {"nl_input": "The provided Python code is a function that reads a stream and calculates the total size of the data read. The function reads data in chunks of 65536 bytes (64KB) and keeps track of the total size of the data read. If there is no more data to read, it breaks the loop and returns the total size.\n", "url": "c3f7e9b39fe78dfbe1d4bccc994e122e", "gt": "Reads a stream discarding the data read and returns its size ."}, {"nl_input": "The Python function `out` is a method that is used to output a message to the console. The purpose of this function is to provide a simple and efficient way to log messages to the console. The function takes two parameters: `output`, which is the message to be printed, and `newline`, which is a boolean value that determines whether a newline character should be added after the message.\n", "url": "828984305b0d337fae5e014dce303d6e", "gt": "Outputs a string to the console ( stdout ) ."}, {"nl_input": "The provided Python code is a function that calculates the number of even numbers in a group of numbers. The function takes two parameters: a number and a group. The number is divided by the group using the `divmod` function, and the quotient and remainder are stored in separate variables.\n\nThen, the function uses the `zip_longest` function to combine the count and 1s into chunks, filling in 0s where there are fewer elements.\n\nNext, the function calculates the sum of each chunk using a list comprehension.\n\nFinally, the function logs the chunks and returns the chunks.\n", "url": "9802db16c86d0ad727009b0976a80804", "gt": "Divide a number into a list of numbers as even as possible ."}, {"nl_input": "The provided Python code is used to send a file to a remote FTP server. The code defines a method named `_send_file` that takes a filename as an argument. The method uses the `ftplib` module to establish a connection to the FTP server, logs in with the provided username and password, enables passive mode for data transfer, and then uploads the file with the name of the file in the current directory.\n", "url": "b930dc0a570db92902aafa697c7c432a", "gt": "Sends a file via FTP ."}, {"nl_input": "The provided Python code is a function that takes a collection (like a list, tuple, or string) and converts it into a list. The function iterates over the collection, appending each element to a new list.\n", "url": "9e445111477bc6119a47621daa6fed03", "gt": "This is a workaround where Collections are no longer iterable when using JPype ."}, {"nl_input": "This Python code is designed to safely round a given value to a specified number of decimal places. The function `_saferound` takes two arguments: `value` and `decimal_places`. It first tries to convert the `value` to a float. If this fails, it returns an empty string. If the conversion is successful, it then formats the float to a string with a specified number of decimal places using the format string '%%.%df'. The function finally returns the formatted string.\n", "url": "dde986d7cf845f71dfa4d9e8aba699a2", "gt": "Rounds a float value off to the desired precision"}, {"nl_input": "This Python code is used to convert a given date into a Unix timestamp (number of seconds since 1970-01-01 00:00:00 UTC). The Unix timestamp is a time-stamp that represents the number of seconds that have passed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC).\n", "url": "c45019dbaf87a4dda8ed93145a8d72d9", "gt": "date to unix timestamp in milliseconds"}, {"nl_input": "This Python code is designed to find the distinct elements in a list. The function `distinct` takes a list `xs` as an argument and returns a new list that contains only the unique elements from the original list.\n", "url": "328596b5f38ea5aea10ae6d53e289f18", "gt": "Get the list of distinct values with preserving order ."}, {"nl_input": "The provided Python code is a method that is used to read a private attribute of an object. The method is named \"value\" and it is a part of a class. The purpose of this method is to retrieve the value of a private attribute (protected attribute) of an object. If the attribute is not set, it raises an AttributeError.\n", "url": "4db783ef8b2b3e7c49e8863ce241b880", "gt": "Value of property ."}, {"nl_input": "This Python code is a function for performing a linear regression analysis on a given series of data. The function takes a series of data as input, calculates the mean of the non-None values, and then performs a linear regression analysis on the data. The results of the analysis are returned as a factor and an offset. The factor represents the slope of the regression line, and the offset is the y-intercept of the line.\n", "url": "bf587f6399e742e7aba0f76f6ecacae3", "gt": "Returns factor and offset of linear regression function by least squares method ."}, {"nl_input": "This Python code is a function that takes a set (gset) and an element (elem) as input. It either removes the element from the set using the 'remove' method if it exists, or deletes the element from the set using the 'del' statement if it doesn't. The function then returns the element.\n", "url": "0a08a131b7f20c6ae80cbd8db43c9210", "gt": "Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}"}, {"nl_input": "The Python function `logout` is designed to log out a user from a Flask application. The function takes a parameter `cache` which is typically a cache object used for caching data. The function then sets the value of the 'auth0_key' in the Flask session to None, effectively logging out the user. It also clears the session to ensure no data is left in it. Finally, it returns True to indicate that the logout operation was successful.\n", "url": "6b1aedce31fc54b676ef475bbccca0f4", "gt": "Logs out the current session by removing it from the cache . This is expected to only occur when a session has"}, {"nl_input": "This Python function is used to get the background color of a cell in a table. The function takes as input the cell's key, which is used to access the cell's attributes in a dictionary. It then extracts the \"bgcolor\" attribute from these attributes, converts it to a RGB tuple, and returns it.\n", "url": "85dfbd57feec7e7e4e52db546ce843e9", "gt": "Returns background color rgb tuple of right line"}, {"nl_input": "This Python function is used to calculate the probability density function (PDF) of a normal distribution. The function takes three parameters: x (the value at which to evaluate the PDF), mu (the mean of the distribution), and std (the standard deviation of the distribution). The function returns the value of the PDF at x.\n", "url": "f5cbc71ac811b41099e04e17f8e31c77", "gt": "Probability density function ( normal distribution )"}, {"nl_input": "This Python code is used to retrieve the UUID (Universally Unique Identifier) of the current system. The UUID is a 128-bit value used to identify computers and other devices. It is generated by Microsoft's cryptography subsystem.\n\nThe code first tries to import the _winreg module, which is a part of the Windows Registry API. If this module is not available, it falls back to the winreg module from the Python standard library.\n\nThe code then connects to the Windows Registry using ConnectRegistry and opens the key \"Software\\Microsoft\\Cryptography\". This key contains the value \"MachineGuid\", which is the UUID of the system.\n\nThe code then attempts to retrieve the value of \"MachineGuid\" from the key. The value is returned as a list of bytes, and the first element of this list is the UUID.\n\nFinally, the code closes the key and the registry.\n", "url": "e3bf9172dd49a9a59f04d9306fdbf881", "gt": "Get the MachineGuid from HKEY_LOCAL_MACHINE \\ Software \\ Microsoft \\ Cryptography \\ MachineGuid"}, {"nl_input": "This Python function `yaml_to_param` is designed to convert a YAML object to a parameterized format. The function takes two parameters: an object `obj` and a string `name`. It then uses the `yaml` library to convert the YAML object to a string, and finally returns the result of the `from_pyvalue` function, which is a custom function that converts a YAML string to a Python value.\n", "url": "f80d296aa7ce2fb9662847a78d719948", "gt": "Return the top - level element of a document sub - tree containing the YAML serialization of a Python object ."}, {"nl_input": "The provided Python code is a function definition for a function that models an exponentially-weighted function. The function takes four parameters: x, a, tau, and c. The function is designed to model a function of the form: a * exp(-x/tau) + c.\n", "url": "ce8760834322972b4fa83206ed10c958", "gt": "Function used to fit the exponential decay ."}, {"nl_input": "This Python code is designed to invalidate a specific cache in a CPU. The function `invalidate_cache` takes three parameters: `cpu`, `address`, and `size`. The `cpu` parameter is expected to be an object representing the CPU, while `address` and `size` are expected to be integers representing the address and size of the cache to be invalidated, respectively.\n\nThe function first accesses the instruction cache of the CPU using the `instruction_cache` attribute. Then, for each offset in the range from 0 to the size of the cache, it checks if the address plus the offset is present in the cache. If it is, the corresponding cache entry is deleted from the cache.\n\nThe purpose of this code is to ensure that the CPU's instruction cache is updated to reflect the latest data, which is crucial for the performance of the CPU.\n", "url": "c8cfb7fd4310c734636a046495ee2078", "gt": "remove decoded instruction from instruction cache"}, {"nl_input": "This Python code is used to read the first line of a file. The purpose of this code is to read the first line of a file and return it. If the file contains only one line, the line is decoded and stripped of any leading or trailing whitespace, and the function returns this line as the default value.\n", "url": "c506dda59325d20d5965f344e05d1d0e", "gt": "Returns the first line of a file ."}, {"nl_input": "This Python code is used to calculate the length of a list of tokens, excluding those with a zero-width escape character. The function `token_list_len` takes a list of tokens as input and returns the sum of the lengths of the tokens that do not have a zero-width escape character.\n", "url": "45e6a2312d51a32582aceb7c2ab19780", "gt": "Return the amount of characters in this token list ."}, {"nl_input": "This Python function, `fuzzy_get_tuple`, is used to retrieve a value from a dictionary based on an approximate key. The function takes several parameters including a dictionary object, an approximate key, a list of keys, a boolean indicating whether to return the key and value, a similarity threshold, and a default value to return if the key is not found.\n", "url": "227eced7ff543a599d686706f73f1699", "gt": "Find the closest matching key and / or value in a dictionary ( must have all string keys! )"}, {"nl_input": "The provided Python code reads a set of unique strings from a file and stores them in a set data structure. The set is created by reading the file line by line, stripping off any trailing whitespace, and adding the resulting string to the set.\n", "url": "af678636432a410c764ca9cb0a1afa68", "gt": "Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line ."}, {"nl_input": "The Python function `out` is a method that is used to output a message to the console. The purpose of this function is to provide a simple and efficient way to log messages to the console. The function takes two parameters: `output`, which is the message to be printed, and `newline`, which is a boolean value that determines whether a newline character should be added after the message.\n", "url": "828984305b0d337fae5e014dce303d6e", "gt": "Outputs a string to the console ( stdout ) ."}, {"nl_input": "This Python code is used to import a class from a module using a specific path. The path is a string that includes the module name, class name, and any other necessary information. The function `import_by_path` takes a string path as input, separates the path into three parts: module path, class name, and any other information, and then uses the `getattr` function to retrieve the class from the imported module.\n", "url": "355e9f8613c706128bec8cc335909375", "gt": "Import a class or function given it s absolute path ."}, {"nl_input": "The provided Python code is a function that accepts a variable number of arguments and keyword arguments. It then checks if a 'verbose' keyword argument is present and if it's set to True. If it is, it calls a function `gprint` with the same arguments.\n", "url": "c2e5110262917b6ebfe935a20ae47862", "gt": "Utility to print something only if verbose = True is given"}, {"nl_input": "The provided Python code is a function that implements the softplus activation function. The softplus function is a smooth approximation of the ReLU function. It is defined as log(1 + exp(x)) for all x.\n\nThe function takes three parameters:\n\n1. `attrs`: A dictionary of attributes.\n2. `inputs`: The input data.\n3. `proto_obj`: A prototype object.\n\nThe function first adds a new attribute 'act_type' with the value 'softrelu' to the `attrs` dictionary.\n\nThe function then returns a tuple containing the string 'Activation', the `new_attrs` dictionary, and the `inputs`.\n", "url": "23005309942f0a6b09cddbb10972e548", "gt": "Applies the sofplus activation function element - wise to the input ."}, {"nl_input": "This Python code is used to read a JSON file line by line and yield the parsed JSON objects. The purpose of this code is to provide an iterable interface for reading JSON files.\n", "url": "041dfc26ca25ef267899427de19315e1", "gt": "iterator for JSON - per - line in a file pattern"}, {"nl_input": "The Python code is designed to find the maximum value in a given array. The function `findMax` takes an array as input and returns a boolean array where each element indicates whether the corresponding element in the input array is the maximum.\n", "url": "a81da6bde809fcb933671792c5feb2ca", "gt": "in comparison to argrelmax () more simple and reliable peak finder"}, {"nl_input": "The provided Python code is a function that removes trailing zeros from a list of numbers. The function takes a list of numbers as input and returns a new list with the trailing zeros removed.\n", "url": "18282b3d8bec1a731e59daf433dfd841", "gt": "Removes trailing zeroes from indexable collection of numbers"}, {"nl_input": "The provided Python code is a function that calculates the maximum value of a given array. The function takes three parameters: a (the array to be processed), axis (the axis along which to compute the maximum), and keep_dims (a boolean indicating whether to keep the dimensions of the output array). The function returns the maximum value of the array along the specified axis, with the option to keep the dimensions of the output array.\n", "url": "a35ad1a4dd29efc1322f1abb1af58fc6", "gt": "Max reduction op ."}, {"nl_input": "The provided Python code is a function that calculates a hash value for a given iterable object. The hash function is a built-in function in Python that generates a unique hash value for a given object. The hash value is an integer that is used to quickly locate the object in memory.\n\nThe function takes an iterable object as input, calculates the hash value of the type of the iterable, and then calculates the hash value of each value in the iterable. The hash value of the iterable is then returned as the final hash value.\n\nThe function is used in a variety of contexts, such as in data structures like dictionaries or sets, where the order of elements is important. It's also used in hashing algorithms, such as the one used in the hash function in the hashlib module of the Python standard library.\n", "url": "264508a3cfd0a1c3ebd6eda1a8efe7c6", "gt": "Perform a O ( 1 ) memory hash of an iterable of arbitrary length ."}, {"nl_input": "This Python function is used to check if a key exists in a class's instance dictionary. The function takes a class and one or more keys as arguments. It returns True if the key is found in the class's instance dictionary, and False otherwise.\n", "url": "1f298b72446c9d426a3f72d16b7519dd", "gt": "Check whether flyweight object with specified key has already been created ."}, {"nl_input": "The provided Python code is a method that copies all elements from one object to another. The method is named \"copy\" and it takes an object as an argument. It creates a new object of the same type as the input object, then copies all elements from the input object to the new object.\n", "url": "a99ed37d53f472069723258e200ebd61", "gt": "Return a copy of this list with each element copied to new memory"}, {"nl_input": "The Python code is a method that retrieves a value from a 2D matrix based on the row and column names. The method takes two parameters: `rowName` and `columnName`. It then uses these parameters to index into the matrix and return the value at that position.\n", "url": "8dec57e52e7ed4372e59774ea788a4cb", "gt": "Returns the value of the cell on the given row and column ."}, {"nl_input": "This Python function is used to write the output of a task to a file. The function takes a file object (fout) as an argument and writes a newline-separated string of all elements in the 'out' list to the file.\n", "url": "38ff90082d85c5f7fea097765e369093", "gt": "Squash self . out into string ."}, {"nl_input": "The provided Python code is a method definition for a class in Python. The method `__delitem__` is a special method in Python classes, which is used to delete an item from a specific index in a list.\n\nThe purpose of this code is to delete an item from a cache dictionary based on the internal key of the resource.\n\nThe method `__delitem__` is a special method in Python classes, which is used to delete an item from a specific index in a list. It is a part of the `__del__` method, which is a special method in Python classes that is called when an object is about to be destroyed.\n\nThe `self` parameter is a reference to the current instance of the class, and `resource` is the resource to be deleted from the cache.\n\nThe `self.caches[type(resource)]` is accessing the cache dictionary for the type of the resource.\n\nThe `pop(resource.get_cache_internal_key(), None)` is removing the resource from the cache dictionary. The `get_cache_internal_key()` method is a method in the class that is used to get the internal key for the cache.\n\nThe `", "url": "bf6a4144ae873567dfbd61579c2bba94", "gt": "Remove resource instance from internal cache"}, {"nl_input": "The Python code is a test runner for a set of test cases. It imports the unittest module, which is a built-in Python module for writing and running tests. It then loads the 'tests' module, which should contain the test cases, and runs them. The test cases are discovered using the `discover` method of the `TestLoader` class. The `TextTestRunner` class is used to run the tests, with a verbosity level of 2, which means it will display more detailed information about the test results.\n", "url": "7bd4b3dfbcd3512c6c868dd135577546", "gt": "Run the unit tests ."}, {"nl_input": "This Python function takes a string and a separator as input, and converts the string into a list of items, removing any leading or trailing whitespace from each item, and returns the resulting list. If the resulting list is empty, it raises a ValueError with a message indicating that the input string is not a valid list variable.\n", "url": "1e5368f3b43db029f24ec30a718ddd75", "gt": "Convert a string to a list with sanitization ."}, {"nl_input": "This Python function is used to create a new image with a specific size and fill color. The function takes two parameters: size, which is a tuple representing the width and height of the image, and fill, which is a tuple representing the color of the image. The function then returns a new image object created from the PIL (Pillow) library.\n", "url": "e2f935a5471d0c81e26004ffca00f05d", "gt": "Return a new Image instance filled with a color ."}, {"nl_input": "This Python function, `_string_hash`, takes a string as input and returns a hash value based on the string. The hash value is calculated by iterating over each character in the string and using a mathematical formula to generate a unique hash code for each string.\n", "url": "92cd3b014d092cfeac9dedc5c78bc968", "gt": "String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) ."}, {"nl_input": "The provided Python code is a function that listens for updates from a Redis group. The function subscribes to a Redis Pub/Sub group and calls a callback function whenever there are any updates.\n", "url": "c6a79937f94ef8bf784d0ba67544fc5d", "gt": "Attach a callback on the group pubsub"}, {"nl_input": "This Python function is used to log a message with a specific name and additional arguments and keyword arguments. The function is named `pylog` and it takes multiple positional and keyword arguments. It then calls a function named `printerr` to print the name of the function, the arguments, keyword arguments, and the exception traceback.\n", "url": "b1185ffd3684956e7a014023d1d730e1", "gt": "Display all available logging information ."}, {"nl_input": "This Python code is used to convert a list of strings into an array of Java Strings. The function `string_list_to_array` takes a list of strings as input and converts it into an array of Java Strings.\n", "url": "cb7ea10fe8e12a61d1c4426495277b2b", "gt": "Turns a Python unicode string list into a Java String array ."}, {"nl_input": "This Python code is a function that is used to execute a command in a virtual environment. The function takes three parameters: a command, a list of arguments, and a dictionary of keyword arguments. The command is used to determine the path to the virtual environment binary, and the arguments are used to pass to the command. The keyword arguments are used to pass additional options to the command.\n\nThe function first replaces any double quotes in the arguments with escaped double quotes, then it joins the arguments with a space, and finally it executes the command with the arguments and the path to the virtual environment binary.\n", "url": "4b6a114bab89cc57079b686d158c8dc2", "gt": "Execute a command installed into the active virtualenv ."}, {"nl_input": "The provided Python code is a method that is used to get a set from a database. The method is named `_get_set` and it takes three parameters: `self`, `key`, and `operation`. The `self` parameter is a reference to the current instance of the class, and `key` and `operation` are used to identify the set to be retrieved. The `create` parameter is a boolean value that indicates whether a new set should be created if it does not exist.\n\nThe method uses the `_get_by_type` method to get a set from the database. The `_get_by_type` method is a private method that is used to get a specific type of object from the database. The `_get_by_type` method takes four parameters: `self`, `key`, `operation`, and `type`. The `self` parameter is a reference to the current instance of the class, `key` and `operation` are used to identify the object to be retrieved, and `type` is the type of the object to be retrieved.\n\nThe `_get_by_type` method uses the `_get_by", "url": "4a5f1c5d94b495eb1d55bb70bfb4e935", "gt": "Get ( and maybe create ) a set by name ."}, {"nl_input": "This Python code is used to calculate a bounding box from an image. The bounding box is a rectangle that encompasses all the pixels in the image. The code first calculates the size of the image, then it uses the getbbox() method to get the bounding box coordinates. If the bounding box cannot be calculated, it defaults to a simple rectangle that covers the entire image. The bounding box is then converted from pixel units to a format that is common in PDF files, and finally, the final bounding box is returned.\n", "url": "cf3ce037b96a42e72d396298a671ad3f", "gt": "This function uses a PIL routine to get the bounding box of the rendered image ."}, {"nl_input": "The provided Python code is a function that parses a string for a sequence of parentheses. The function uses regular expressions (regex) to find and return all occurrences of parentheses in a given string. The purpose of this function is to extract the content enclosed within parentheses from a string.\n", "url": "5727620d57aa415b320a2caf400e156f", "gt": "Parses format string looking for substitutions"}, {"nl_input": "The provided Python code is designed to remove a specific key-value pair from all dictionaries in a list. The function `dictlist_wipe_key` takes a list of dictionaries (`dict_list`) and a key (`key`) as input. It then iterates over each dictionary in the list, and removes the key-value pair associated with the given key.\n", "url": "9c7542a2ddb9b898a1ef814aa988a382", "gt": "Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists ."}, {"nl_input": "The Python code is a function definition for a class. It's named `__init__`, which is a special method in Python classes. This method is called when an object of the class is created.\n\nThe purpose of this code is to initialize the state of the object and the start time of the state transition.\n\n- `self`: This is a reference to the current instance of the class, and is used to access variables that belongs to the class. It does not have to be named `self` , you can call it whatever you like, but it has to be the first parameter of any function in the class.\n\n- `self.state`: This is an attribute of the class. It's set to `STATE_INITIALIZING`.\n\n- `self.state_start = time.time()`: This line sets the attribute `state_start` to the current time.\n\nIn summary, this code is setting up an object with a state of `STATE_INITIALIZING` and a start time.\n", "url": "9ebd199a3bad6857c594078352fc308a", "gt": "Initialize the state of the object"}, {"nl_input": "This Python function calculates the Tanimoto set similarity for each set in a dictionary of sets. The Tanimoto set similarity is a measure of the similarity between two sets, defined as the size of the intersection divided by the size of the union of the two sets. The function takes two parameters: a target set and a dictionary of sets. The function iterates over each set in the dictionary, calculates the Tanimoto set similarity between the target set and the current set, and stores this similarity in a new dictionary. The function then returns this new dictionary.\n", "url": "bee73c442bef215e9afdbde513dea74f", "gt": "Return a dictionary of distances keyed by the keys in the given dict ."}, {"nl_input": "The Python function `getRect` is designed to return a tuple containing the coordinates and dimensions of a rectangle. The rectangle is defined by the attributes `x`, `y`, `w`, and `h`.\n", "url": "bfcfd9614f0ea2bb08b2f413845cfe91", "gt": "Returns the window bounds as a tuple of ( x y w h )"}, {"nl_input": "The provided Python code is a function that deletes a local file if it exists. The function takes a filename as an argument and checks if the file exists. If the file does exist, it is deleted using the `os.remove()` function.\n", "url": "17728e7096342292cd488ebca0d9b0cd", "gt": "Deletes the specified file from the local filesystem ."}, {"nl_input": "The provided Python code is a function that checks if a given string is a valid date in the format \"YYYY-MM-DD\". The function takes a string as input and attempts to convert it into a datetime object using the `strptime` function from the datetime module. If the conversion is successful, it checks if the resulting datetime object is in the same format as the input string. If it is, the function returns `True`, otherwise it raises a `ValueError`. If a `ValueError` is raised, the function returns `False`.\n", "url": "8dce08e6c99c22329f7a299e12d01400", "gt": "Retrun True if x is a valid YYYYMMDD date ; otherwise return False ."}, {"nl_input": "This Python function, `safe_int_conv`, is designed to safely convert a given input to an integer. The function uses the `numpy` library's `array` function to convert the input to a numpy array, and then attempts to convert this array to an integer using the `int` function with the 'safe' casting option. If the conversion is successful, the function returns the integer. If the conversion fails (i.e., if the input is not a number), the function raises a `ValueError`.\n", "url": "cb150b8a0bfcc950bb207c95077778d3", "gt": "Safely convert a single number to integer ."}, {"nl_input": "This Python function is designed to format a Unix timestamp (a count of seconds elapsed since 1970-01-01 00:00:00 UTC) into a string in the format \"YYYY-MM-DDTHH:MM:SS.000Z\".\n", "url": "bec2bb3dbbcb3542f275f94bece9fff6", "gt": "Format the UTC timestamp for Elasticsearch eg . 2014 - 07 - 09T08 : 37 : 18 . 000Z"}, {"nl_input": "The Python code is converting Markdown content to plain text. It uses two functions: `md_to_text` and `html_to_text`. The `md_to_text` function is converting Markdown content to plain text. If the input content is in HTML format, it uses the `html_to_text` function to convert the HTML content to plain text.\n", "url": "a98a0d961b4a5dfb134ed7d96517dc6a", "gt": "Converts markdown content to text"}, {"nl_input": "This Python function takes a datetime object as input and returns a string in the ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ). The function uses string formatting to format the date and time components of the datetime object into the desired format.\n", "url": "42dabaf1c6f12b6da12ac8fbb5b231fe", "gt": "Return an ISO - 8601 representation of a datetime object ."}, {"nl_input": "This Python code is a function that converts a given value to bytes. The function takes a value as input, checks if the value is of type bytes or None, and if it is, it simply returns the value. If the value is not of type bytes or None, it attempts to encode the value as bytes using the `encode` method of the `vtype` object. If an UnicodeEncodeError is raised, it simply passes the value. The function finally returns the encoded value.\n", "url": "e5d70952cf637a2fa0cd1455199a8e33", "gt": "str to bytes ( py3k )"}, {"nl_input": "This Python code is a function that takes an input `v` and performs a few operations on it. The function is designed to handle both integers and floating-point numbers. If the input is a string, it first removes any commas from the string, then attempts to convert the result to an integer. If the input is a float, it simply converts the float to an integer. If the input is an empty string, it returns `None`.\n", "url": "ce0452492d46cab7a6354fbcfb785abf", "gt": "Parse an int robustly ignoring commas and other cruft ."}, {"nl_input": "The Python code reads a text file from a given path and returns its content. The function `read_text_from_file` takes a string argument `path` which is the path to the file to be read, and returns a string that is the content of the file.\n", "url": "c17f502f4969f974e5c6e15cb098c59e", "gt": "Reads text file contents"}, {"nl_input": "This Python code is used to find the row in a list of rows with the maximum value in a specific column. The function `argmax` takes a list of rows and a column name as input, and returns the row with the maximum value in that column.\n", "url": "b28453d2e0b8222a369ff53ddfa194a9", "gt": "Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows ."}, {"nl_input": "This Python code is used to normalize an array by dividing each element in the array by the maximum value in the array. The function `normalize_array` takes a list as input and returns a new list where each element is the original element divided by the maximum value.\n", "url": "b81fe6522b305a5caff1b0ff9b17acdc", "gt": "Normalizes list"}, {"nl_input": "This Python code is a function named \"server\" that is used to start a Django server. The function takes an optional parameter \"port\" which is used to specify the port number on which the server should run. If no port is provided, the server will run on the default port (8000). The function then creates a list \"args\" with the command to run the Django server, and if a port is provided, it appends the port to the list. Finally, it calls the \"main\" function with the list of arguments.\n", "url": "694887945fe811afedbc4b26d3d370ef", "gt": "Start the Django dev server ."}, {"nl_input": "This Python code is used to determine the appropriate file extension for a file based on its suffix. The code iterates over a list of file suffixes, and if a file has a '.abi3' suffix, it returns the Unix-style file extension, otherwise, it returns the Windows-style file extension.\n", "url": "013baf410fba66902adf797b55ac8aa1", "gt": "Return the file extension for an abi3 - compliant Extension ()"}, {"nl_input": "This Python function, `remove_empty_text`, is designed to filter out any empty text from a list of Utterance objects. The function takes a list of Utterance objects as input and returns a new list with only the Utterance objects that have non-empty text.\n", "url": "5ca8d1be36d4955478ff4ef72fbc653a", "gt": "Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing"}, {"nl_input": "The Python code is a function that checks if the specified files exist in the given list. It uses a list comprehension to create a list of boolean values indicating whether each file exists or not. The function then returns True if at least one file exists, False otherwise.\n", "url": "0a26527d2153f952031786977dfda90c", "gt": "Whether any of the filenames exist ."}, {"nl_input": "The provided Python code is a test case for a command-line interface (CLI) script. The script is designed to test the functionality of a function, but the function's parameters are optional. The test case uses the `patch` function from the `unittest.mock` module to mock the `sys.exit` function, which is used to terminate the program, and asserts that the `sys.exit` function is called with a specific argument.\n", "url": "b7b9cfe9bc7611c1ad042e6257d5ab3d", "gt": "kwarg values always have defaults"}, {"nl_input": "This Python code is a generator function that reads all images from a directory and yields them as a tuple of (image, filename). The function is used to iterate over all images in a directory.\n", "url": "711c408a26e009e46a957a3bc5891670", "gt": "Reads and iterates through each image file in the given directory"}, {"nl_input": "This Python function takes a URL as input and returns the hostname of the URL. The hostname is the part of the URL that comes after the '//' in the URL. It uses the urllib.parse module's urlparse function to parse the URL, and then returns the netloc (network location) of the parsed URL, which is the hostname. If the netloc is empty, it returns an empty string.\n", "url": "13343f8f3c5515600e035d8cca7abd84", "gt": "Parses hostname from URL . : param url : URL : return : hostname"}, {"nl_input": "The Python code is a function that slices a numpy array based on a given begin and size. The function takes three arguments: a numpy array (a), a begin tuple (begin), and a size tuple (size). It then slices the numpy array based on the begin and size tuples and returns the sliced array.\n", "url": "d2b5b746f02bfe0d8d6ff1f510e1828e", "gt": "Slicing op ."}, {"nl_input": "This Python function is designed to determine the type of a given object based on its definition. It checks if the object's type is a float, if a string 'TIME' is in the object's name, or if it's a built-in type. If none of these conditions are met, it defaults to an 'INTEGER' type.\n", "url": "af0980ef65b107138b9164f39686a882", "gt": "Returns the SQL typename required to store the given FieldDefinition"}, {"nl_input": "This Python function is used to simulate the filling of an image with a given size. The purpose of this function is to calculate the proportion of the image that is not filled with the given size. The function takes as input the minimum and maximum x and y coordinates of two rectangles, and the size of the image. It then calculates the size of the bounding box (the area between the two rectangles) and subtracts this from the total size of the image. The result is then divided by the total size of the image to get the proportion of the image that is not filled.\n", "url": "ce8ba68fe6e18f6be13595643c857111", "gt": "calculate the fill similarity over the image"}, {"nl_input": "The provided Python code is a function that removes a specific series from a list of series. The function takes a series as an argument and removes it from a list of all series. If the list of all series is only one element long, it raises a ValueError. The function also sets the chart of the removed series to None.\n", "url": "67cf3739e350f2ea5801335c51b59d6b", "gt": "Removes a : py : class : . Series from the chart ."}, {"nl_input": "This Python function is designed to return a list of tuples, where each tuple contains a string and a data type of a field in a schema. The function is used to extract the name and data type of each field in a schema.\n", "url": "1001aab66e7872b45d9825d901ea4412", "gt": "Returns all column names and their data types as a list ."}, {"nl_input": "This Python function converts a C pointer to a numpy array of float32 type. The C pointer is expected to point to a sequence of float32 values, and the function converts this sequence into a numpy array. If the C pointer is not valid, it raises a RuntimeError.\n", "url": "ce6eacb4f12ded20e034e69bafe8d36c", "gt": "Convert a ctypes float pointer array to a numpy array ."}, {"nl_input": "The provided Python code is a function that takes an iterable (like a list or a string) as input. It then cleans each element of the iterable by removing leading and trailing whitespace. If an element is not a string, it is simply appended to the result list. The function returns the cleaned iterable.\n", "url": "c5e0bd41ae3189370dbad3a0bf904d17", "gt": "Take a list of strings and clear whitespace on each one . If a value in the list is not a string pass it through untouched ."}, {"nl_input": "This Python code is a function that takes a value and attempts to coerce it into a more general form. The purpose of this function is to handle different types of input, such as a dictionary, a list, or a single instance of a class.\n", "url": "2acfd946899b1082d7f65b3960457769", "gt": "Convert from whatever is given to a list of scalars for the lookup_field ."}, {"nl_input": "This Python function, `_rnd_datetime`, is used to generate a random datetime between two given dates. The function takes two parameters: `start` and `end`, which represent the start and end dates respectively. The function uses the `random.randint` function to generate a random integer between the Unix timestamp of the start and end dates. This random integer is then used to generate a random datetime using the `from_utctimestamp` method of the `datetime` class.\n", "url": "7d26da2177ec3962d36d304e92d85b02", "gt": "Internal random datetime generator ."}, {"nl_input": "The provided Python code is a function that pads a string with zeros on the left side of the string until it reaches a specified width. If the string is not a string, it is converted to a string using the `repr` function.\n", "url": "ec71b8a5543bb8262f46f32c31348dea", "gt": "zfill ( x width ) - > string"}, {"nl_input": "This Python code is used to encode a list into a dictionary. The purpose of this code is to take a key and a list as input, and return a dictionary where the key is the key provided and the value is a string that is the concatenation of the elements in the list. If the list is empty, the function returns an empty dictionary.\n", "url": "a318fa43339d6fa4ed9b949a5b77562e", "gt": "Converts a list into a space - separated string and puts it in a dictionary"}, {"nl_input": "The Python code is generating a sequence of random numbers with a normal distribution. The purpose of this code is to generate a sequence of random numbers with a mean of 0 and a standard deviation of 1. The numbers are generated using the numpy library's random.rand and random.randn functions. The mean of the distribution is set to 0 and the standard deviation is set to 1. The random.sample function is used to generate a single random number from a list of values.\n", "url": "f1f28c0dd35c71a830aa7cbc94c40f10", "gt": "Init a noise variable ."}, {"nl_input": "This Python function is designed to fetch the column names from a given table in a database. The function takes a table name as input and returns an iterable of column names.\n", "url": "d7658ee7d6f5d6fb22fece433d0eb088", "gt": "An iterable of column names for a particular table or view ."}, {"nl_input": "The provided Python code is a function that takes a string path and splits it into words separated by underscores. It then capitalizes the first word and makes the rest of the words lowercase. The function then joins the words back together with an underscore between them.\n", "url": "78f9639da029a80f29cbed10f796c01c", "gt": "Removes underscores and capitalizes the neighbouring character"}, {"nl_input": "This Python code is used to create a Conda environment. The purpose of this code is to create a new Conda environment with the given name and dependencies. The environment is created in a sandbox directory, and the sandbox directory is specified as a parameter. The dependencies for the environment are also specified as a list of strings. The options for the environment are also specified as a list of strings.\n", "url": "372b930fd10719406ee97e024c0a53a1", "gt": "Create a conda environment inside the current sandbox for the given list of dependencies and options ."}, {"nl_input": "The provided Python code is used to add a new column to a table in a database using Alembic, a SQL Alchemy toolkit and ORM. The purpose of this code is to add a new column to a table in a database.\n", "url": "fc0fba0d26d93f6bd9c23bc1314f2d81", "gt": "Add a column to the current table ."}, {"nl_input": "The provided Python code is a function that checks if a given key is present in a list of keys stored in the instance of a class. The function takes a string key as input and returns a boolean value indicating whether the key is present in the list of keys.\n", "url": "cca5dd52a3d19626fff09249a49c1508", "gt": "Checks if key exists in datastore . True if yes False if no ."}, {"nl_input": "This Python code is a recursive function that prints a tree-like structure, where each node has a list of its children. The function uses a prefix (pfx) to indicate the hierarchy of the nodes. It then calls itself for each child node, with the child node and the updated prefix.\n", "url": "11cf04105fcbba8990217a87a8578844", "gt": "Purely a debugging aid : Ascii - art picture of a tree descended from node"}, {"nl_input": "The provided Python code is a function that calculates the natural logarithm of a list of values. The function takes a list of values as input, calculates the natural logarithm of each value, and returns the result as a new list.\n\nThe function uses a try-except block to catch any RuntimeWarning that might be raised when trying to calculate the natural logarithm of a zero or negative value. This is because the natural logarithm of a zero or negative value is undefined, so it's better to ignore these warnings.\n\nThe function also uses the numpy library to calculate the natural logarithm of the values.\n", "url": "167edd67f1adeb4d6c5cfb29e50e9308", "gt": "Returns numpy array of natural logarithms of values ."}, {"nl_input": "The Python code is a function that is used to update a figure panel in a GUI application. The function takes an event as input and updates the figure panel with the figure associated with the code.\n", "url": "081aa8089b7e676937cd3affc2e08cd8", "gt": "Redraw event handler for the figure panel"}, {"nl_input": "The provided Python code is a function that applies a Gaussian blur effect to an image using the OpenCV library. The function takes in four parameters: the image to be blurred, the width of the kernel, the height of the kernel, and the standard deviation for both the x and y directions of the Gaussian blur. The function then applies the Gaussian blur effect to the image using the cv2.GaussianBlur function from the OpenCV library.\n", "url": "7e9213011cfc7c3f677806f277665dc3", "gt": "Apply Gaussian blur to the given data ."}, {"nl_input": "This Python function is designed to set the checked state of a Qt CheckBox. The function takes a single parameter, 'value', which is expected to be a boolean value. If 'value' is True, the function sets the CheckBox to be checked, otherwise, it sets the CheckBox to be unchecked.\n", "url": "529e86a0567df6183fe381968569a669", "gt": "Set value of the checkbox ."}, {"nl_input": "The provided Python code is a function that takes a dictionary as input and returns a new dictionary where the keys and values are converted to strings. This function is used to convert all dictionary values to strings, which is useful when you want to work with dictionary data in a more human-readable format.\n", "url": "5e241db72862fc70c36e7e20ad5edea0", "gt": "Turn dict keys and values into native strings ."}, {"nl_input": "The provided Python code is a function that returns the full name of an object, o, based on its module and name. The function is used to get a more readable and meaningful name for an object in a larger codebase.\n", "url": "50fd86592c25f16bbc23c5961ad15dea", "gt": "Return the fully - qualified name of a function ."}, {"nl_input": "This Python function reads a YAML file and returns its content. The function is used to read a corpus file, which is a file format used to store structured data, such as text or metadata. The YAML file is a human-readable data serialization standard that is easy to write and read.\n", "url": "218ac30809c3bdc7d261a5ea19802ace", "gt": "Read and return the data from a corpus json file ."}, {"nl_input": "This Python function is designed to check if a given value is a scalar (a number) or an array (a matrix) with no dimensions.\n", "url": "8970a4c2fc876814d02a1c6e13dc45be", "gt": "Test if the given value is a scalar ."}, {"nl_input": "This Python code is used for swapping two rows in a matrix. The purpose of this code is to swap the ith row with the jth row in a 3x3 matrix. The matrix is represented as a numpy array (self._A) and the rows are represented as numpy arrays (self._L). The code first creates a 3x3 identity matrix (L = np.eye(3, dtype='intc')) and then it sets the ith row to 0 and the jth row to 0, and then it sets the ith row to 1 and the jth row to 1. After that, it copies the current matrix and appends it to the list self._L. Finally, it computes the dot product of the modified matrix and the current matrix self._A.\n", "url": "d0357f86ddf7b0105d9d1b1b69314584", "gt": "Swap i and j rows"}, {"nl_input": "The Python code is a function that creates a QApplication object, a QDialog object from the Spyder library, and then shows the dialog. It then exits the application.\n", "url": "2aec19bb1e81428966e9d71583289404", "gt": "Local test ."}, {"nl_input": "The provided Python code is a function that calculates the nth number in the Fibonacci sequence. The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1.\n", "url": "215b9f753c4bedbf5e252691c757d9ae", "gt": "a normal old python function to return the Nth fibonacci number ."}, {"nl_input": "This Python function converts a datetime object to a Unix timestamp (number of seconds since 1970-01-01 00:00:00 UTC) in milliseconds. The function takes a datetime object as input and calculates the Unix timestamp in milliseconds.\n", "url": "ba63741c151123bfce637e652480a02a", "gt": "Converts a datetime to a millisecond accuracy timestamp"}, {"nl_input": "This Python code is a recursive function that calculates the maximum depth of nested lists. The function takes a list and a function (default is max) as arguments, and recursively calls itself on each item in the list if it is a list. It also keeps track of the depth of each list it has encountered. If the list is not a list-like object, it will be ignored. The function then returns the maximum depth found, or the current depth if no lists were found.\n", "url": "54daf1d9eb3d92a38eb85fd0febb6a26", "gt": "Returns the deepest level of nesting within a list of lists"}, {"nl_input": "This Python code is a function that reads from a standard input (stdin) in chunks of a specified size (bufsize). The function uses a generator expression to create an iterable object that yields chunks of data from the stdin. The function then returns an iterable object that can be used to read the data in chunks.\n", "url": "b66381638399324a2212ecf9179e9699", "gt": "return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk ."}, {"nl_input": "This Python code is a function that takes a list as input and returns a new list with unique elements from the original list. The function uses a set to keep track of the elements that have been seen before, and a list to store the unique elements.\n", "url": "74f3af5ff87a388959abca8a236acf5c", "gt": "Remove duplicates in a list ."}, {"nl_input": "The provided Python code is a function that moves the cursor in a text editor to a specific line number. The function takes two parameters: an instance of a text editor and a line number. It then sets the cursor position to the index of the specified line in the document.\n", "url": "85bf8f526e4cc0590ecb0b556389c65a", "gt": "Move cursor to this line in the current buffer ."}, {"nl_input": "This Python code is a function definition for a function named `set_trace`. The function is used to set a trace on a Python program. A trace in the context of debugging is a way to see the state of a program at various points during its execution. This is often used to understand the flow of control in a program.\n\nThe function `set_trace` is part of the `pdb` (Python Debugger) module, which is a package for creating Python programs that can be debugged. The `pdb` module provides a set of functions for creating a debugger, which can be used to step through the code, inspect variables, and more.\n\nThe function `set_trace` is used to set a trace on the current frame of the call stack. This means that the function that is currently being executed will be called whenever a line of code is executed. This is useful for debugging and testing purposes, as it allows you to see the state of the program at different points during its execution.\n", "url": "0a05a5da32b1fb72cca49d13dc8e3410", "gt": "Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ ."}, {"nl_input": "This Python function, named `normalize`, is designed to normalize a list of numbers. The purpose of this function is to scale the values in the list to a range of 0 to 1, with the sum of all values being 1. The function takes a list of numbers as input, calculates the sum of these numbers, converts it to a floating-point number, and then divides each number in the list by this sum. The result is a new list where each number is a proportion of the original list's sum.\n", "url": "f9b02c7991372e2168cda998af17b5df", "gt": "Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]"}, {"nl_input": "This Python code is used to rename a column in a pandas DataFrame. The function `col_rename` takes in three arguments: a pandas DataFrame `df`, the current name of the column to be renamed `col_name`, and the new name for the column `new_col_name`.\n\nThe function first creates a list of the column names in the DataFrame using the `columns` attribute. Then, it iterates over this list, checking each column name against the `col_name` input. If a match is found, it renames the column to `new_col_name` using the `rename` method of the DataFrame.\n\nThe `break` statement is used to exit the loop as soon as a match is found, preventing unnecessary iterations if the column to be renamed is not in the DataFrame.\n\nThe `df.columns = col_list` line is used to update the list of column names in the DataFrame with the new column names.\n", "url": "8afe30c3c1d7a21a89370867722d657a", "gt": "Changes a column name in a DataFrame Parameters : df - DataFrame DataFrame to operate on col_name - string Name of column to change new_col_name - string New name of column"}, {"nl_input": "The provided Python code is a function that takes a list of IP addresses as input and returns a list of IP addresses that are within the network of the first IP address in the list.\n\nHere's a brief summary of the code:\n\n1. The function `ip_address_list` takes a list of IP addresses as input.\n2. It tries to convert each IP address in the list to an `ipaddress.IPv4Address` or `ipaddress.IPv6Address` object.\n3. If a conversion fails (i.e., the input is not a valid IP address), it simply passes.\n4. If a conversion succeeds, it creates an `ipaddress.IPv4Network` or `ipaddress.IPv6Network` object from the first IP address in the list.\n5. It then returns a list of all hosts within the network.\n\nThis function is used to find all IP addresses within a network.\n", "url": "4e29078b31bdc20c9249a66228a95f11", "gt": "IP address range validation and expansion ."}, {"nl_input": "The provided Python code is designed to convert a numpy array to a binary object. The function `adapt_array` takes a numpy array as input, saves it to a BytesIO object, and then reads the binary data from the BytesIO object. The function then returns the binary data as a byte array.\n", "url": "85791d7ca6694ef78a7d42f79c958ef6", "gt": "Adapts a Numpy array into an ARRAY string to put into the database ."}, {"nl_input": "This Python code is used to remove stopwords from a list of words. A stopword is a common word that does not carry much meaning or information and is usually removed to clean up the text. In this case, the code is used to remove common words like \"and\", \"the\", \"is\", etc.\n", "url": "6ce9ae857507f7292c65caae0d829141", "gt": "Removes stopwords contained in a list of words ."}, {"nl_input": "This Python function `ensure_dir_exists` is designed to create a directory if it does not exist. The function takes a single argument, `directory`, which is the path to the directory that needs to be created. If the directory does not exist, the function uses the `os.makedirs` function to create the directory.\n", "url": "ffb454a23a874db7b8ba84dec008ffc9", "gt": "Se asegura de que un directorio exista ."}, {"nl_input": "The provided Python code is a function that checks if a given input is a 2D numpy array of boolean values. The function uses the `isinstance` function to check if the input is a numpy array, and then checks if it has 2 dimensions and if its data type is boolean. If both conditions are met, the function returns `True`, otherwise it returns `False`.\n", "url": "8a3b1c52b2ad77e9fd817568f4cec12c", "gt": "r Checks if l is a 2D numpy array of bools"}, {"nl_input": "The Python function `qsize` is a method of a queue data structure in Python. It is used to get the size of the queue. The size of a queue is the number of elements present in it.\n", "url": "66ad16d7b38f79a6e991c2f96f9a6395", "gt": "Return the approximate size of the queue ( not reliable! ) ."}, {"nl_input": "The provided Python code is a function that takes an iterable as input and returns a string with all elements joined by commas. The function uses the `join` method of Python's string class to concatenate all the elements of the iterable into a single string, separated by commas.\n", "url": "d5cd6bdee354cd4c13e1317060fe6702", "gt": "Join the given iterable with"}, {"nl_input": "The provided Python code is a function that implements a max heap data structure. The function `heappush_max` is used to add an item to the max heap. The item is first added to the end of the heap, and then the heap is sifted down to maintain the max heap property.\n", "url": "b7ef5c01f2bb54150c1e764f1b5301aa", "gt": "Push item onto heap maintaining the heap invariant ."}, {"nl_input": "This Python code is designed to retry a function in case of an `EnvironmentError` (which is raised when an error related to the environment occurs, such as a signal being interrupted). The function it wraps is passed as a parameter. It uses a while loop to continuously attempt to execute the function, catching any `EnvironmentError` exceptions that occur and re-raising them if they are not due to the signal being interrupted.\n", "url": "b5df8b3347e8f9eddcd0ec1aa6e25197", "gt": "Retries function until it doesn t raise an EINTR error"}, {"nl_input": "This Python function is used to calculate the ratio of the difference between the peak and the low value in a given range, to the difference between the high and low value. The function is named `_pdf_at_peak`, which is a convention for private methods in Python. The purpose of this function is to provide a measure of the 'density of peaks' in a given range, a common metric in data analysis.\n", "url": "0b331f2127c3538176983a9640cb177f", "gt": "Pdf evaluated at the peak ."}, {"nl_input": "This Python code is used to split a string into tokens based on a specific delimiter, in this case, a '#' character. The function takes two parameters: a class instance and a string of code. It checks if the string contains a '#' character, and if it does, it removes the comments from the string. If the string does not contain a '#' character, it returns the original string. The function then uses a lambda function to replace any occurrences of '#' characters in the string with an empty string. Finally, it uses the `re.sub` function to replace all occurrences of the regular expression pattern defined in the class's `re_pytokens` attribute with the lambda function.\n", "url": "e9606c2ede25ed01dadee38b936b292b", "gt": "Removes comments ( # ... ) from python code ."}, {"nl_input": "The provided Python code is a function that checks if a given URL is relative or absolute. It does this by checking if the URL starts with a \"#\" symbol, which is a hash symbol in URLs. If the URL does start with a \"#\", it is either an absolute URL (starting with \"http://\" or \"https://\") or a relative URL (starting with \"#/\"). If the URL does not start with a \"#\", it is either an absolute URL or a relative URL.\n", "url": "a7c751f435108eb653de787c9016c077", "gt": "simple method to determine if a url is relative or absolute"}, {"nl_input": "The provided Python code is a method that inserts multiple items into a database. The method takes a list of items as input, converts each item into a dictionary, and then executes an SQL INSERT statement on the database session. The number of rows affected by the INSERT statement is returned.\n", "url": "c4bbbb9264cf558138ca7d49ad446d86", "gt": "Insert many items at once into a temporary table ."}, {"nl_input": "The provided Python code is a recursive function that checks if all elements in a nested array (or any other array) satisfy a certain condition. The function `isarray` takes three parameters: an array, a test function, and an optional dimension parameter (default is 2, meaning it's a 2-dimensional array).\n\nThe function first checks if the dimension is greater than 1. If it is, it recursively calls itself on each element of the array, reducing the dimension by 1. This is done to handle multi-dimensional arrays.\n\nIf the dimension is 1 (i.e., the array is a 1-dimensional array), it uses the `all` function to check if all elements in the array satisfy the test function.\n\nThe `all` function returns `True` if all elements in the iterable (in this case, the test function) return `True`, and `False` otherwise. This means that if all elements in the array pass the test, the function will return `True`.\n\nIn summary, this function checks if all elements in a nested array (or any other array) satisfy a certain condition.\n", "url": "46e171604d456aab34ab6b4d624435a2", "gt": "Returns True if test is True for all array elements . Otherwise returns False ."}, {"nl_input": "The provided Python code is calculating the size of a numpy array in bytes. The function `bytesize` takes a numpy array as input and returns the size of the array in bytes. The size of an array is calculated by multiplying the product of the dimensions of the array (`arr.shape`) by the size of the data type of the array (`arr.dtype`).\n", "url": "f0456030f3cb36953670e94276edb1d5", "gt": "Returns the memory byte size of a Numpy array as an integer ."}, {"nl_input": "The provided Python code is used to replace certain characters in a string with underscores. The purpose of this code is to clean up a string by replacing certain special characters with underscores, which is often used in data cleaning or preprocessing tasks.\n", "url": "be5711e9db130456deb244ee94eed831", "gt": "remove problem characters from string"}, {"nl_input": "This Python code is used to generate a range in Excel format for a given series in a data table. The function `x_values_ref` is used to generate a range in Excel format for a given series in a data table. The range is defined as \"Sheet1!$A$%d:$A$%d\" where %d is the top and bottom row numbers.\n", "url": "25e289a769f7ae896c02b2c308474c4e", "gt": "The Excel worksheet reference to the X values for this chart ( not including the column label ) ."}, {"nl_input": "The provided Python code is a function that generates a random string of a specified length. The function uses the UUID library to generate a unique identifier, then converts this identifier to a string in a specific format. The function then converts all characters to uppercase and removes the hyphen (-) from the string. Finally, it returns a substring of the generated string of the specified length.\n", "url": "d0012fec75a957ee2d77e2ac6478bdee", "gt": "Returns a random string of length string_length ."}, {"nl_input": "The Python code is creating a new instance of a class (cls) and initializing it with columns from an array (arr). The purpose of this code is to convert an array of data into a DataFrame, which is a common data structure in Python.\n", "url": "4193356c3a00f554a415099595307044", "gt": "Convert a structured NumPy array into a Table ."}, {"nl_input": "The provided Python code is a function that handles HTTP 401 Unauthorized responses. The function takes in four parameters: a request object, a template for the response, some content to include in the response, and a content type for the response. It then returns an instance of an AccessFailedResponse object, which is a class defined elsewhere in the code.\n", "url": "d5eeb1f8ad1e4d020d24cce0e3083342", "gt": "HTTP response for not - authorized access ( status code 403 )"}, {"nl_input": "The provided Python code is a function that is used to stop a thread. The function is named \"stop\" and it is a part of a class. The purpose of this function is to stop a thread that is currently running.\n\nThe function takes one argument, self, which is a reference to the current instance of the class. The class has a private attribute \"_progressing\" which is set to True. This attribute is used to determine whether the thread should continue running or not.\n\nThe function then sets \"_progressing\" to False, which stops the thread.\n\nFinally, the function calls the join() method on the thread object, which waits for the thread to finish its execution.\n", "url": "66112d5d1ef6700a828265dbc4da86d6", "gt": "Stop the progress bar ."}, {"nl_input": "The provided Python code is a function that increments a counter every time it is called. If the current value of the counter equals the factor, it prints a '+' to the standard output and then resets the counter.\n", "url": "9402a316375e935cabce06eadf9d542a", "gt": "Add one tick to progress bar"}, {"nl_input": "This Python code defines a method named `to_dict` that converts an instance of a class into a dictionary. The purpose of this method is to convert the attributes of an instance of a class into a dictionary, which can then be easily serialized and stored in a database or other data storage format.\n", "url": "7720471d366176807aa531dadb064217", "gt": "Serialize representation of the column for local caching ."}, {"nl_input": "The Python code is a WSGI application handler for serving static files from a Django project. It uses the Django's StaticFilesHandler to serve static files.\n", "url": "3f2207516acc039310a03d719345bbd1", "gt": "Returns the default WSGI handler for the runner ."}, {"nl_input": "This Python function takes a string in the format \"HH:MM:SS\" and converts it to a total number of seconds. It splits the string into hours, minutes, and seconds, then calculates the total number of seconds by multiplying each component by its corresponding value and summing them up.\n", "url": "64d9dc81c20e31b854e0eab01dee6498", "gt": "Converts time strings to integer seconds : param time : %H : %M : %S string : return : integer seconds"}, {"nl_input": "This Python code is used to restore the scrollbar position in a specific GUI application. The scrollbar position is usually saved in a user-specific setting and this function is used to restore it.\n", "url": "00b975fe0f0c6867c45f8b890f4fe429", "gt": "Restoring scrollbar position after main window is visible"}, {"nl_input": "The provided Python code is a function that takes a list of string tokens as input and converts each string token into an integer. The function uses the `map` function to apply the `int` function to each token in the input list, and then converts the result into a list of integers.\n", "url": "6eaf6a5e1e5f229137f1cf2cf2bfdaca", "gt": "Returns sequence of integer ids given a sequence of string ids ."}, {"nl_input": "The provided Python code is a function that takes a list as input and returns a new list with duplicate elements removed. The function uses a set to keep track of the elements that have been seen before, and then uses a list comprehension to create a new list that only includes the elements that have not been seen before.\n", "url": "215a474be7e5886d15c8a3a59eb1b842", "gt": "Remove duplicates from an iterable preserving the order ."}, {"nl_input": "This Python code is a recursive function that traverses a tree data structure, yielding each element in the tree. The function is named \"walk_tree\" and it takes a root node as input. It then iterates over the children of the root node, and for each child, it calls itself to traverse the child's subtree. The function then yields the elements in the subtree, allowing the parent to process them as they are yielded.\n", "url": "7f09c0c1fb655aa7be69dd12ae8b3459", "gt": "Pre - order depth - first"}, {"nl_input": "The provided Python code is a function that checks if a given file is a symbolic link or not. If the file is not a symbolic link, it sets the file's permissions to read-only for the current user.\n", "url": "ace76e2287f89f73f0d302ad68c6b28d", "gt": "Make file user readable if it is not a link ."}, {"nl_input": "The provided Python code is a function that converts a string to CamelCase. The function takes a string as input, splits it into words using underscores as separators, and then capitalizes the first word and joins the rest with lowercase letters.\n", "url": "c954b335d705a71796714fc13a69018b", "gt": "Convert to camel case ."}, {"nl_input": "This Python code is used to write text with a specific color using the colorama library. The colorama library is a Python library that supports colored output in the terminal. The code sets the color of the text and writes it to a file-like object (fp).\n", "url": "b0187a0236d4299c56f0154fb18e9680", "gt": "Colorize text with given color ."}, {"nl_input": "This Python code is used to import a method from a specific module. The purpose of this code is to allow for dynamic importing of methods from a module based on a given module path and method name.\n", "url": "4a9b986374bae09d4078e1f195a5d2c4", "gt": "from a valid python module path get the run method name passed"}, {"nl_input": "This Python function is used to convert a byte string into an integer. The byte string is first converted into an integer using the `int.from_bytes()` method, which is a built-in Python function that converts a byte string into an integer. The byte order and the signed parameter determine the endianness and sign of the resulting integer.\n", "url": "aad5675e5e47b94c38b92c39e101b732", "gt": "This is the same functionality as int . from_bytes in python 3"}, {"nl_input": "The provided Python code is a function that checks if a given data type (dtype) is a subtype of either np.datetime64 or np.timedelta64. The function uses the numpy library's issubdtype function to check if the dtype is a subtype of these two types.\n", "url": "a1bda233eb59bf9da775dcb1ca1b62c7", "gt": "Check if a dtype is a subclass of the numpy datetime types"}, {"nl_input": "This Python function is used to retrieve a dictionary of environment variables based on a list of keys. The function takes a list of keys as input and returns a dictionary where the keys are the input keys and the values are the corresponding environment variables. If an environment variable is not found for a key, it is assigned the value `_UNDEFINED`.\n", "url": "40a703bc56a740baa9b642c07f243912", "gt": "Return a dictionary of key / values from os . environ ."}, {"nl_input": "This Python function is designed to fetch the dimensions of an image from a given URL. The function takes a URL as input, checks if it starts with '//', if so, it prepends 'http:' to the URL. Then, it uses the 'requests' library to fetch the content of the URL, and opens the image data using the 'Image' class from the 'PIL' (Pillow) library. The function then returns the dimensions of the image. If there is an error during the process, it logs the error message and returns None.\n", "url": "cf303e12e0a23ea3d8cf9d64a44bb720", "gt": "Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values"}, {"nl_input": "This Python function is used to retrieve a configuration value from a configuration file. The function takes three parameters: a key, a default value, and a type conversion function. If the key exists in the configuration, the function converts the value to the specified type and returns it. If the key does not exist, the function returns the default value.\n", "url": "386feb46f7695b77a7a29cf6c0dc5ac9", "gt": "Return a main config value or default if it does not exist ."}, {"nl_input": "The provided Python code defines a function named `set_color`. This function is used to set the foreground and background colors of the console output. The function takes four parameters: `fg` (foreground color), `bg` (background color), `intensify` (a boolean value indicating whether to intensify the color or not), and `target` (the output target, usually `sys.stdout`).\n\nThe function raises a `NotImplementedError`, indicating that this function is not yet implemented.\n", "url": "7f7b530bb1644e7ff3a20d39b9f6d9fa", "gt": "Set foreground - and background colors and intensity ."}, {"nl_input": "This Python function is designed to write a string to a file. The function takes two parameters: a file path and a string. It opens the file at the specified path in write binary mode, writes the string to the file, and then closes the file.\n", "url": "cfe10971d3e9565b10d9a8da615d0b58", "gt": "writes a string to file"}, {"nl_input": "This Python code is a function that checks if a list of tab names is sorted in alphabetical order. The function iterates over the list of tab names, comparing each pair of adjacent names. If it finds a pair where the first name is lexicographically larger than the second, it returns False, indicating that the list is not sorted. If it doesn't find any such pair, it returns True, indicating that the list is sorted.\n", "url": "65c25e4888533db2382a5501c97b7fe7", "gt": "Utility function for sort_file_tabs_alphabetically () ."}, {"nl_input": "This Python function is used to decode an image from a string representation. The function takes an image string as input, decodes it into a TensorFlow image object, and then sets the shape of the image to match the shape of the data it was trained on.\n", "url": "ee6f7f25b60a54d1abdd6b0904517c41", "gt": "Reconstruct the image from the tf example ."}, {"nl_input": "This Python code is used to set environment variables for a SCons build system. The purpose of this code is to set the 'CXX' variable to 'CC', 'CXXFLAGS' to '-LANG:std' and 'SHCXX' to '$CXX', 'SHOBJSUFFIX' to '.o', and 'STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME' to 1. These variables are used by the SCons build system to control the compilation process.\n", "url": "d86c7ef069bae9bd25b1719469eaa20e", "gt": "Add Builders and construction variables for SGI MIPS C ++ to an Environment ."}, {"nl_input": "The Python function `prox_zero` is designed to create a zero-filled array of a given shape and data type. The function takes two parameters: `X`, which is the shape of the array to be created, and `step`, which is the data type of the array to be created.\n", "url": "fe2927654759fba2b7cfee8b53e498ca", "gt": "Proximal operator to project onto zero"}, {"nl_input": "This Python code is used to convert a given date into a Unix timestamp (number of seconds since 1970-01-01 00:00:00 UTC). The Unix timestamp is a time-stamp that represents the number of seconds that have passed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC).\n", "url": "c45019dbaf87a4dda8ed93145a8d72d9", "gt": "date to unix timestamp in milliseconds"}, {"nl_input": "This Python code is used to find the parent directory of a given file name. The function `get_parent_dir` takes a file name as input and returns the parent directory of that file. If the parent directory exists, it returns the directory path. If the parent directory does not exist, it returns the absolute path of the current working directory.\n", "url": "d4c1f44c7bd93d72431c1636e15a2c94", "gt": "Get the parent directory of a filename ."}, {"nl_input": "The provided Python code is a recursive function that flattens a nested list. The function takes a 2D list (grid) as input and returns a 1D list. The function uses list comprehension to flatten the 2D list into a 1D list. If the input list contains other lists, the function calls itself to flatten these sublists. This process continues until all sublists are flattened into a single level.\n", "url": "6c2f0cae41d4a8defbd80e5fc9ecf368", "gt": "Takes a multi - dimensional array and returns a 1 dimensional array with the same contents ."}, {"nl_input": "This Python code is used to fetch data from a given URL and then parse it as JSON. The purpose of this code is to fetch data from a URL, decode it to UTF-8, and then load it as JSON.\n", "url": "22b581c617befce3a934d35f780c7538", "gt": "Recieving the JSON file from uulm"}, {"nl_input": "The provided Python code is a function that uses the ibis library's SQL Alchemy module to compile an expression into a SQL query. The function takes two parameters: `expr`, which is the expression to be compiled, and `params`, which is a dictionary of parameters to be passed to the SQL query.\n\nThe function uses the `to_sqlalchemy` function from the SQL Alchemy module of the ibis library to compile the expression into a SQL query. The `dialect.make_context` function is used to create a context for the SQL query, which is necessary for the SQL Alchemy module to correctly interpret the expression.\n\nThe function returns the compiled SQL query.\n", "url": "1c31b5225729722e73162d729a8a9e91", "gt": "Force compilation of expression for the SQLite target"}, {"nl_input": "The provided Python code is a function that patches the gevent and grequests libraries if they exist, otherwise it falls back to using multiprocessing. The function is used to determine whether to use gevent or multiprocessing for asynchronous tasks.\n", "url": "b2d8c9ff02a806e11c86616df579b848", "gt": "Patch the modules with gevent"}, {"nl_input": "This Python function is used to find all synsets (synonym sets) of a given word. The function takes a word as input, lemmatizes it (reduces it to its base form), and then returns a list of all synsets of this word.\n", "url": "ef50ba41894d62298e768a8a40286eeb", "gt": "Returns a list of synsets of a word after lemmatization ."}, {"nl_input": "The provided Python code is designed to find the longest ORF (Open Reading Frame) in a list of ORFs (Open Reading Frames). The ORFs are represented as dictionaries with keys 'sequence' and 'start' and 'end'. The function 'get_longest_orf' sorts the list of ORFs by the length of their 'sequence' and returns the first element of the sorted list, which is the longest ORF.\n", "url": "88b2e5b638d21e4cad0678aa5548008d", "gt": "Find longest ORF from the given list of ORFs ."}, {"nl_input": "This Python code is used to determine the current branch in a Git repository. The function `get_git_branch` takes an optional parameter `git_path` which defaults to 'git'. It then uses the `call` function to execute the 'rev-parse' command on the Git repository, which returns the symbolic name of the current branch. If the branch is 'HEAD', it returns `None`. Otherwise, it returns the base name of the branch name.\n", "url": "313f3e2f971c34ffd53caa9c21f4515c", "gt": "Returns the name of the current git branch"}, {"nl_input": "This Python code is used to create a pie chart with the specified data and labels. The purpose of this code is to visualize the distribution of different types of house explosions in a certain area.\n", "url": "d9b236e9fcf20fa21ca7851c87a14c84", "gt": "Data from http : // indexed . blogspot . com / 2007 / 12 / meltdown - indeed . html"}, {"nl_input": "The Python code is a function named `do_exit` that is used to close a current task and its associated resources. The function takes an argument `arg` which is not used in this context. The function checks if a current task exists, if it does, it closes it and also closes its associated resources. Finally, it deletes the resource manager.\n", "url": "552e6841d09f58e5e1c8fb096c977099", "gt": "Exit the shell session ."}, {"nl_input": "The Python code is a function named `test3` that starts a MVisionProcess object and then waits for 5 seconds before stopping it.\n", "url": "305d82a1849c66873989c4284d69ab1d", "gt": "Test the multiprocess"}, {"nl_input": "The provided Python code is a function definition for a method named `save`. The function is designed to save the current state of an object to a file or a database.\n", "url": "426b13c860e6d3db831d7782b6af8328", "gt": "save the current session override if session was saved earlier"}, {"nl_input": "This Python function is used to convert a categorical variable into a one-hot encoding format. The function takes three parameters:\n\n1. `x`: This is the categorical variable that needs to be converted.\n2. `size`: This is the total number of categories in the categorical variable.\n3. `dtype`: This is the data type of the output array. The default data type is `float32`.\n\nThe function works by comparing the `x` array with a range of numbers from 0 to `size - 1`. If the `x` array matches any of these numbers, it assigns 1 to the corresponding position in the output array, otherwise it assigns 0. The `np.newaxis` is used to add a new axis to the `x` array, which is required for the comparison operation. The `dtype` parameter is used to specify the data type of the output array.\n", "url": "c5ab7e6fd56d3fb3273938700034235b", "gt": "Make a n + 1 dim one - hot array from n dim int - categorical array ."}, {"nl_input": "This Python function, `truncate`, takes two parameters: `value` and `n_digits`. The function truncates the decimal value to a certain number of digits. The truncation is done by multiplying the value by 10 raised to the power of `n_digits` and then truncating the result. The function then divides the truncated value by 10 raised to the power of `n_digits` to get the original value.\n", "url": "a9f00f4b4472333451594b653fd3ddf4", "gt": "Truncates a value to a number of decimals places"}, {"nl_input": "The provided Python code is a function that is used to terminate a subprocess. The function is named 'close' and it is a part of a class. The purpose of this function is to terminate a subprocess that is currently running in the background.\n", "url": "12a0563f902fd7a97c3632a9db804067", "gt": "Close child subprocess"}, {"nl_input": "This Python function, `isnumber`, takes any number of arguments and checks if all of them are either integers or floats. It does this by using the `all` function to ensure that all elements in the list are true, and the `map` function to apply the `isinstance` function to each element in the list.\n", "url": "11f24e28ca5d6dfbed610eec3da9c58d", "gt": "Checks if value is an integer long integer or float ."}, {"nl_input": "The provided Python code is a function that creates a new figure window with a specific size (default is 0, which means the figure will be created in the current figure window).\n", "url": "67b7ab9b728b03a77afa0fe61d8517e2", "gt": "Raises the supplied figure number or figure window ."}, {"nl_input": "The provided Python code is a function that checks if all elements in a given list are equal. It does this by comparing the first element of the list with all other elements. If all elements are equal, it returns True, otherwise it returns False.\n", "url": "2d9deba8d6ccb83eaf09c795b1e77e6a", "gt": "Returns true if all of the elements in the list are equal ."}, {"nl_input": "The provided Python code is a function that takes a list of strings as input and returns a string. The function splits each string in the list, calculates the length of each string, and then concatenates the length of the string and the string itself to form a new string. The result is a string where each string in the input list is represented as a number followed by a colon and the string itself.\n", "url": "f796b43787cd30bb20850ab43571b623", "gt": "Encodes a list of strings to a single string . : type strs : List [ str ] : rtype : str"}, {"nl_input": "This Python code is used to import a public RSA key from a file. The key is then used for encryption and decryption operations.\n", "url": "15c537891f0dde8802ff6c44a92ad71e", "gt": "Read a public RSA key from a PEM file ."}, {"nl_input": "This Python function is designed to read a file from an S3 bucket and convert it into a string. The function takes two parameters: `s3_path`, which is the path to the file in the S3 bucket, and `encoding`, which is the encoding method to use for decoding the file. If no encoding is provided, it defaults to 'utf-8'.\n", "url": "6b951991361dc39522cbc34fb09ce7bc", "gt": "Get the contents of an object stored in S3 as string ."}, {"nl_input": "This Python code is a function that counts the number of times a method has been decorated with the `@aspect` decorator. The `@aspect` decorator is a Pythonic way to add aspect-oriented programming capabilities to a function or class.\n\nThe function `wrap_count` takes a method as an argument. It initializes a counter variable `number` to 0. It then enters a while loop that continues as long as the method has an attribute `__aspects_orig`. In each iteration of the loop, it increments the counter by 1. Finally, it returns the counter.\n\nThe function is used to count the number of times a method is decorated with the `@aspect` decorator.\n", "url": "0ce77b0ad69c4b908a250a40ad5ce9dd", "gt": "Returns number of wraps around given method ."}, {"nl_input": "This Python code is used to write a FITS file. The code defines a function `write_fits` that takes a FITS file as input. It creates a table, converts the table to an HDU (Header Data Unit), and then writes the HDUs to the FITS file.\n", "url": "34b2636593edbd5cd8975c050f2db4ac", "gt": "Write the ROI model to a FITS file ."}, {"nl_input": "This Python code is a function that reads from a standard input (stdin) in chunks of a specified size (bufsize). The function uses a generator expression to create an iterable object that yields chunks of data from the stdin. The function then returns an iterable object that can be used to read the data in chunks.\n", "url": "b66381638399324a2212ecf9179e9699", "gt": "return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk ."}, {"nl_input": "The Python code is designed to terminate a process if it is still alive. The function `kill_mprocess` takes a process as an argument and checks if the process is still alive. If the process is alive, it terminates it and returns `True`. If the process is not alive, it returns `False`.\n", "url": "ff5650a6fb621a5dd82d24d3fdc0acc1", "gt": "kill process Args : process - Popen object for process"}, {"nl_input": "This Python function converts a given datetime object to a Unix timestamp (number of seconds since 01-01-1970 00:00:00 UTC). The function takes a datetime object as input and calculates the difference between it and the Unix epoch (01-01-1970 00:00:00 UTC). The Unix epoch is defined as the number of seconds since 01-01-1970 00:00:00 UTC. The function then returns the difference in seconds plus the number of days.\n", "url": "e81cce5fd2d39302c2607c85226f94d8", "gt": "Convert a UTC datetime to a Unix timestamp"}, {"nl_input": "The provided Python code is a method for a class in Python, specifically a list. The method `pop` is used to remove and return the item at a specific index from the list. The index is optional, and if not provided, it defaults to -1, which means the last item in the list. The method also deletes the item from the dictionary associated with the popped value.\n", "url": "e13e58839609a1526153c3e30429efd5", "gt": "Remove and return the item at index ."}, {"nl_input": "This Python code is a function that loads a library from a list of supported libraries based on the provided version. The function takes a version as input and returns the corresponding library. If the version is not supported, it imports the corresponding library.\n", "url": "cd7a724a7a438604f3c2ad7be5002c74", "gt": "Load the correct module according to the version"}, {"nl_input": "This Python function takes a string and a separator as input, and converts the string into a list of items, removing any leading or trailing whitespace from each item, and returns the resulting list. If the resulting list is empty, it raises a ValueError with a message indicating that the input string is not a valid list variable.\n", "url": "1e5368f3b43db029f24ec30a718ddd75", "gt": "Convert a string to a list with sanitization ."}, {"nl_input": "This Python function, `_unzip_handle`, is used to handle gzip compressed files. It takes a handle as input, and if the handle is a string, it attempts to open the file with that name using `_gzip_open_filename`. If the handle is already a file-like object, it uses `_gzip_open_handle` to open the file.\n", "url": "4df8b32d822042305892bf4e9ffbf95a", "gt": "Transparently unzip the file handle"}, {"nl_input": "This Python code is a function that is used to handle a change event in a combo box. The function takes two parameters: `self` and `value`.\n\n- `self`: This is a reference to the current instance of the class. It is used to access variables that belongs to the class.\n- `value`: This is the new value that the combo box is currently displaying.\n\nThe function logs a debug message indicating the selected value in the combo box. It then calls the `select_by_value` method of the same instance, passing in the new value.\n\nThe function returns a tuple containing the new value.\n", "url": "bbc7873866d390e8731cc146e44f537d", "gt": "Called when a new DropDownItem gets selected ."}, {"nl_input": "This Python code calculates the standard deviation of a list of numbers. The standard deviation is a measure of the amount of variation or dispersion of a set of values. It is often used in statistics to quantify the amount of variation or dispersion of a set of values.\n", "url": "058eaf9c0c5351b7b551170db3cfeb8a", "gt": "The standard deviation of a set of values . Pass in the mean if you already know it ."}, {"nl_input": "The provided Python code calculates the time span in milliseconds between the current time and a given start time.\n", "url": "d49558a22ad4625b2bbd4e37fe9b2f37", "gt": "Return time in milliseconds from start_time"}, {"nl_input": "This Python code is a function that adds an entity to a service registry. The function takes an entity as input, sends a POST request to the 'connections' endpoint of the service registry, and then checks the status of the response. If the status is not 201 (which means the request was successful), it raises a ServiceRegistryError. The function also logs the result of the request and the decoded response.\n", "url": "043f36a47ed7073d2532d69e54bbd43d", "gt": "Adds the supplied dict as a new entity"}, {"nl_input": "The provided Python code is a function that finds the indices of the maximum value in a list of numbers. The function takes a list of numbers as input, finds the maximum value, and then returns a list of indices where the maximum value occurs.\n", "url": "b63b959eb91b99f3a70976d46e49ae48", "gt": "Get tuple ( actually a generator ) of indices where the max value of array x occurs . Requires that x have a max () method as x . max () ( in the case of NumPy ) is much faster than max ( x ) . For a simpler faster argmax when there is only a single maximum entry or when knowing only the first index where the maximum occurs call argmax () on a NumPy array ."}, {"nl_input": "This Python function checks if all elements in a given numpy array `x` are of a certain type (specified by `types`). It uses the `any` function to check if any element in the array `x` satisfies the condition `isinstance(el, t)` for any `t` in `types`. If all elements satisfy the condition, the function returns `True`; otherwise, it returns `False`.\n", "url": "5ab579ff3b2ee7681b98e2869ba83148", "gt": "Do all elements of x have a type from types?"}, {"nl_input": "The provided Python code is a function that checks if a set contains only one element of a specific type. The function takes a set of types as input and returns a boolean value. The function first checks if the set contains only one element, and if it does, it checks if this element is of a specific type. If both conditions are met, the function returns True, otherwise it returns False.\n", "url": "ddc17c866549c6ed7d51235989c860c8", "gt": "Helper method to check if a set of types is the { AnyObject } singleton"}, {"nl_input": "The provided Python code is a function that converts a numpy ndarray to a YAML representation. The function takes a Representer object and a numpy ndarray as input, and returns a sequence of any.\n\nThe function uses the represent_sequence method of the Representer object to represent the numpy ndarray as a sequence of \"!numpy_array\" with the data.tolist() method of the ndarray object.\n\nThe YAML representation of the numpy ndarray is then returned.\n", "url": "68912019b18c412305b0cdb7486fec01", "gt": "Write a numpy array to YAML ."}, {"nl_input": "This Python code calculates the covariance between two points in a 2D space. The covariance is a measure of the degree to which two variables move in tandem. The covariance is calculated as the covariance matrix element at the first row and the second column.\n", "url": "1cc6545a29dbb49958711e7c2b5d549f", "gt": "get the covarince between two points implied by Vario2d"}, {"nl_input": "This Python function, `assert_looks_like`, is used to compare two strings for equality, stripping any whitespace from them. If the two strings are not equal, it raises an `AssertionError` with a custom error message. The function uses regular expressions (`_re`) to replace any whitespace characters with a single space, which is then compared for equality.\n", "url": "5b70ae74acdc38b5b21bbe84441c0c9d", "gt": "Compare two strings if all contiguous whitespace is coalesced ."}, {"nl_input": "This Python code is a function that checks if a given module name is a dependency of another module. The function iterates over a list of dependencies, and if it finds a module with the same name as the input, it calls itself recursively to check the dependencies of that module. If it doesn't find any module with the same name, it raises a RuntimeError with a custom error message.\n", "url": "84e2d66751e0a8ee1b8ae1a7abcdbac3", "gt": "Check if required dependency is installed"}, {"nl_input": "The provided Python code is a function that converts a given object into a JSON string. The function `dump_json` takes an object as an argument and converts it into a JSON string using the `simplejson.dumps` method. The `ignore_nan=True` parameter ensures that NaN values are not included in the output JSON string, and the `default=json_util.default` parameter sets a custom default function to handle any unsupported types.\n", "url": "fb7d849f7856e91684a22299e34b8e2d", "gt": "Dump Python object as JSON string ."}, {"nl_input": "This Python function is used to perform a conditional check. It takes in four parameters: a context (ctx), a logical test (logical_test), a value to return if the logical test is true (value_if_true), and a value to return if the logical test is false (value_if_false).\n\nThe function first checks if the logical test can be converted to a boolean value using the `conversions.to_boolean` function. If it can, it returns the value_if_true. Otherwise, it returns the value_if_false.\n\nThe function is named `_if` to avoid naming conflicts with the built-in `if` statement in Python.\n", "url": "2552c85beba28c28615849a68c3cbdde", "gt": "Returns one value if the condition evaluates to TRUE and another value if it evaluates to FALSE"}, {"nl_input": "The Python function `ReadManyFromPath` is designed to read multiple lines from a file located at a given path. The function uses a `with` statement to open the file in read mode and then calls the `ReadManyFromFile` function to read the file.\n", "url": "fbbe03581abc8a6791e6650ce07ec9ba", "gt": "Reads a Python object stored in a specified YAML file ."}, {"nl_input": "This Python code is designed to round a datetime object to the nearest half-hour. The function `_round_half_hour` takes a record as input, which is presumably a dictionary containing a datetime object. The function then calculates the nearest half-hour to the current time by subtracting the minute of the datetime object from 30. If the minute is already a multiple of 30, it simply rounds down to the nearest half-hour. If it's not a multiple of 30, it rounds down to the nearest half-hour. The function then returns the rounded datetime object.\n", "url": "7ef0b3dda0b7af841693956bd803333a", "gt": "Round a time DOWN to half nearest half - hour ."}, {"nl_input": "This Python code is a method that is used to detach all classes and objects from a specific instance of a class. The method is named \"detach_all\" and it is a part of a class. The purpose of this method is to clear all the objects and classes that are attached to the instance.\n", "url": "c6cd16b1f8c53bd52a696c9afd132194", "gt": "Detach from all tracked classes and objects . Restore the original constructors and cleanse the tracking lists ."}, {"nl_input": "This Python function is designed to check if a certain property exists in a given task's response from a given service. The function takes three parameters: 'service', 'task', and 'prop'. It first attempts to get the response from the service for the given task using the 'get_service_task' function. If an exception occurs during this process, the function simply passes without any further action. If the response is not None and the property is in the response, the function returns True. Otherwise, it returns False.\n", "url": "e8395d634fd7e19cbe150042998fd059", "gt": "True if the json_element passed is present for the task specified ."}, {"nl_input": "This Python code is a generator function that splits a string into parts based on a list of splitters. The function works by iterating over each character in the input string. If the character is in the list of splitters, it starts a new part. If it's not, it adds it to the current part. The function yields the parts as it generates them, allowing the caller to process them one at a time.\n", "url": "7d09bf15750d9a6d6c96b7cee93c93a3", "gt": "Splits a string into parts at multiple characters"}, {"nl_input": "This Python function is used to set the start and stop values of a dictionary. The function is named 'empty' and it takes two parameters: 'self' and 'start' and 'stop'. The 'self' parameter is a reference to the current instance of the class, and 'start' and 'stop' are optional parameters that default to None. The function sets the 'NOT_SET' value to the 'start' and 'stop' keys in the dictionary, and sets 'start' and 'stop' to the provided values if they are not None.\n", "url": "df5d600ef0977e23ecd997c06192235b", "gt": "Empty the range from start to stop ."}, {"nl_input": "The Python code is designed to convert a given array into a numpy array. The function `convert_array` takes an array as input and returns a numpy array. The function uses the `BytesIO` class from the `io` module to create a file-like object from the input array. It then seeks the file to the beginning and uses the `np.load` function to load the array from the file.\n", "url": "7ab4dcc303b95f41a8e282a1be11765c", "gt": "Converts an ARRAY string stored in the database back into a Numpy array ."}, {"nl_input": "This Python code is a helper function for a class that performs parallel comparison. The purpose of this function is to compute a value based on a set of pairs of values. The function takes three arguments: a class object, a list of pairs, and a value to compare. It also takes an optional parameter x_link, which is used to link the values in the pairs.\n", "url": "6f49a9d3d5434a4da776633e29108547", "gt": "Internal function to overcome pickling problem in python2 ."}, {"nl_input": "This Python code defines a function `string_input` that takes a prompt as an argument. If the Python version is 3, it uses the `input` function to get user input. If the Python version is not 3, it uses the `raw_input` function. The function is used to get user input in a more user-friendly way compared to the `input` function, which is more secure.\n", "url": "080fc0fc8b3ab53b0bf658fa8b4f0b09", "gt": "Python 3 input () / Python 2 raw_input ()"}, {"nl_input": "This Python code is creating an argument parser for a command-line interface (CLI) that allows users to specify certain options and arguments. The purpose of this code is to facilitate the process of releasing Python packages to the Python Package Index (PyPI).\n", "url": "3f4199e0fe99241698056724f54fe656", "gt": "Build argument parsers ."}, {"nl_input": "This Python function is designed to extract specific columns from a given row based on a list of column indices. The function takes two parameters: a list of column indices and a row. It then returns a new row that consists of the values from the specified columns.\n", "url": "c90da7779a167e77043c04ce9292eb6e", "gt": "Return only the part of the row which should be printed ."}, {"nl_input": "This Python function is designed to calculate the last day of a specific month, given a specific date. The function takes a datetime object as input, adds 32 days to it, then sets the day to the first day of the next month. It then subtracts 1 hour from the new date to get the last day of the current month.\n", "url": "820668a155ea53034787f1042a2328c0", "gt": "Returns day number of the last day of the month : param t : datetime : return : int"}, {"nl_input": "The provided Python code is a recursive function that flattens a nested list. The function `flatten` takes a nested list as input and returns a flattened version of the list. The function uses a helper function `__inner_flat` to recursively flatten the nested list.\n", "url": "746e950661be8d29bb8cf497c2bb802a", "gt": "Return a flatten version of the nested argument"}, {"nl_input": "The provided Python code is a function definition for a class method named `_request`. This function is used to send HTTP requests to a specified endpoint with optional parameters, data, and headers. The function takes in five parameters: `method` (the HTTP method to use, such as 'GET', 'POST', etc.), `endpoint` (the URL to send the request to), `params` (optional parameters to send with the request), `data` (optional data to send with the request), and `headers` (optional headers to send with the request). The function returns a dictionary containing the response from the server.\n", "url": "81f78b855d5b8fe9705ac46615003bea", "gt": "HTTP request method of interface implementation ."}, {"nl_input": "The provided Python code is a function that checks if a set contains only one element of a specific type. The function takes a set of types as input and returns a boolean value. The function first checks if the set contains only one element, and if it does, it checks if this element is of a specific type. If both conditions are met, the function returns True, otherwise it returns False.\n", "url": "ddc17c866549c6ed7d51235989c860c8", "gt": "Helper method to check if a set of types is the { AnyObject } singleton"}, {"nl_input": "This Python code is converting a 4x4 matrix to a 16-element GLfloat array. The matrix is first converted to a column-major order and then flattened to a 16-element array. The result is then converted to a GLfloat array.\n", "url": "59d8da7afcf5b0e96574ac4215a35798", "gt": "Convert a numpy row - major homogenous transformation matrix to a flat column - major GLfloat transformation ."}, {"nl_input": "This Python code is used to remove the legend from a matplotlib plot. The function `remove_legend` takes an optional argument `ax` which defaults to `None`. If `ax` is `None`, it will get the current axes of the current figure. Then, it sets the `legend_` attribute of `ax` to `None`, effectively removing the legend. Finally, it calls the `draw` function to update the figure.\n", "url": "84f9940c4dee76cc18b2c7cf263add76", "gt": "Remove legend for axes or gca ."}, {"nl_input": "This Python function is designed to parse a string that contains integers separated by commas into a tuple of integers.\n", "url": "971e5642fa7223efcc06c337dca4248b", "gt": "Return a tuple from parsing a b c d - > ( a b c d )"}, {"nl_input": "The provided Python code is a function that converts a string to a date object. The function takes a string as input and checks if it is a valid date. If it is, it returns the date object. If not, it uses the dateutil library to parse the string and return the date object.\n", "url": "dfec582c3aa4ec5eaafa97cc052f017e", "gt": "Return a Python date that corresponds to the specified string representation ."}, {"nl_input": "This Python code generates a Gaussian distribution with a given mean and standard deviation, and a number of points (default is 50). The function `gaussian_distribution` generates a range of x-values (from mean - 4 standard deviation to mean + 4 standard deviation) and a corresponding y-value for each x-value, which is a Gaussian probability density function.\n", "url": "8d2a0bf0c1937e144da08f9d53432914", "gt": "get an x and y numpy . ndarray that spans the + / - 4 standard deviation range of a gaussian distribution with a given mean and standard deviation . useful for plotting"}, {"nl_input": "The Python function `trigger` is a method that is used to trigger a specific event or action based on certain conditions. The function takes three parameters: `self`, `target`, and `trigger`. The `self` parameter is a reference to the current instance of the class, `target` is a string that represents the object to be triggered, and `trigger` is a string that represents the event or action to be triggered. The function also takes an optional `parameters` parameter, which is a dictionary that contains key-value pairs of parameters to be passed to the event or action.\n", "url": "93fd9d04ea0ba686378532352580da58", "gt": "Calls the specified Trigger of another Area with the optionally given parameters ."}, {"nl_input": "This Python code is a function that takes a YAML dumper object and a data string as input. If the input string contains a newline character ('\\n'), it uses the dumper's `represent_scalar` method to represent the data as a scalar string with the 'tag:yaml.org,2002:str' tag. If the string does not contain a newline character, it simply uses the dumper's `represent_scalar` method to represent the data as a scalar string.\n", "url": "d04afb88b8e76370816e10e2ef0489ce", "gt": "Presenter to force yaml . dump to use multi - line string style ."}, {"nl_input": "This Python code defines a function `_callable_once` that takes a function `func` as an argument. The function `_callable_once` is a wrapper for the original function `func`. The purpose of this function is to ensure that the original function is only called once.\n\nHere's a brief summary of the code:\n\n1. The function `_callable_once` takes a function `func` as an argument.\n2. Inside `_callable_once`, it defines another function `once`.\n3. The `once` function checks if the attribute `called` of the `once` function is `True`.\n4. If `called` is `False`, it calls the original function `func` with the given arguments and updates the `called` attribute to `True`.\n5. If `called` is `True`, it does not call the original function `func` and instead sets the `called` attribute to `False`.\n6. The `once` function returns the result of the original function `func`.\n", "url": "e3cab059569d3c5bbd974a42e0a7a488", "gt": "Returns a function that is only callable once ; any other call will do nothing"}, {"nl_input": "This Python function is used to convert textual data into a Graphviz graph format. The function takes a string of text as input, converts it into a Graphviz Source object, and then pipes the Source object to a decode function to convert the text into UTF-8 encoding.\n", "url": "c492f4d1b811b4b2f599b2b594ef2fa4", "gt": "create a graphviz graph from text"}, {"nl_input": "This Python code defines a method named `next` that retrieves the next value from an iterator. The method is part of a class and is used to get the next item from the iterator. The `six` library is used to get the next item from the iterator, and the `_item_iter`, `_parent`, and `_remaining` attributes are used to keep track of the current item, the parent of the current item, and the remaining number of items to be retrieved, respectively.\n", "url": "1cd8598eada8e6213ad9a5841079e3a4", "gt": "Get the next value in the page ."}, {"nl_input": "The provided Python code is a method that is being called when an instance of a class is invoked. The method is designed to create a new instance of a document class based on the provided arguments. The \"mongokat_collection\" keyword argument is then assigned to the \"kwargs\" dictionary.\n", "url": "4bae73fa2bdaf7b167050bf6b5c09902", "gt": "Instanciates a new * Document * from this collection"}, {"nl_input": "The provided Python code is used to extract a region from an image based on a given segment. The segment is defined by its coordinates (x, y, w, h) which represent the top-left corner and the size of the region. The function then returns the region defined by these coordinates.\n", "url": "adf1e40be190a7d6a349c02a10d5a420", "gt": "given a segment ( rectangle ) and an image returns it s corresponding subimage"}, {"nl_input": "This Python function is designed to round a given number to a specified number of decimal places. If the 'no_commas' parameter is set to True, the function will format the number without commas. The function uses the '{:f}' format string to format the number, which is suitable for floating point numbers. If 'no_commas' is set to True, the function uses the '{:,f}' format string to format the number, which is suitable for numbers with commas.\n", "url": "6c190d35f3b002574675f1e3ab001e73", "gt": "Formats the given number in decimal format using a period and commas"}, {"nl_input": "The Python function `decode` is used to decode a byte string into a specific format. The `self` parameter is a reference to the current instance of the class, and `bytes` is the byte string to be decoded. The `raw` parameter is a boolean value that indicates whether the byte string is raw (i.e., it's not a string of bytes). The function uses the `struct` module to unpack the byte string into a specific format, and then returns the first element of the tuple.\n", "url": "57a4c6f385e589e91cd6625dab4b410e", "gt": "decode ( bytearray raw = False ) - > value"}, {"nl_input": "The provided Python code is a function that takes a URL as input and returns the image content as a StringIO object. The function uses the requests library to send a GET request to the provided URL, and then uses the content of the response to create a StringIO object. The StringIO object is then returned by the function.\n", "url": "927f00ae21352b1a481fdb3b3a998709", "gt": "Fetch an image from url and convert it into a Pillow Image object"}, {"nl_input": "This Python code is used for convolving a 2D image with a 1D Gaussian kernel. The function `convolve_gaussian_2d` takes two parameters: an image and a 1D Gaussian kernel. It uses the `scipy.ndimage.filters.correlate1d` function to convolve the image with the kernel along both axes. The result is then returned.\n", "url": "e9c213af9e538bd916581d4896dba6bb", "gt": "Convolve 2d gaussian ."}, {"nl_input": "This Python function is used to assert that a specific method has been called once in a mock object. The function takes a mock object as an argument and checks if the method has been called once. If it has not, it raises an AssertionError with a message indicating the number of times the method has been called.\n", "url": "283407ebde908befdeb4f9e9a180dcad", "gt": "assert that the mock was called only once ."}, {"nl_input": "The provided Python code is a function that calculates the L2 norm (or Euclidean norm) of a given array. The L2 norm is a measure of the magnitude of a vector in a multi-dimensional space. It is often used in machine learning and statistics to measure the distance between data points.\n", "url": "6eae45bb8c323c115cf65c7a07fdcc89", "gt": "The l2 norm of an array is is defined as : sqrt ( ||x|| ) where ||x|| is the dot product of the vector ."}, {"nl_input": "This Python function is used to acquire a lock on an object. The purpose of this function is to ensure that only one thread can access the object at a time, preventing data inconsistencies or race conditions.\n", "url": "816895340ccbbbb54d93a01f6a2e90d8", "gt": "Lock connection from being used else where"}, {"nl_input": "This Python function is used to calculate the MD5 hash of a file at a given path. The MD5 hash is a 32-character hexadecimal number that represents a message digest of a message. It's a widely used cryptographic hash function that produces a unique hash value for each unique message.\n", "url": "26bc7d3a200bdf0ca8e1859c261311a2", "gt": "Calculate the MD5 hash for a file ."}, {"nl_input": "The provided Python code is a function that converts a Python object into a C pointer. The function is named \"pointer\" and it takes no arguments. It uses the ctypes module to perform the conversion. The function returns a C pointer to a uint8_t object.\n", "url": "fec232c19895c2355a9c5e0943bd3500", "gt": "Get a ctypes void pointer to the memory mapped region ."}, {"nl_input": "This Python function is designed to find duplicate rows in a DataFrame based on a specific column. The function takes two parameters: a DataFrame (df) and a column name (col_name). It then checks if the column exists in the DataFrame and if there are any duplicate rows in the specified column. If there are, it returns these duplicate rows.\n", "url": "71ac2d55c8dc09493dd8ee9bf38f707a", "gt": "Return a DataFrame with the duplicated values of the column col_name in df ."}, {"nl_input": "This Python function is designed to validate an email address using Django's built-in validators and exceptions. The function takes an email address as input and returns True if the email is valid, and False otherwise. If the email is not valid, an exception is raised and caught, which in turn returns False.\n", "url": "c6194fe5a34f0e66d7c6f7108b41e3c2", "gt": "Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str"}, {"nl_input": "The provided Python code is a function that loads a file. The function takes an input, which is presumably a file path, and returns a list of floating-point numbers from the file. The function uses two other functions: _float_oper and _fpush.\n\n_float_oper is a function that takes a string and returns a list of floating-point numbers. It's unclear what this function does, as it's not defined in the provided code.\n\n_fpush is another function that is not defined in the provided code. It seems to be a helper function for _float_oper, but without more context, it's hard to provide a more accurate summary.\n\nIn summary, this function is used to load a file, extract a list of floating-point numbers from it, and then push these numbers onto a stack.\n", "url": "036b4c02ed9098fec68a728552683cf6", "gt": "Loads a floating point value from a memory address . If 2nd arg . start with * it is always treated as an indirect value ."}, {"nl_input": "This Python code defines a function `create_object` that creates a new instance of a class `cls` and initializes its attributes with the values provided in the `members` dictionary.\n", "url": "06e514824a4cbc11df6792c766d1107e", "gt": "Promise an object of class cls with content members ."}, {"nl_input": "This Python code is used to convert a list of strings into an array of Java Strings. The function `string_list_to_array` takes a list of strings as input and converts it into an array of Java Strings.\n", "url": "cb7ea10fe8e12a61d1c4426495277b2b", "gt": "Turns a Python unicode string list into a Java String array ."}, {"nl_input": "This Python code is designed to find the distinct elements in a list. The function `distinct` takes a list `xs` as an argument and returns a new list that contains only the unique elements from the original list.\n", "url": "328596b5f38ea5aea10ae6d53e289f18", "gt": "Get the list of distinct values with preserving order ."}, {"nl_input": "The provided Python code is a function that normalizes a given text by replacing newline characters with spaces and replacing multiple consecutive spaces with a single space. The function is used to clean and preprocess data before it is used for further analysis or modeling.\n", "url": "ffaf50749737d70a6ecb6ce9b0f9ac24", "gt": "This removes newlines and multiple spaces from a string ."}, {"nl_input": "The provided Python code is a function that checks if a given key is present in a list of keys stored in the instance of a class. The function takes a string key as input and returns a boolean value indicating whether the key is present in the list of keys.\n", "url": "cca5dd52a3d19626fff09249a49c1508", "gt": "Checks if key exists in datastore . True if yes False if no ."}, {"nl_input": "The Python function `other_ind` is designed to generate a sequence of integers from a minimum value to a maximum value, with a specific step size. The function uses the `numpy` library to perform the operation.\n", "url": "cffe83a2e89929847264ed6d72d2bfca", "gt": "last row or column of square A"}, {"nl_input": "This Python code is used to split a multiline string into a list of lines, then strip each line, and finally filter out any empty lines. The purpose of this code is to split a multiline string into a list of lines, removing any leading or trailing whitespace from each line, and then filter out any empty lines.\n", "url": "aea5c1280e87fefede7936dd80701640", "gt": "Split a multiline string into a list excluding blank lines ."}, {"nl_input": "This Python code is designed to clean up a namespace in an XML document. The function `remove_namespaces` takes as input the root of an XML document and removes any namespace declarations from the tags of the elements in the document.\n", "url": "4897101b66976544fdacfbf2e9c0905c", "gt": "Call this on an lxml . etree document to remove all namespaces"}, {"nl_input": "The provided Python code is a function definition for a class in a specific context. The function is designed to handle a block of code, which is typically used in object-oriented programming.\n\nThe function takes one argument: `self`, which is a reference to the current instance of the class.\n\nThe function first decreases the current indentation level by 1. This is done to ensure that the code block is properly indented.\n\nIf the `auto_added_line` attribute of the class instance is `False`, the function then calls the `writeln` method to automatically add a new line after the block of code.\n\nFinally, it sets `auto_added_line` to `True`, indicating that a new line has been automatically added.\n\nThe purpose of this function is to ensure that the block of code is properly indented and automatically added a new line after it, which is common in many programming contexts.\n", "url": "42b3324ffb7137bc277bcb02f986b8c2", "gt": "Ends an indentation block leaving an empty line afterwards"}, {"nl_input": "The provided Python code is a function that dumps the variables passed to it. The function `var_dump` is used to print the variables and their values. The variables are dumped in a human-readable format.\n", "url": "8d8f80a0b950b795f1c8a086acdd7118", "gt": "shows structured information of a object list tuple etc"}, {"nl_input": "This Python code is used to print a table. The table is a list of lists, where each inner list represents a row in the table. The code first calculates the maximum length of each column in the table, then it prints the table header and the separator lines. After that, it prints each row in the table.\n", "url": "fdf9c3138a50fcd116a6a649d76c6fd5", "gt": "Print a list in tabular format Based on https : // stackoverflow . com / a / 8356620"}, {"nl_input": "The Python code is designed to extract the domain from a given URL. The function `get_domain` takes a URL as input and parses it using the `urlparse` function from the `urllib.parse` module. It then constructs the domain string by formatting the scheme and network location (netloc) from the parsed result.\n", "url": "e252a286af69716cea212276bf27704f", "gt": "Get domain part of an url ."}, {"nl_input": "This Python code is a method that moves a game object in a 2D space. The object's position is updated based on its current rotation and a certain step size. The method is named 'forward' and it takes two parameters: 'self' and 'step'. 'self' is a reference to the instance of the class, and 'step' is the distance to move in the direction of the object's rotation. The method updates the object's position by adding the cosine and sine of the rotation to the current position, and then moves the object to the new position. The object's brush state is also updated.\n", "url": "a90e229ae60bf14f33825c5a2076279a", "gt": "Move the turtle forward ."}, {"nl_input": "This Python function is designed to fetch the power status of a specific system, identified by a given system ID. The function uses a dictionary to map the power states to their corresponding values, and then retrieves the value associated with the system's current power state from this map.\n", "url": "4df736d409ad256e418ff40790a155c7", "gt": "Request the power state of the server ."}, {"nl_input": "The provided Python code is an asynchronous function that interacts with a device (represented by the 'dev' parameter) to fetch system and interface information. The 'dev' parameter is expected to be an object that has methods 'get_system_info' and 'get_interface_information'. The function then prints the system and interface information to the console.\n", "url": "a9ce795a398353c1a729dd88e9f36571", "gt": "Print out system information ( version MAC addrs ) ."}, {"nl_input": "This Python function is designed to get the Python representation of a field. If the field is multiselected, it calls the superclass's get_python method, which in turn returns the Python representation of the field. If the field is not multiselected, it simply returns the Python representation of the field.\n", "url": "3517a110d923d3d76980623ab8f32f0a", "gt": "Only return cursor instance if configured for multiselect"}, {"nl_input": "The provided Python code is designed to remove a specific key-value pair from all dictionaries in a list. The function `dictlist_wipe_key` takes a list of dictionaries (`dict_list`) and a key (`key`) as input. It then iterates over each dictionary in the list, and removes the key-value pair associated with the given key.\n", "url": "9c7542a2ddb9b898a1ef814aa988a382", "gt": "Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists ."}, {"nl_input": "This Python function, `to_comment`, is designed to convert a string into a comment format. The function takes a string as input and returns a string in the comment format. If the input string is `None`, the function returns an empty string. If the input string is not `None` and contains one line, the function returns a string with a single asterisk followed by the input string. If the input string contains more than one line, the function splits the input string into lines, removes the last line, and then joins the remaining lines with asterisks on either side.\n", "url": "ec7551975fa7792ee15876bf8a1fd28d", "gt": "Builds a comment ."}, {"nl_input": "The provided Python code is a function that generates a random filename with a \".incomplete\" suffix. The function takes a filename as input and appends a random string of uppercase letters and digits to it, then returns the completed filename.\n", "url": "5d64d35b32b31a5d6d02bfa0b6d93eff", "gt": "Returns a temporary filename based on filename ."}, {"nl_input": "The Python code is a function that checks if a directory exists at a given URL using HTTP requests. The function takes a few parameters: the URL to check, and any additional arguments to pass to the HTTP request. If the directory exists, the function returns True, otherwise it returns False.\n", "url": "1de08117571a8ec22d8964787f402111", "gt": "Makes a HEAD requests to the URI ."}, {"nl_input": "This Python code is used to remove duplicates from a list. The function `dedupe_list` takes a list as input and returns a new list with duplicate elements removed. It uses a set to keep track of the elements that have been seen before, and only includes elements that have not been seen before in the new list.\n", "url": "695e29d80ca42056024f20cf87ce69a0", "gt": "Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed"}, {"nl_input": "This Python function is designed to validate the authority URI (host/path) in a URL. The function takes two parameters: host and path. It checks if the host is not empty and the path is not empty, and if the path does not start with a slash ('/'). If any of these conditions are not met, it raises a ValueError with a custom error message.\n", "url": "c1479c1418466abefea9034bbb795fa5", "gt": "Ensure that path in URL with authority starts with a leading slash ."}, {"nl_input": "The provided Python code is a function that is used to clean up a certain context and all associated plugins. The function iterates over each instance in the context and each plugin, and then deletes them.\n", "url": "54e361163495de66afd390a12edfd5bd", "gt": "Forcefully delete objects from memory"}, {"nl_input": "The Python code is a function that checks if all elements in a list (`s`) are within a specified interval (`l` to `r`) with a certain border type (`border`). The function uses a list comprehension to iterate over each element in `s` and checks if it is within the interval using the `IntensityRangeStandardization.is_in_interval` function. If all elements are within the interval, the function returns `True`, otherwise it returns `False`.\n", "url": "b81cfdd240c83e76a6587150b51a1068", "gt": "Checks whether all number in the sequence s lie inside the interval formed by l and r ."}, {"nl_input": "This Python code is used to escape special characters in a string for use in an HTML context. The function `do_forceescape` takes a value as input and checks if it has an attribute `__html__`. If it does, it calls this attribute to get the string representation of the value, converts it to Unicode, and then escapes it. If the value does not have this attribute, it simply returns the original value.\n", "url": "3dd1d55124da3efc3cb4dcc02a252531", "gt": "Enforce HTML escaping . This will probably double escape variables ."}, {"nl_input": "The provided Python code is a function for calculating the log loss, which is a measure of the performance of a classification model. The log loss is used in binary classification problems. The function takes two arguments: `preds`, which is the predicted probabilities, and `labels`, which are the true labels. The function calculates the log likelihood of the model's predictions, and then returns the negative of this value, as log loss is typically used to maximize the likelihood of the predictions.\n", "url": "a7e256b73adf2d656acee870a3a79760", "gt": "Logarithmic loss with non - necessarily - binary labels ."}, {"nl_input": "The provided Python code is a function that calculates the correlation coefficient between two sets of data, y_true and y_pred. The correlation coefficient is a measure of the linear relationship between two variables. The closer the correlation coefficient is to 1, the stronger the correlation between the two variables.\n", "url": "95479cad0b74fe06bcd262b9f5750cff", "gt": "Compute Pearson correlation coefficient ."}, {"nl_input": "The provided Python code is used for pickling (serialization) of a given object (`thing`) and saving it to a file (`fname`). The pickling process is a way to convert a Python object into a byte stream, which can then be stored or transmitted over a network.\n", "url": "a0c6bdbe745a48b0c5ff9e6435ea812c", "gt": "save something to a pickle file"}, {"nl_input": "The provided Python code is a recursive function that calculates the size of a variable, including its string representation and the size of its data. The function takes two parameters: `name` and `function`. It initializes a variable `data_size` to 0, then it adds the sizes of `name`'s string representation and `function`'s data size to `data_size`. Finally, it returns `data_size`.\n", "url": "96a858eabc728fc5967a94fb8288ff8b", "gt": "Calculates the request payload size"}, {"nl_input": "The Python code is a function that draws a horizontal line on the screen. The function takes five parameters: the x and y coordinates of the line, the width of the line, and the color of the line. The function then uses the `rect` function to draw the line.\n", "url": "bb672ed0a0391881ee18bccacf406e44", "gt": "Draw a horizontal line up to a given length ."}, {"nl_input": "This Python code is a function that checks if a function should be skipped during logging. The function is designed to determine if the request headers contain a specific key-value pair, \"x-request-nolog\", with a value of \"true\" or \"false\". If either of these conditions is met, the function returns True, indicating that logging should be disabled. If neither condition is met, the function checks the function's attribute \"SKIP_LOGGING\" to see if it is set to True. If it is, the function also returns True, indicating that logging should be skipped.\n", "url": "e9004b0eb97dd8833d1979057cf3557e", "gt": "Should we skip logging for this handler?"}, {"nl_input": "This Python code is used to remove accents from a given text. The function `strip_accents` takes a string `text` as input and returns a new string with all accents removed. The function uses the Unicode Data module's `normalize` function to convert the input text into its normalized form, which includes removing accents. Then, it uses a list comprehension to filter out any characters that are not a letter (i.e., a non-Mn character). Finally, it joins the remaining characters into a string and returns it.\n", "url": "939f688bbd8bfbcb8630b0f3636c5c14", "gt": "Strip agents from a string ."}, {"nl_input": "The provided Python code is a function that takes a list as input and returns a new list that contains only the unique elements from the original list.\n", "url": "3cbb0d61a47fcf107eb90adf46f865af", "gt": "Returns a copy of the list without duplicates ."}, {"nl_input": "This Python code is used to create a pattern for an Excel workbook. The pattern is used to set the background color of the cells in the workbook. If the \"bgcolor\" key in the input dictionary is not found, the function returns None. Otherwise, it creates a new pattern, sets the pattern to solid, and sets the foreground color of the pattern to the color specified by the \"bgcolor\" key in the input dictionary.\n", "url": "9c92cc076049eee7eda2f0428ba69851", "gt": "Returns xlwt . pattern for pyspread style"}, {"nl_input": "The provided Python code is a function that takes a tuple of tuples and a key as input. It then iterates over the tuple of tuples, and if the first element of a tuple matches the given key, it returns the first element of the previous tuple. If no previous tuple is found, it returns None.\n", "url": "a9f49c41a4259bbd6e398fd943917f8f", "gt": "Returns the key which comes before the give key ."}, {"nl_input": "This Python code is a function that synthesizes audio samples. The function takes an instance of an Audio object and a duration as input, and returns a new Audio object with synthesized audio samples. The duration is converted to seconds, and a random sequence of samples is generated using a uniform distribution between -1 and 1. The generated samples are then returned as a new Audio object.\n", "url": "f262d61c7690f2df3b731ba862e94301", "gt": "Synthesize white noise"}, {"nl_input": "This Python function `seq_to_str` takes an object as input and converts it to a string. If the object is a string, it returns the object as is. If the object is a list or tuple, it joins all the elements of the list or tuple into a string with the specified separator. If the object is neither a string nor a list or tuple, it converts the object to a string.\n", "url": "933992c3c30c3e7204a12c26102f4cff", "gt": "Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation ."}, {"nl_input": "This Python function is used to compress a given response using gzip compression. The function takes a response as input and returns the compressed data as bytes.\n", "url": "01df1f7502b37cbfa0c1093f3ac8af8d", "gt": "Apply gzip compression to a response ."}, {"nl_input": "The provided Python code is a function that checks if a given text is punctuation or not. It does this by checking if the text is not in the list of vowels or consonants defined in the configuration.\n", "url": "e4b57fbe5c67f44a11eb1116c674b42e", "gt": "Check if given string is a punctuation"}, {"nl_input": "This Python function, `contains_case_insensitive`, is designed to check if a given key (`akey`) exists in a dictionary (`adict`). The function uses a for loop to iterate over each key in the dictionary. For each key, it converts both the key and the input key to lowercase using the `lower()` method, and then compares them. If the keys are equal (ignoring case), the function returns `True`. If the keys are not equal, the function returns `False`.\n", "url": "da943b499fe7be187ec7e73bf3623c8f", "gt": "Check if key is in adict . The search is case insensitive ."}, {"nl_input": "This Python code is a function that takes a Plone instance as an argument and returns a sortable title for that instance. The function first calls a helper function `plone_sortable_title` to get a title for the instance. If the title is callable (i.e., it's a function), it calls the function and returns the result. The title is then converted to lower case and returned.\n", "url": "bf8ce0236578b4476e2e2300f7e64037", "gt": "Uses the default Plone sortable_text index lower - case"}, {"nl_input": "This Python code calculates the arithmetic mean (average) of a list of numbers. The function `_aggr_mean` takes a list of numbers as input and returns their average. If the list is empty, it returns `None`.\n", "url": "fdb8b5e3cd38ee9a1c11aac2eb093594", "gt": "Returns mean of non - None elements of the list"}, {"nl_input": "The Python code is a function that writes JSON data to a file. The function takes two arguments: a file name and the data to be written. It then opens the file in write mode, writes the JSON data to the file, and closes the file. The function also uses the `json.dump()` function to write the data to the file, with an indentation of 2 spaces and sorting keys.\n", "url": "380b53a3dd3846cf3bce78ed3f7cb50d", "gt": "Write a dict to a JSON file ."}, {"nl_input": "The provided Python code is a function that automates the drag-and-drop action on a webpage. The function takes a droppable object as an argument and performs the drag-and-drop action on the current element to the droppable element.\n", "url": "76d7727145c20df82e3cdd84ce19c14e", "gt": "Performs drag a element to another elmenet ."}, {"nl_input": "This Python function takes in three parameters: a list (l), a shape tuple (shape), and a data type (dtype). It then returns a numpy array with the specified shape and data type. The function is used to reshape a list into a numpy array.\n", "url": "75029e9b5315bf8366b2c9d646b179e4", "gt": "Shape a list of lists into the appropriate shape and data type"}, {"nl_input": "This Python function is designed to set the font size of a certain object. The function takes an argument 'size' which is the desired font size. If the current font size of the object is already equal to the desired size, it does nothing. If not, it calls the private method '_set_size' to set the font size to the desired size.\n", "url": "9b8369463483ff7acf0d48fdb0173ba3", "gt": "Convenience method for just changing font size ."}, {"nl_input": "The provided Python code is a function that converts a 2D coordinate (x, y) into a string representation in the format 'columnrow'. The function takes a 2D coordinate as input and returns a string. If the input coordinate is None, the function returns 'pass'. Otherwise, it converts the coordinate into a column-row format and returns the result.\n", "url": "f80f557e979d5bad8c10b42ac118bcda", "gt": "Converts from a Minigo coordinate to a GTP coordinate ."}, {"nl_input": "The provided Python code is a function that uses the `pylint` tool to analyze Python code. The function takes an optional argument `fmt` which defaults to 'colorized' if not provided. If `fmt` is 'html', it creates an HTML report file named 'pylint_report.html' using the `pylint` command. If `fmt` is not 'html', it uses the `pylint` command without a formatting option.\n", "url": "4e7fc7292467413a1cfacc5b3c233894", "gt": "Run verbose PyLint on source . Optionally specify fmt = html for HTML output ."}, {"nl_input": "The provided Python code is a function that selects rows from a table based on a certain field in the table. The function takes three parameters: a table, a field, and a boolean value (defaulting to False). The function uses a lambda function to filter out rows where the field is None. If the complement parameter is True, the function will return the complement of the filter, i.e., rows where the field is not None.\n", "url": "4637b5cbf53ffd9b5dc57fa7dddb71b9", "gt": "Select rows where the given field is not None ."}, {"nl_input": "The Python function `rlognormal` is used to generate random numbers following a log-normal distribution. The log-normal distribution is a type of probability distribution that is used when the data is log-transformed. The function takes three parameters: `mu`, `tau`, and `size`. `mu` is the mean of the log-normal distribution, `tau` is the standard deviation of the log-normal distribution, and `size` is the number of random numbers to generate. If `size` is not provided, the function will generate a single random number.\n", "url": "9688e9bb942e9ce1c123ba0b5179f748", "gt": "Return random lognormal variates ."}, {"nl_input": "The provided Python code is a function that calculates the last location of the minimum value in a given array. The function takes an array as input, converts it to a numpy array, and then calculates the last location of the minimum value. If the array is empty, it returns NaN (Not a Number).\n", "url": "22f1d49b1969ee7e89c6533b9e92988f", "gt": "Returns the last location of the minimal value of x . The position is calculated relatively to the length of x ."}, {"nl_input": "This Python code calculates the Manhattan distance between two objects using the numpy library. The Manhattan distance is a metric that calculates the total distance between two points in a grid-like format. The distance is calculated as the sum of the absolute differences in the x and y directions.\n", "url": "fc1326a05fcddae2c66c888da1670117", "gt": "!"}, {"nl_input": "The provided Python code is a custom implementation of a 1x1 convolutional layer in PyTorch, a popular deep learning framework. The function `conv1x1` takes three parameters: `in_planes`, `out_planes`, and `stride`. It returns a 1x1 convolutional layer with the specified number of input and output planes, and the specified stride.\n", "url": "1c63a8f567508c2dbbd974597db516e0", "gt": "1x1 convolution"}, {"nl_input": "This Python function is designed to convert a string value to a boolean. It first checks if the input value is a boolean. If it is, it returns the value as is. If the value is an empty string, it returns False. If the value is not a boolean, it then attempts to convert the string to a boolean using the `strtobool` function.\n", "url": "5effe214bd4eb37a839bd6cc85d96f1d", "gt": "Configuration - friendly boolean type converter ."}, {"nl_input": "The provided Python code is a function that calculates the number of rows and columns in a 2D matrix. The function takes a 2D matrix (self) and a string 'm' as input. If the first character of 'm' is 'F', it calculates the number of rows in the matrix. If 'm' is a string with 'G' as the first character, it calculates the number of columns in the matrix. If 'm' is a string with 'x' as the first character, it calculates the number of rows in the matrix. If 'm' is a string with 'y' as the first character, it calculates the number of columns in the matrix. The function then returns the number of rows and columns as a tuple.\n", "url": "1cc69e1108c67013d1749b1e3b2f697c", "gt": "Return the 2 - D size of a Jacobian matrix in tuple"}, {"nl_input": "The provided Python code is a function that checks if a given variable is of a specific type and if it's a constant in an enumeration.\n\nThe function `check` is designed to verify if a given variable `var` is of type `str` and if it's a constant in an enumeration.\n\nThe function first checks if the variable `var` is an instance of `str` using the `isinstance` function. If it's not, the function immediately returns `False`.\n\nThen, it calls the function `_enum_mangle` with the variable `var` as an argument. This function is presumably a function that mangles a string to ensure it's a valid identifier.\n\nFinally, the function checks if the mangled string `_enum_mangle(var)` is in the list of constants `self._consts`. If it is, the function returns `True`, indicating that the variable is a constant in the enumeration. If it's not, the function returns `False`.\n", "url": "aeee8726b5988ca3cfb4cf62da5ad292", "gt": "Check whether the provided value is a valid enum constant ."}, {"nl_input": "This Python code is used to flatten a nested list. The purpose of this code is to convert a nested list into a flat list. The function `flatten` takes a list as an argument and iterates over each item in the list. If the item is a sequence (i.e., a list or a tuple) and not a string, it recursively calls the `flatten` function on the item and appends the results to a new list. If the item is not a sequence and not a string, it simply appends the item to the new list. The function then returns the new list.\n", "url": "1b6646003e72c1cab411541d62676516", "gt": "Given a list possibly nested to any level return it flattened ."}, {"nl_input": "The Python code is a function that changes the current working directory to the parent directory of the current one.\n", "url": "8089b0416c588b33db7fed71f2648f52", "gt": "Go to parent directory"}, {"nl_input": "This Python code generates a random passphrase of a specified length, with a mix of lowercase, uppercase letters, digits, and some special characters.\n", "url": "dfca7d4ad7f48b18f0ab7973bae010d7", "gt": "Create a 20 char passphrase with easily typeable chars ."}, {"nl_input": "The provided Python code is a function that generates a unique ID. The function is used in a class to automatically generate a unique ID for each object. The ID is generated using a counter and a unique identifier prefix. If the `use_repeatable_ids` attribute of the class is set to `True`, the function will increment a counter and append it to the ID, creating a unique ID for each object. If `use_repeatable_ids` is `False`, the function will use the UUID4 algorithm to generate a unique ID.\n", "url": "fd0f14db1e14692747016c200776eda9", "gt": "Generate a fresh id"}, {"nl_input": "This Python code is used to convert a string in snake case format to camel case format. The function `_snake_to_camel_case` takes a string in snake case format as input and returns the same string in camel case format.\n", "url": "b19a39d8871b9aba99c3328dd4a655df", "gt": "Convert snake case string to camel case ."}, {"nl_input": "The provided Python code is a function that normalizes a field in a database. The function takes a value as input and checks if it is None or an empty string. If it is, it assigns the default value to the field.\n", "url": "552f0922b8f6a45b814f34ba736cd93d", "gt": "Method that must transform the value from string Ex : if the expected type is int it should return int ( self . _attr )"}, {"nl_input": "This Python function is used to call a C function with a specific return type and arguments. The function is defined with three parameters: rtype (return type), cfunc (C function), and *args (variable length argument list). It then creates a new instance of the return type using the ffi (Foreign Function Interface) module in Python, passes the arguments to the function, and finally returns the result.\n", "url": "0fd6c95993321c05b30171eec7a02101", "gt": "Call a C function that takes a pointer as its last argument and return the C object that it contains after the function has finished ."}, {"nl_input": "This Python code is a custom formatter for logging in Python. The purpose of this formatter is to format the log records in a more readable and understandable way.\n\nThe formatter takes in a record, multiple arguments, and multiple keyword arguments. It then formats the record using the provided arguments and keyword arguments. The newline character is replaced with a newline character and an 8-space indentation. This is done to make the log records more readable and understandable.\n", "url": "3f0750078e82a7d14d344a26ecdd7721", "gt": "Format a message in the log"}, {"nl_input": "This Python function `setdefaults` is used to set default values for keys in a dictionary. The function takes two parameters: a dictionary `dct` and a dictionary `defaults`. It then iterates over the keys in the `defaults` dictionary, and if a key is not already present in the `dct` dictionary, it sets the value of that key to the corresponding value in the `defaults` dictionary. The function then returns the modified dictionary.\n", "url": "9bbbb20f503ba46da76eaa77b98784af", "gt": "Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs ."}, {"nl_input": "The Python function `move_datetime_year` is designed to shift the year component of a datetime object by a specified number of years. The function takes three parameters:\n\n1. `dt`: The datetime object to be modified.\n2. `direction`: A string indicating the direction of the shift. It can be either 'forward' or 'backward'.\n3. `num_shifts`: The number of years to shift.\n\nThe function calculates a delta object with the specified number of years, and then uses the `_move_datetime` function to shift the datetime object based on the direction.\n", "url": "83c7e1fd8666e261b69048f44f984a14", "gt": "Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case"}, {"nl_input": "This Python function, `has_edge`, is used to check if a directed graph (a graph with edges) has an edge between two nodes. The function takes two parameters: `p_from` and `p_to`, which represent the two nodes to be checked. It returns a boolean value indicating whether the edge exists between the two nodes.\n", "url": "7ce5918e50714bd3660f99f0a95cbfe9", "gt": "Returns True when the graph has the given edge ."}, {"nl_input": "The provided Python code is a function that converts a list of strings into a single string, separated by a specified separator.\n", "url": "bde3fb5a6302302752336ef6267a3877", "gt": ">>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7"}, {"nl_input": "This Python code defines a function `getTypeStr` that takes a type as an argument. If the type is a subclass of `CustomType`, it returns the string representation of the type. If the type has an attribute `__name__`, it returns the name of the type. Otherwise, it returns an empty string.\n", "url": "2e39bbd87c8e5002835db5c873dc5a66", "gt": "r Gets the string representation of the given type ."}, {"nl_input": "This Python function is designed to extract the line number from a line of code, which is often preceded by a comment. The function uses a regular expression to match the line number in the comment, and if a match is found, it returns the line number as an integer. If no match is found, it returns 0.\n", "url": "fbc86c5f63c6cbab0a4aa72f0faadcaf", "gt": "Return the line number parsed from the comment or 0 ."}, {"nl_input": "The provided Python code is calculating the size of a numpy array in bytes. The function `bytesize` takes a numpy array as input and returns the size of the array in bytes. The size of an array is calculated by multiplying the product of the dimensions of the array (`arr.shape`) by the size of the data type of the array (`arr.dtype`).\n", "url": "f0456030f3cb36953670e94276edb1d5", "gt": "Returns the memory byte size of a Numpy array as an integer ."}, {"nl_input": "This Python code is a function that converts a string to an integer. The function takes three parameters: a string `num`, a base `radix` (default is 10), and an optional `alphabet` (default is 'BASE85'). The function uses a helper function `NumConv` to convert the string to an integer.\n", "url": "bb7fca42c0c60dc5dcc3212c85ea60c7", "gt": "helper function for quick base conversions from strings to integers"}, {"nl_input": "The provided Python code is a function that checks if a given string `s` is a valid path. The function uses the `os.path.exists()` function to check if the string `s` represents a valid path. If the string is not a string type or if the `os.path.exists()` function throws an exception (which could be due to an OSError or ValueError), the function returns `False`. If the string is a valid path, the function returns `True`.\n", "url": "4edf2a89aa8f5a8713825607f13b3a6c", "gt": "Return whether an object is a path ."}, {"nl_input": "The provided Python code is a composition function that takes multiple functions as input and returns a new function. The new function, when called, applies the input functions in reverse order, with the result of the previous function as the input for the next.\n", "url": "2842f428a9186c722cb73f43029707ed", "gt": "compose a list of functions"}, {"nl_input": "The provided Python code is a function that takes a list of items as input and returns a new list with duplicate items removed.\n", "url": "f47adf1dd2cd6ee94174173d4c0dba3f", "gt": "Remove any duplicate item preserving order"}, {"nl_input": "This Python code is designed to check if a given file is empty or not. The function `_cnx_is_empty` takes a file name as an argument and returns a boolean value indicating whether the file is empty or not.\n", "url": "450cc73f5679416b2729c29d17c5a97f", "gt": "Check if cnr or cns files are empty ( only have a header )"}, {"nl_input": "The provided Python code is a function that checks if a game has been completed. The function is named `is_done` and it is a method of a class. The purpose of this function is to check if the game has been completed.\n\nThe function takes one argument, `self`, which is a reference to the instance of the class. The `self` argument is used to access the instance's attributes and methods.\n\nThe function first checks if the `position` attribute of the instance is `is_game_over`. If `is_game_over` is `True`, it means the game has been completed. If `is_game_over` is `False`, it means the game is not yet completed.\n\nThe function then checks if the `n` attribute of the `position` object is greater than or equal to the `max_game_length` flag. If `n` is greater than or equal to `max_game_length`, it means the game has been completed.\n\nIf either of these conditions is `True`, the function returns `True`, indicating that the game has been completed. Otherwise, it returns `False`, indicating that the game is", "url": "c4ef266e883c3d9c6e5ae62b8ab668ef", "gt": "True if the last two moves were Pass or if the position is at a move greater than the max depth ."}, {"nl_input": "This Python code is used to get the current desktop in X11. The function `xdo_get_current_desktop` is a part of the Xdo library, which is a Python interface to the X11 server. It retrieves the current desktop number.\n", "url": "e5a9e1bb21a3cd7df0858dad0b20c589", "gt": "Get the current desktop . Uses _NET_CURRENT_DESKTOP of the EWMH spec ."}, {"nl_input": "This Python function is designed to generate a matrix from a given list of rows. The function uses the NumPy library to create a matrix from the given list of rows.\n", "url": "a3a4c61e7eea53c9e490604db0b3590b", "gt": "Use numpy to create a real matrix object from the data"}, {"nl_input": "This Python code defines a function `isstring` that checks if a given value is either a string or a bytes object. The function uses the `isinstance` function to check if the value is an instance of either a string or bytes class. If the value is a string or bytes object, the function returns `True`, otherwise it returns `False`.\n", "url": "26c958614bee5fc1c19896b5f0551f81", "gt": "Report whether the given value is a byte or unicode string ."}, {"nl_input": "The provided Python code is a function named `smartread` that reads a file at a given path and decodes it using the detected character encoding. The function uses the `chardet` library to detect the encoding of the file.\n", "url": "9969728e6736bf82b1e9a03044364571", "gt": "Read text from file automatically detect encoding . chardet required ."}, {"nl_input": "This Python code is designed to trim the 'counters' dictionary in a class. The purpose of this code is to remove any entries from the 'counters' dictionary that have a value of an empty string.\n", "url": "1f84fc1e090db77de8d51c7190146975", "gt": "Clear not used counters"}, {"nl_input": "This Python code is used to prepend a line to the beginning of a file. The purpose of this code is to add a new line to the beginning of a file.\n", "url": "b58a9251f71e60af76cc02adf3aeb3e2", "gt": "Rewrite a file adding a line to its beginning ."}, {"nl_input": "The Python function `distance_to_line` calculates the distance from a point `p` to a line defined by two points `a` and `b`. The function first calculates the closest point on the line to the point `p` using the `closest_point` function, and then calculates the distance from this closest point to the original point `p`.\n", "url": "9241c85c39ed221796f46af344122ca2", "gt": "Closest distance between a line segment and a point"}, {"nl_input": "The provided Python code is a function that iterates over a string and applies a callback function to each character. The purpose of this function is to perform a certain action on each character of a string.\n", "url": "a7ae1c18c06bd04b301a3a9dd6511232", "gt": "Wrapper on iter method callback gets an iterator result"}, {"nl_input": "This Python function is designed to manage a resource pool. It has two main tasks:\n\n1. If the resource has been errored, it deletes the resource from the pool.\n2. If the resource has not been errored, it releases the resource from the pool.\n\nThe function is named 'release' and it takes an instance of a class as an argument. The instance is used to access the resource pool and to manage the resource.\n", "url": "c143548cafea9a3925ec6ee6efc41438", "gt": "Releases this resource back to the pool it came from ."}, {"nl_input": "The provided Python code is a function that flattens a nested list. The function takes a list as an argument and returns a new list that is a flattened version of the original list. The function uses the `chain` and `from_iterable` functions from the `itertools` module to flatten the list. If an element in the list is a string, it repeats it. If it's not a string, it simply adds it to the new list.\n", "url": "fd38a2c403c3400fdc8927dbab88c8c1", "gt": "Nested lists to single - level list does not split strings"}, {"nl_input": "This Python code is used to upload a JSON file to a specific location in the IPList. The function `upload_as_json` takes two parameters: `name` and `mylist`. The `name` parameter is used to filter the objects in the IPList and get the first location that matches the `name`. If a location is found, it is stored in the `iplist` variable. Then, the `iplist` is used to upload the `mylist` as a JSON file.\n", "url": "3c6c3247179fba80a83ab23b9c53b9ef", "gt": "Upload the IPList as json payload ."}, {"nl_input": "The Python code is defining a function `get_shape` that takes an image as input. If the image has a `shape` attribute, it returns the shape of the image. Otherwise, it calls a method `get_data` on the image and returns the shape of the data it returns.\n", "url": "cbc0170c46062096a84468b365429079", "gt": "Return the shape of img ."}, {"nl_input": "The provided Python code is a function that takes a class as an argument and returns a list of keys found in the properties of the class. The keys are determined by checking if the 'key' qualifier is present in the property's qualifiers.\n", "url": "662c104ceb549d3c48424fadc1836101", "gt": "Return list of the key property names for a class"}, {"nl_input": "This Python function is used to call a C function with a specific return type and arguments. The function is defined with three parameters: rtype (return type), cfunc (C function), and *args (variable length argument list). It then creates a new instance of the return type using the ffi (Foreign Function Interface) module in Python, passes the arguments to the function, and finally returns the result.\n", "url": "0fd6c95993321c05b30171eec7a02101", "gt": "Call a C function that takes a pointer as its last argument and return the C object that it contains after the function has finished ."}, {"nl_input": "This Python function, `add_form_widget_attr`, is used to add attributes to a form field's widget. The function takes in four parameters: `field`, `attr_name`, `attr_value`, and `replace`. If `replace` is not set to 0, it will replace the existing attribute with the same name. If `replace` is set to 0, it will add the attribute to the existing attributes of the field's widget. The function then returns the modified field.\n", "url": "c33ee1c2506ac02f6f60f8415a7f720a", "gt": "Adds widget attributes to a bound form field ."}, {"nl_input": "The Python code is a function named `call_and_exit` that takes two arguments: `cmd` and `shell`. The `cmd` argument is a string that represents the command to be executed, and the `shell` argument is a boolean that determines whether the command should be executed in a shell or not. If `shell` is `True`, the command will be executed in a shell. If `shell` is `False`, the command will be executed in the Python interpreter's default shell. After executing the command, the Python interpreter will exit with a status code of 0.\n", "url": "13dc817c65ddde88d2a2ec6eee680a81", "gt": "Run the * cmd * and exit with the proper exit code ."}, {"nl_input": "The Python function `extend` is used to merge two dictionaries into one. The purpose of this function is to add the key-value pairs of the second dictionary into the first one. The function `copy` is used to create a copy of the first dictionary, and then `update` is used to add the key-value pairs of the second dictionary into the copied dictionary. The result is a new dictionary that is the combination of the original and the second dictionary.\n", "url": "6355dab675855466faa16c64350ef5f7", "gt": "Merge two dicts and return a new dict . Much like subclassing works ."}, {"nl_input": "This Python code is used to load and execute multiple Python files. The purpose of this code is to execute the Python files that are passed as arguments. Each file is executed in the same global and local scope as the previous one.\n", "url": "fafac547be2039f7ecb1de9409b4e007", "gt": "Load and execute a python file ."}, {"nl_input": "This Python code is used to fill null values in a specific column of a pandas DataFrame. The purpose of this code is to replace all null values in the specified column with NaN (Not a Number). If any error occurs during the process, it will be caught and stored in the 'err' attribute of the DataFrame.\n", "url": "93c0c2ede9a5c8a8b970af18721497ae", "gt": "Fill all null values with NaN values in a column . Null values are None or en empty string"}, {"nl_input": "This Python code is used to compute a boxplot for a given series of data. The boxplot is a graphical representation of the five-number summary (minimum, first quartile (Q1), median, third quartile (Q3), and maximum) of a dataset. The code first checks if the series is null or not, if it is, it returns an empty dictionary. If the series is not numeric, it calls the non_numeric_stats method to handle this. Then, it computes the boxplot statistics using the boxplot_stats function from the matplotlib.cbook module. If the length of the series values is 0, it returns an empty dictionary. Otherwise, it maps the 'count' and 'fliers' values from the boxplot_stats to their corresponding strings and returns a dictionary with these values.\n", "url": "8dd4b555f0e59a0dec7e2a588e55945c", "gt": "Compute boxplot for given pandas Series ."}, {"nl_input": "This Python code is a function that takes two arguments: a geometric object (`geom`) and a list of geometric objects (`geoms`). It iterates over the list of geometric objects, and returns the index of the first object in the list that matches the input object. If no match is found, it returns `None`.\n", "url": "aebc38a583a508530af17ee1c8fef11f", "gt": "Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator ."}, {"nl_input": "This Python function, `uncamel`, is designed to convert a string in camel case format to a string in snake case format. The function works by first replacing all uppercase characters with underscores followed by the lowercase characters, and then replacing all lowercase characters with underscores followed by uppercase characters.\n", "url": "245f32e66d5c23e21c45f22693852c11", "gt": "Transform CamelCase naming convention into C - ish convention ."}, {"nl_input": "This Python code is a recursive function that calculates the number of leaves in a binary tree. The function takes a tree object as input and checks if it is a leaf node. If it is, it returns 1, otherwise, it recursively calls itself to calculate the number of leaves in the left and right subtrees and returns the sum.\n", "url": "7003757d630c03cf7dd68203952cd4cf", "gt": "Determine the number of leaves in a tree"}, {"nl_input": "This Python function is designed to open an Excel file using the openpyxl library and read its contents. The function takes a string argument `xl_path` which is the path to the Excel file. It attempts to load the workbook at the given path using the `load_workbook` function from the openpyxl library. If the workbook is successfully loaded, it returns the workbook object. If an error occurs during the loading process, it raises the exception.\n", "url": "3cd62873f26fd670aeecec18cc0dd297", "gt": "Use openpyxl to read an Excel file ."}, {"nl_input": "The provided Python code is a function that rotates a list by a certain number of steps. The function takes two parameters: a list `l` and an optional parameter `steps`. If no `steps` parameter is provided, it defaults to 1. The function then checks if the length of the list `l` is not 0. If it is, it calculates the remainder of the `steps` parameter divided by the length of the list `l`. This remainder is then assigned to `steps`. If `steps` is not 0, it extracts the first `steps` elements from the list `l` and stores them in a new list `firstPart`. Then, it deletes the first `steps` elements from the original list `l`. Finally, it extends the list `l` with the `firstPart` list.\n", "url": "707569fdd77ebde2ce9e44aeb15df944", "gt": "r Like rotate but modifies l in - place ."}, {"nl_input": "The provided Python code is a recursive function that converts a nested data structure (like a list or a dictionary) into a tuple. The function `tuplize` takes a single argument, `nested`, which can be a string, a list, a dictionary, or any other type of data.\n\nIf the `nested` argument is a string, the function simply returns the string as a tuple.\n\nIf the `nested` argument is a list or a dictionary, the function recursively calls itself on each element of the list or dictionary, converting them into tuples. If an element is not a list or a dictionary, the function simply returns the element itself.\n\nIf the `nested` argument is neither a string nor a list or a dictionary, the function raises a `TypeError`.\n\nThe function uses the `map` function to apply the `tuplize` function to each element of the `nested` list or dictionary, converting them into tuples. If an element is not a list or a dictionary, the function simply returns the element itself.\n\nThe function finally returns the result of the `map` function, which is a list of tuples", "url": "aea6b9304a9b41f33141846e80e9d158", "gt": "Recursively converts iterables into tuples ."}, {"nl_input": "This Python function, `raises_regex`, is a method of a class that uses the `unittest` module to assert that a certain exception is raised when a certain regular expression (regex) is expected. The function takes two parameters: `expected_exception` and `expected_regexp`, which are used to identify the exception and the regular expression to be expected, respectively.\n", "url": "910b81e1c0bbb58ca384ea2eccf81621", "gt": "Ensures preceding predicates ( specifically : meth : called_with () ) result in * expected_exception * being raised and the string representation of * expected_exception * must match regular expression * expected_regexp * ."}, {"nl_input": "This Python function `gen_lower` takes an iterable of strings as input and returns a generator that yields the lowercase versions of the strings. The function uses the built-in `lower` method of strings in Python to convert each string to lowercase.\n", "url": "24e9010513628fcbcbc40bc6617d3e5c", "gt": "Args : x : iterable of strings"}, {"nl_input": "The provided Python code is a method definition for a class in Python. The method `__delitem__` is a special method in Python classes, which is used to delete an item from a specific index in a list.\n\nThe purpose of this code is to delete an item from a cache dictionary based on the internal key of the resource.\n\nThe method `__delitem__` is a special method in Python classes, which is used to delete an item from a specific index in a list. It is a part of the `__del__` method, which is a special method in Python classes that is called when an object is about to be destroyed.\n\nThe `self` parameter is a reference to the current instance of the class, and `resource` is the resource to be deleted from the cache.\n\nThe `self.caches[type(resource)]` is accessing the cache dictionary for the type of the resource.\n\nThe `pop(resource.get_cache_internal_key(), None)` is removing the resource from the cache dictionary. The `get_cache_internal_key()` method is a method in the class that is used to get the internal key for the cache.\n\nThe `", "url": "bf6a4144ae873567dfbd61579c2bba94", "gt": "Remove resource instance from internal cache"}, {"nl_input": "This Python code defines a method named `to_list` that converts a table of values into a list of lists. The method takes an instance of a class that has a table attribute, and returns a list of lists representing the table's values.\n", "url": "c86694b645e5ae2f3a398a6ffb38c3c1", "gt": "Convert this confusion matrix into a 2x2 plain list of values ."}, {"nl_input": "This Python code is a function that synthesizes audio samples. The function takes an instance of an Audio object and a duration as input, and returns a new Audio object with synthesized audio samples. The duration is converted to seconds, and a random sequence of samples is generated using a uniform distribution between -1 and 1. The generated samples are then returned as a new Audio object.\n", "url": "f262d61c7690f2df3b731ba862e94301", "gt": "Synthesize white noise"}, {"nl_input": "This Python code is designed to disassemble a file. The file is disassembled into a format that can be understood by a Python interpreter. The code takes a filename and an optional output stream as input, loads a module from the file, and then disassembles the module into a format that can be understood by a Python interpreter. If the input file is a list of bytecode objects, the code will iterate over these objects and disassemble them. If the input file is a single bytecode object, the code will disassemble it and optionally disassemble it for PyPy. The result is a disassembled version of the module.\n", "url": "765a09c3a704cf281562a8a77a1f8be0", "gt": "disassemble Python byte - code file ( . pyc )"}, {"nl_input": "The provided Python code is a recursive function that flattens a nested list. The function `flatten` takes a nested list as input and returns a flattened version of the list. The function uses a helper function `__inner_flat` to recursively flatten the nested list.\n", "url": "746e950661be8d29bb8cf497c2bb802a", "gt": "Return a flatten version of the nested argument"}, {"nl_input": "The Python code is an asynchronous function that runs a main function. The function is designed to be used with an asynchronous event loop (`asyncio`) in Python. The main function is a task that is created using `asyncio.create_task()`. The created task is then awaited, which means the function will wait for the task to complete before it continues.\n", "url": "74bfcc70541e0daebb0f4db57e3b2a94", "gt": "Asynchronously run the worker does not close connections . Useful when testing ."}, {"nl_input": "The Python code is a function that returns the directory of the directory of the directory of the directory of the current file. This function is used to find the directory of the directory of the directory of the current Python script. This is commonly used in data science and machine learning projects to locate resources such as data files or models.\n", "url": "64b730a598a02b60d9a4b7edcc0c6a63", "gt": "Path to tensorflow_datasets directory ."}, {"nl_input": "This Python code is converting a hexadecimal color code to a HSV (Hue, Saturation, Value) color space. The color code is first normalized to a range of 0-1, and then the code is converted to RGB (Red, Green, Blue) values. The RGB values are then converted to HSV using the `colorsys.rgb_to_hsv` function.\n", "url": "b1e30dc54d4a7c52b1b808729dfb1ec3", "gt": "Converts from hex to hsv"}, {"nl_input": "This Python code defines a function `plot_and_save` that takes in a number of keyword arguments, plots a figure and saves it. The function is named after the task it is supposed to perform, which is to plot and save a graph.\n", "url": "f1fef8351e7337c7f820cb898d402168", "gt": "Used when the plot method defined does not create a figure nor calls save_plot Then the plot method has to use self . fig"}, {"nl_input": "The provided Python code is a function that calculates the dimensions of an array. The function takes an array as input and returns a list of the lengths of each dimension of the array.\n", "url": "3658ef914c025d17376c894d11f4e034", "gt": "Return the size of a multidimansional array ."}, {"nl_input": "The provided Python code is a function that builds a Sphinx documentation using a given context. The function first runs a Sphinx command to build the documentation. If the command fails, it exits the program with the return code of the command.\n", "url": "a687d18eb86da6fe54b7cfe32af45a6e", "gt": "Build documentation as HTML ."}, {"nl_input": "The provided Python code is a function that establishes a connection to a database using ODBC (Open Database Connectivity) interface. The function takes two parameters: a 'dsn' (Data Source Name) which is a string that specifies the connection details, and an 'autocommit' parameter that defaults to True.\n\nThe function then uses the 'connect' method of the 'self' object to establish the connection. The 'engine' parameter is set to 'ENGINE_ACCESS', the 'interface' parameter is set to 'INTERFACE_ODBC', the 'dsn' parameter is the 'dsn' passed as an argument, and the 'autocommit' parameter is the 'autocommit' passed as an argument.\n\nThe 'connect' method is a part of the 'self' object, which is a reference to the instance of the class. It is a method that is used to establish a connection to a database.\n\nThe 'engine' and 'interface' parameters are set to 'ENGINE_ACCESS' and 'INTERFACE_ODBC' respectively, which are constants that represent the engine and interface used for the connection.\n\nThe 'dsn' parameter is", "url": "4b906d8d602bbb965d25996d5a4c5cb1", "gt": "Connects to an Access database via ODBC with the DSN prespecified ."}, {"nl_input": "This Python function is designed to read a file and return a list of lines from the file, stripping any leading or trailing whitespace from each line. If the file does not exist, it raises a `FileNotFoundError` exception, and if this exception is caught, it will call the `fatal` function to print a message to the user.\n", "url": "4cd26ba017dabe234b6b960e4c174cd7", "gt": "Return lines of a file with whitespace removed"}, {"nl_input": "The provided Python code is a function that splits a string object's content into a list of lines. The function is named `lines` and it's a method of a class. The purpose of this function is to return a list of lines from the content of the object.\n", "url": "7b52bc293ffd1b3acabf6268fe94a913", "gt": ""}, {"nl_input": "This Python code is a function that draws lines on a screen using the specified coordinates and color. The function iterates over the given coordinates, and for each coordinate, it either moves the cursor to the specified position or draws a line with the specified color and background.\n", "url": "c1c960991a9d910480d00ff6f90db309", "gt": "Helper to draw lines connecting a set of nodes that are scaled for the Screen ."}, {"nl_input": "This Python code defines a function `get_methods` that takes a variable number of arguments (`*objs`) and returns a set of all methods (attributes) that are callable on all objects provided as arguments. The function uses a combination of `dir`, `getattr`, and `callable` to achieve this.\n", "url": "ca8cd1bc1e11c8fd1689d1abe3f6d04b", "gt": "Return the names of all callable attributes of an object"}, {"nl_input": "The provided Python code is a function that checks if a given string argument is quoted. A string is considered quoted if it has more than one character and the first and last characters are the same. The function uses a constant list of quoted characters (`constants.QUOTES`) to check for this condition.\n", "url": "cfbbfbdb5e84890f7b9938a79629e0e2", "gt": "Checks if a string is quoted : param arg : the string being checked for quotes : return : True if a string is quoted"}, {"nl_input": "The Python function `move_datetime_year` is designed to shift the year component of a datetime object by a specified number of years. The function takes three parameters:\n\n1. `dt`: The datetime object to be modified.\n2. `direction`: A string indicating the direction of the shift. It can be either 'forward' or 'backward'.\n3. `num_shifts`: The number of years to shift.\n\nThe function calculates a delta object with the specified number of years, and then uses the `_move_datetime` function to shift the datetime object based on the direction.\n", "url": "83c7e1fd8666e261b69048f44f984a14", "gt": "Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case"}, {"nl_input": "The provided Python code is used to add execute permissions to a file. The purpose of this code is to change the permissions of a file to allow it to be executed.\n", "url": "5695327040bd9879c8c5374e42e55c3d", "gt": "Adds execute permission to file . : param filename : : return :"}, {"nl_input": "This Python code is a function that takes a set (gset) and an element (elem) as input. It either removes the element from the set using the 'remove' method if it exists, or deletes the element from the set using the 'del' statement if it doesn't. The function then returns the element.\n", "url": "0a08a131b7f20c6ae80cbd8db43c9210", "gt": "Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}"}, {"nl_input": "The provided Python code is a function that checks if all elements in a given sequence (list, tuple, etc.) are True. The function uses the built-in `reduce` function from Python's `functools` module to apply a binary function (in this case, the `lambda` function) to all elements of the sequence, from left to right, so as to reduce the sequence to a single output. The binary function is a logical AND operation, which returns True only if both inputs are True.\n\nThe function `All` takes a sequence as input and returns a boolean value. If all elements in the sequence are True, it returns True; otherwise, it returns False.\n", "url": "f1fa86112e0e73f4f4a31cbe14f04a6b", "gt": ": param sequence : Any sequence whose elements can be evaluated as booleans . : returns : true if all elements of the sequence satisfy True and x ."}, {"nl_input": "This Python function, named `first_sunday`, is designed to find the first Sunday of a given month in a given year. It takes two parameters: `year` and `month`, and returns the date of the first Sunday in that month of the given year.\n", "url": "49aefd290af2372c6b5eb570281c6ce8", "gt": "Get the first sunday of a month ."}, {"nl_input": "This Python function is used to add an input variable to a list. The purpose of this function is to add a variable to a list of input variables. The variable is expected to be an instance of the Variable class.\n", "url": "26565a67fd195231572afee1165f9826", "gt": "Adds the argument variable as one of the input variable"}, {"nl_input": "This Python code is a generator function that iterates over a NumPy array. The function uses a NumPy iterator to iterate over the array, and yields each item in the array. The \"refs_ok\" flag in the nditer function ensures that the array and its items are not shared.\n", "url": "84b81599f848ba0a0de34034369ecd66", "gt": "Wrapper for iterating numpy array"}, {"nl_input": "This Python code is used to split a string into chunks of a specified length. The function `split_len` takes two parameters: a string `s` and a number `length`. It then splits the string into chunks of the specified length and returns a list of these chunks.\n", "url": "fe1575ac247db28014a9b3ed32f060c3", "gt": "split string * s * into list of strings no longer than * length *"}, {"nl_input": "The Python function `monthly` is designed to return the first day of the current month. It uses the `datetime.date.today` method to get the current date, and then uses the `datetime.date` constructor to create a new `date` object with the year and month of the current date. The `date.year` and `date.month` attributes are then used to set the year and month of the new `date` object, respectively. The `date.day` attribute is set to 1 to ensure the first day of the month is returned.\n", "url": "74483d2e3e4816f59f302670fc2add82", "gt": "Take a date object and return the first day of the month ."}, {"nl_input": "This Python function is designed to convert a given object to a float. If the object is a string that represents an infinite number (e.g., \"inf\"), the function will return the object as a float. If the object cannot be converted to a float, it will try to convert it to an integer. If that also fails, the function will return the object as it is.\n", "url": "cf2e8a81dd31fa2f9c43e976123e281e", "gt": "Convert to float if object is a float string ."}, {"nl_input": "This Python code is a method that is being defined in a class. The method is named `on_key_press` and it takes two parameters: `self` and `symbol`. The `self` parameter is a reference to the instance of the class, and `symbol` is the key that was pressed. The method is designed to handle keyboard events.\n\nThe `modifiers` parameter is a list of modifier keys that were pressed when the key was pressed.\n\nThe method calls another method `keyboard_event` with the `symbol` and `self.keys.ACTION_PRESS` as arguments, which is presumably a method that handles keyboard events.\n\nThe `keyboard_event` method is not defined in the provided code, but it's likely a method in a class that handles keyboard events.\n", "url": "b9f179a182e7f371684191f4d2a4434d", "gt": "Pyglet specific key press callback . Forwards and translates the events to : py : func : keyboard_event"}, {"nl_input": "This Python code is designed to convert a binary array to a string representation. The binary array is a list of integers where 1 represents a '*' in the string representation and 0 represents a '.'. The function then iterates over the array, and for each element that is 1, it replaces the corresponding character in the string with a '*'.\n", "url": "59ba4239d919130c70a0976daa47eb7d", "gt": "Returns a string representing a numpy array of 0 s and 1 s"}, {"nl_input": "The provided Python code is a function that takes a string as input and returns a pluralized version of the string if it's not already pluralized, or the original string if it is. The function is named `pluralize` and it's used to convert a singular word to its plural form.\n", "url": "66bffc09e421f8b89cbcc1bc10580629", "gt": ": param string : String can be type resource or python case"}, {"nl_input": "The provided Python code is used to normalize a timestamp by removing the timezone offset from a given timestamp. The function takes a timestamp as input and returns the timestamp with the timezone offset removed. If the timestamp does not have a timezone offset, it simply returns the timestamp as it is.\n", "url": "6ca260fb0f4204fff966670dd6b53076", "gt": "Normalize time in arbitrary timezone to UTC naive object ."}, {"nl_input": "This Python code is used to write data to a FITS file. The purpose of this code is to write a set of data and associated header information to a FITS file. The data is written to the PrimaryHDU (Primary Header Unit) of the FITS file, and the header information is also written to the PrimaryHDU. The HDUList is a collection of HDUs (Header Data Units), and the code writes the HDUList to the specified file. The logging module is used to log the operation.\n", "url": "48ad11d2bff0c767854ed2802f661500", "gt": "Combine data and a fits header to write a fits file ."}, {"nl_input": "The provided Python code is a function that takes a dictionary (`d`) as input and pretty-prints it in a JSON format. The function uses the `json.dumps()` method to convert the dictionary into a JSON string. The `sort_keys=True` parameter sorts the keys in the output JSON, `indent=4` sets the indentation to 4 spaces, and `separators=(\",\",\":\")` sets the separator for keys and values in the output JSON.\n", "url": "bbb8c24e82437ea03fccdc924a99d399", "gt": "Print dicttree in Json - like format . keys are sorted"}, {"nl_input": "This Python function, `remove_empty_text`, is designed to filter out any empty text from a list of Utterance objects. The function takes a list of Utterance objects as input and returns a new list with only the Utterance objects that have non-empty text.\n", "url": "5ca8d1be36d4955478ff4ef72fbc653a", "gt": "Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing"}, {"nl_input": "The provided Python code is a function that checks if the current operating system is Windows and if colorama is installed. If both conditions are met, it returns the wrapped stream of the AnsiToWin32 object, which is typically the standard output stream.\n", "url": "2d584925f28ca1a569c556b3cb0b23bb", "gt": "Return whether the handler is using sys . stdout ."}, {"nl_input": "The provided Python code is a function that checks if a file pointer (`fp`) can be read a certain number of bytes (`size`) without causing an error. The function `is_readable` takes two parameters: a file pointer `fp` and a size `size`. If `size` is not provided, it defaults to 1. The function reads `size` bytes from the file pointer and then seeks back to the beginning of the file. It then checks if the number of bytes read is equal to the size. If it is, the function returns `True`, indicating that the file pointer can be read a certain number of bytes without causing an error. Otherwise, it returns `False`.\n", "url": "ff74b00f4c8a98fb9cf3a85ef310f5bc", "gt": "Check if the file - like object is readable ."}, {"nl_input": "This Python function checks if a file exists at the path RPM_PATH and returns its modification time (mtime) as an integer. If the file does not exist, it returns 0.\n", "url": "6f2c6c2911c241095457edad8d4f610c", "gt": "Get the modified time of the RPM Database ."}, {"nl_input": "The provided Python code is a custom map function that applies a function to each element of an iterable. The function is applied to the elements in the order they appear in the iterable. The result is a new iterable that contains the results of applying the function to each element.\n", "url": "a7edaf5497f4d1c28abc87eedd67ec8f", "gt": "Iterable - first replacement of Python s built - in map () function ."}, {"nl_input": "The provided Python code is a function definition for a Short-Time Fourier Transform (STFT) using the Fast Fourier Transform (FFT) and Inverse Fast Fourier Transform (IFFT) algorithms.\n\nThe function takes two parameters: `func` and `* kwparams`. `func` is the function to be transformed, and `* kwparams` are any keyword arguments to be passed to the function.\n\nThe function uses the `numpy.fft` module's FFT and IFFT functions to perform the STFT. The FFT is used to transform the input function, and the IFFT is used to invert the transformed data.\n\nThe function returns the STFT of the input function.\n", "url": "dc43a25a987b9cb527a790deaae7be02", "gt": "Short Time Fourier Transform for real data keeping the full FFT block ."}, {"nl_input": "This Python code checks if the system is an Arch Linux system. It first checks if the system is Linux and then checks if the Linux distribution is Arch Linux. If both conditions are met, it returns True, otherwise it returns False.\n", "url": "05385bcc31475b348629045db7ae74b2", "gt": "return True if the current distribution is running on debian like OS ."}, {"nl_input": "This Python code is used to cleanse comments from a given line of code. The purpose of this code is to remove any comments from the given line of code. The comments are identified by the '//' or '/* ... */' syntax in C and C++. If the line contains a comment, it is removed from the end of the line.\n", "url": "6e369a16a8e70d37aa500da1cf9eff39", "gt": "Removes // - comments and single - line C - style / * * / comments ."}, {"nl_input": "The provided Python code is used to set the application ID of the current process. The purpose of this code is to set the application ID of the current process to a specific value, which is then used by the operating system to identify the process. This is particularly useful in scenarios where you want to group related processes together, such as in the context of a multi-user application.\n", "url": "3c6813b3e153505df450e4718d17865b", "gt": "Tells Windows this is an independent application with an unique icon on task bar ."}, {"nl_input": "The provided Python code is a function that retrieves the current size of the terminal window in a curses-like manner. The function is named `get_size` and it is used to get the number of columns and lines in the current terminal window.\n", "url": "2c1a6a5126487b41335a09e81eadf164", "gt": "see doc in Term class"}, {"nl_input": "The provided Python code is a function that counts the frequency of each item in a list and returns a list of tuples, where each tuple contains an item from the list and its corresponding count. The function is then sorted in descending order based on the count.\n", "url": "0b667a6f675e931da772a1275fa53ee2", "gt": "Generates a count of the number of times each unique item appears in a list"}, {"nl_input": "The provided Python code is a function that cleans a given text by converting it to a string and then filtering out any characters that are not within the ASCII range for non-space characters (i.e., between 32 and 126 inclusive). The cleaned text is then joined back into a string.\n", "url": "0f171b4626d9f0ea2a003661289af42f", "gt": "Removes all non - printable characters from a text string"}, {"nl_input": "This Python function converts geographical coordinates from meters to latitude and longitude. The function takes three parameters: the x and y coordinates in meters, and an optional parameter for an origin shift. The origin shift is set to 2 * pi * 6378137 / 2.0, which is the average distance between the Earth's equator and the poles.\n\nThe function then calculates the latitude and longitude in degrees by dividing the x and y coordinates by the origin shift and multiplying by 180.0 / pi. The latitude is then converted to its equivalent in the range of -180 to 180 degrees by subtracting pi / 2.0 from the result.\n\nFinally, the function returns the latitude and longitude.\n", "url": "1bc345e3253ff84cfda626f47ab1a8df", "gt": "Converts XY point from Spherical Mercator EPSG : 900913 to lat / lon in WGS84 Datum"}, {"nl_input": "This Python code is used to write a header to a CSV file. The purpose of this code is to write the header fields to the CSV file. The header fields are determined by the function `header_fields(h)`, which is not provided in the code snippet.\n", "url": "065a776db0489e0d6071522739dc609d", "gt": "Print the header for the CSV table ."}, {"nl_input": "This Python code is used to calculate the overlap count between two sets of markers. The markers are represented as dictionaries where each key-value pair represents a marker and its corresponding coordinates. The function `_calc_overlap_count` takes two dictionaries as input, `markers1` and `markers2`. It initializes a zero matrix `overlaps` of size `(len(markers1), len(markers2))`, and then iterates over each group of markers in `markers1`. For each group, it calculates the number of markers in `markers2` that are present in the group of `markers1`, and stores this count in the corresponding position in the `overlaps` matrix. Finally, it returns the `overlaps` matrix.\n", "url": "c8478233dae0b972efc02759fdfebc63", "gt": "Calculate overlap count between the values of two dictionaries"}, {"nl_input": "This Python function is used to set a value in a session dictionary. The function takes two parameters: a key and a value. It then sets the value of the key in the session dictionary to the provided value.\n", "url": "d8d33578fcd0ad196398b5dd87568b3f", "gt": "Saves a value to session ."}, {"nl_input": "The provided Python code reads from standard input (stdin) until the end of the file (Ctrl + D). The purpose of this code is to read data from the user's input and then process it.\n", "url": "e0733d51ee06d0addebb4595beb97e0b", "gt": "Read text from stdin and print a helpful message for ttys ."}, {"nl_input": "This Python function, `pretty_dict_str`, is used to convert a dictionary into a string representation with indentation. The function takes two parameters: a dictionary `d` and an optional parameter `indent` with a default value of 2. The function uses the `StringIO` class to create a buffer and writes the dictionary into this buffer in a pretty format. The function then returns the content of the buffer as a string.\n", "url": "790cc6142b91109d4d9d5a64f0ec5b3b", "gt": "shows JSON indented representation of d"}, {"nl_input": "The provided Python code is a function that iterates over a string and applies a callback function to each character. The purpose of this function is to perform a certain action on each character of a string.\n", "url": "a7ae1c18c06bd04b301a3a9dd6511232", "gt": "Wrapper on iter method callback gets an iterator result"}, {"nl_input": "This Python code is a generator function that takes a list and a chunk size as input, and yields a list of chunks of the input list. The chunk size is defaulted to 50, but can be set to any positive integer. The function iterates over the input list in chunks of the specified size, and for each chunk, it yields the chunk.\n", "url": "7d97cc48df768552ecb833ac5da561e1", "gt": "Break lists into small lists for processing : w"}, {"nl_input": "The provided Python code is a function that takes a string as input and returns a new string where all the uppercase characters are converted to lowercase.\n", "url": "c7986d1e5882fe056f16ccd5a932d84e", "gt": "Return all ( and only ) the uppercase chars in the given string ."}, {"nl_input": "The Python code is defining a function `xeval` that takes two arguments: `source` and `optimize`. If no `optimize` argument is provided, it defaults to `True`. The function then calls `xcompile` with `source` and `optimize` as arguments, and returns the result of this call.\n", "url": "cd6c0b5919ed35ca54f03aed7155d59c", "gt": "Compiles to native Python bytecode and runs program returning the topmost value on the stack ."}, {"nl_input": "This Python function, `get_property_by_name`, is used to retrieve a property from a property interface (`pi`) based on its name. The function uses a generator expression to iterate over the properties of the `pi` and returns the first property that matches the given name. If no such property is found, it returns `None`.\n", "url": "6991aa2924b52404ff77faa2b677d3e2", "gt": "Get a property by name"}, {"nl_input": "This Python function checks if an object is iterable, i.e., it has a method called `__iter__`. It also checks if the type of the object is not a subclass of `str` or `unicode`. If all these conditions are met, the function returns `True`, otherwise it returns `False`.\n", "url": "e8d906db3eac56229992dd6701dafd90", "gt": "Is an object iterable like a list ( and not a string ) ?"}, {"nl_input": "The provided Python code is a function that transposes a given 2D table (list of lists). The function takes a 2D list (table) as input and returns a new list where each row is a column from the original table.\n", "url": "f72094ee819dfe55ef594b4d29424ad0", "gt": "transpose matrix"}, {"nl_input": "This Python function is designed to return a dictionary where the keys are the column names in a pandas DataFrame and the values are the unique levels of that column. The function takes an optional parameter 'axis' which defaults to 1, indicating that the function should operate on the columns of the DataFrame.\n", "url": "1af4bba3546dc398bb5ed2f79e80596b", "gt": ""}, {"nl_input": "The Python code is a function that solves a system of linear equations using the adjoint method. The function takes three arguments: a matrix 'a', a right-hand side matrix 'rhs', and a boolean 'adj' indicating whether to use the adjoint method or not. It then returns the solution of the system of linear equations and the adjoint of the system.\n", "url": "5877389d9eb25b563ada6e2220248ba5", "gt": "Matrix solve op ."}, {"nl_input": "The Python code is designed to locate a directory named \"data\" within the same directory as the script that is being run. The \"data\" directory is located in the same directory as the script, which is determined by the \"__file__\" variable, which holds the path to the current script. The \"os.path.abspath\" and \"os.path.dirname\" functions are used to get the absolute path of the script and its directory, respectively. The \"os.path.join\" function is then used to join the directory of the script with the \"data\" directory.\n", "url": "b49f6af022fb00932348cc036f786a2c", "gt": "Return the absolute path to the directory containing the package data ."}, {"nl_input": "The Python code is used to escape a path for use in a shell command. The purpose of this code is to convert a path string into a format that can be safely used in a shell command. This is particularly important when the path contains special characters that need to be escaped.\n\nThe function `escapePathForShell` takes a path as input and checks the operating system platform. If the platform is Windows, it replaces all double quotes in the path with double double quotes to ensure that the path is treated as a string. If the platform is not Windows, it uses the `shellescape.quote` function to escape the path.\n\nThe `shellescape.quote` function is a part of the `shlex` module in Python, which is used to split a string into a list of words, taking care to quote any words that need to be treated as such.\n", "url": "c717888ec77092e7b6e56415d851e2be", "gt": "Escapes a filesystem path for use as a command - line argument"}, {"nl_input": "This Python code is designed to print a given matrix, `X`, with a specified number of decimal places, `decimals`, defaulting to 1 if not provided. The matrix is first rounded to the specified number of decimal places using the `np.round` function, and then each row of the matrix is printed.\n", "url": "144142c4f682e2fc8c47507a12eb8b46", "gt": "Pretty printing for numpy matrix X"}, {"nl_input": "This Python code is designed to find the first occurrence of a pattern in a given path. The purpose of this code is to find the first occurrence of a certain string within a given directory or file path. If the pattern is not found, it logs a critical error message and raises an exception.\n", "url": "4c136dbf27a5d08891bc2d374574506d", "gt": "Finds first file in path whose filename matches pattern ( via : func : fnmatch . fnmatch ) or raises : exc : IndexError ."}, {"nl_input": "This Python function is designed to create a copy of a given array, with a specific value inserted at each element. The function is named \"full_like\" and it takes three parameters: an array (shared), a value, and a data type (dtype). The function first creates a copy of the array using the \"empty_like\" function, then it assigns the value to each element of the copied array. Finally, it returns the copied array.\n", "url": "7022cdc7764380a374323ec964b9e1d1", "gt": "Create a shared memory array with the same shape and type as a given array filled with value ."}, {"nl_input": "This Python function is designed to validate if a given value is callable. If the value is callable, it returns the value itself. If the value is not callable, it raises a `CallableError`.\n", "url": "3f6168cffe8cb21984c6a12267502db1", "gt": "Perform a simple check if the value is callable ."}, {"nl_input": "The provided Python code is a function that sets the size of a matplotlib figure. The function takes three parameters: x and y, which represent the width and height of the figure, and aspect, which is a scaling factor for the width. The function then updates the matplotlib's rcParams dictionary to set the 'figure.figsize' to a new size that is scaled by the aspect ratio.\n", "url": "cdb682fdaddf92e4c85ac1006ec2f2ac", "gt": "manually set the default figure size of plots :: Arguments :: x ( float ) : x - axis size y ( float ) : y - axis size aspect ( float ) : aspect ratio scalar"}, {"nl_input": "This Python function, `truncate`, takes two parameters: `value` and `n_digits`. The function truncates the decimal value to a certain number of digits. The truncation is done by multiplying the value by 10 raised to the power of `n_digits` and then truncating the result. The function then divides the truncated value by 10 raised to the power of `n_digits` to get the original value.\n", "url": "a9f00f4b4472333451594b653fd3ddf4", "gt": "Truncates a value to a number of decimals places"}, {"nl_input": "The Python code is a function that reads a file located at the given filepath and returns its content as a string.\n", "url": "3a909aebbf2e4e790a70a9a6a5aeb917", "gt": "Get string from file ."}, {"nl_input": "This Python code is used to update the values for all parameters in a model. The code is designed to update the values of all parameters that are sliders in the model. This can be circumvented by creating a separate callback function for each parameter. For each parameter, it updates the specific plot.\n", "url": "051279ae1faa9b3e8ad99859217a31a9", "gt": "Callback to redraw the plot to reflect the new parameter values ."}, {"nl_input": "This Python code is designed to check if a given path is a valid file. The function `valid_file` takes a string argument `path` and returns a boolean value. It first expands the user's home directory using the `expanduser` method, then logs a debug message to indicate the current state of the function, and finally checks if the path exists and is a file using the `exists` and `is_file` methods.\n", "url": "2eb8c1c213084c2d6663d2798151922e", "gt": "Verifies that a string path actually exists and is a file"}, {"nl_input": "The Python code is a function that generates a positive integer for a given field. The function takes four parameters: anon, obj, field, and val. The function uses the faker library to generate a positive integer for the field.\n", "url": "85d319ea47a8b2db80fd83fa200969b4", "gt": "Returns a random positive integer ( for a Django PositiveIntegerField )"}, {"nl_input": "The Python code calculates the average price of two products based on their quantities and prices. The function takes four parameters: the quantities and prices of the two products, and returns the average price.\n", "url": "6c4b912ed406d1c613c8c86898501f18", "gt": "Calculates the average price between two asset states ."}, {"nl_input": "This Python code is used to plot a Kernel Density Estimation (KDE) of a given data set. The KDE is a technique used to estimate the probability density function of a random variable by fitting a smooth, smoothing kernel function to the data.\n\nThe code takes in four parameters:\n\n1. `data`: A list or numpy array of data to be plotted.\n2. `ax`: The matplotlib Axes object to plot on.\n3. `title`: An optional string to set the title of the plot.\n4. `color`: An optional string to set the color of the plot.\n5. `fill_bt`: A boolean value indicating whether to fill the area under the curve (True) or not (False).\n\nThe code first checks if the input data is a list or a numpy array. If it's a list, it converts it to a numpy array.\n\nThen, it creates a KDE object `e` from the data and fits it to the KDE.\n\nThe KDE object `e` is then used to plot the kernel density estimate. The `plot` method of the KDE object is used", "url": "20d4c9337731d52fe439d7ae337e6913", "gt": "Plot a smoothed ( by kernel density estimate ) histogram . : type data : numpy array : param data : An array containing the data to be plotted"}, {"nl_input": "This Python code is used to fill null values in a specific column of a pandas DataFrame. The purpose of this code is to replace all null values in the specified column with NaN (Not a Number). If any error occurs during the process, it will be caught and stored in the 'err' attribute of the DataFrame.\n", "url": "93c0c2ede9a5c8a8b970af18721497ae", "gt": "Fill all null values with NaN values in a column . Null values are None or en empty string"}, {"nl_input": "This Python function is used to get the background flag of a TCOD console. The background flag is a property of the console that determines the color of the background. It is an integer value that can be either 0 or 1, where 0 represents black and 1 represents white.\n", "url": "b58a4d28bb6598443049dbbc4bbf8e92", "gt": "Return this consoles current blend mode ."}, {"nl_input": "This Python function is used to create a histogram plot for a given column in a NumPy array. The function takes two arguments: a column from a NumPy array and the number of bins to divide the range of the column into. The function then calculates the range of the column and divides it into the specified number of bins.\n", "url": "9f884647cf34443dee2bc6ff92f875c3", "gt": "Helper to get bins for histplot ."}, {"nl_input": "The provided Python code is a function that calculates the differences between two configurations (current_config and latest_config). The function ignores the order of fields in the configurations and uses the DeepDiff library to find the differences between them.\n", "url": "ffef61824d78a9266d404137a97101b1", "gt": "Determine if two revisions have actually changed ."}, {"nl_input": "This Python code is designed to execute Python unit tests against Java runtime classes. It sets up a subprocess environment with a specific Python path, logs a message, and then executes the Python scripts.\n", "url": "02839b0594938f5a9b149e4eb63f9dcf", "gt": "Run Python test cases against Java runtime classes ."}, {"nl_input": "This Python function is designed to wait for a certain amount of time before sending a message. The function takes an optional parameter `timeout` which specifies the maximum time to wait for the message to be sent. If no timeout is provided, the function will wait indefinitely.\n", "url": "09a15b5addf9063f3d0c6597aa38a5d0", "gt": "Wait until all queued messages are sent ."}, {"nl_input": "The provided Python code is a function that deskews a 3x3 matrix. The function takes a 3x3 matrix as input and returns a new matrix with the skewed values. The skew transformation is a common operation in computer graphics and image processing, where it rotates an image by 90 degrees counterclockwise.\n", "url": "ea96df64c6665e80be6a7d81f07c7a4f", "gt": "Converts a skew - symmetric cross - product matrix to its corresponding vector . Only works for 3x3 matrices ."}, {"nl_input": "This Python code is used to extract the href attribute from all 'a' tags in a given HTML markup using BeautifulSoup, a library for parsing HTML and XML documents. The 'a' tags are used to create hyperlinks, and the href attribute is used to specify the URL of the link.\n", "url": "a0295573f1dcf89a25aa9337bd3f9207", "gt": "Given HTML markup return a list of hrefs for each anchor tag ."}, {"nl_input": "This Python code is used to convert a struct object into a dictionary. The struct object is a data structure that represents a data object in a computer program. The struct object is a class that represents a data structure. The struct object is used to pack data into a single variable.\n\nThe function struct2dict takes a struct object as an argument and returns a dictionary. The dictionary is created using a dictionary comprehension, which is a compact way of creating a new dictionary. The keys of the dictionary are the names of the fields in the struct object, and the values are the corresponding values of the struct object.\n\nThe getattr function is used to get the value of a field in the struct object. The keys function is used to get the names of the fields in the struct object.\n", "url": "3e40d7e81d715f046db351aee91b0c62", "gt": "convert a ctypes structure to a dictionary"}, {"nl_input": "This Python code is a function that generates ANSI color codes for text output. The function takes two arguments: a color (a string representing the color) and a text (a string of text to be colored). The function then returns a string that represents the ANSI color code for the text. The color is represented by a string that corresponds to a specific ANSI color code. The function also includes a reset term (RESET_TERM) to ensure the text is not affected by any color codes.\n", "url": "361543bea6004540b3a709ec2b6f852f", "gt": "Wrap text in an ansi escape sequence"}, {"nl_input": "This Python function takes in three parameters: a list (l), a shape tuple (shape), and a data type (dtype). It then returns a numpy array with the specified shape and data type. The function is used to reshape a list into a numpy array.\n", "url": "75029e9b5315bf8366b2c9d646b179e4", "gt": "Shape a list of lists into the appropriate shape and data type"}, {"nl_input": "This Python code is designed to print out the details of a set of runs for a given query. The function `print_runs` takes a query as input, which could be a list of tuples. If the query is `None`, it will iterate over each tuple in the query and print out the details of each run.\n", "url": "3cb2ed3d1f3f748abda37ef3aefc286e", "gt": "Print all rows in this result query ."}, {"nl_input": "This Python function is designed to read a file and return a list of lines from the file, stripping any leading or trailing whitespace from each line. If the file does not exist, it raises a `FileNotFoundError` exception, and if this exception is caught, it will call the `fatal` function to print a message to the user.\n", "url": "4cd26ba017dabe234b6b960e4c174cd7", "gt": "Return lines of a file with whitespace removed"}, {"nl_input": "The provided Python code is a decorator that applies a filter to a callable function. The filter is applied to the result of the callable function. The decorator is a higher-order function that takes a callable function as an argument and returns a new function that applies the filter to the callable function.\n", "url": "a86e59f13d1de0744181898183974b07", "gt": "Manufacture decorator that filters return value with given function ."}, {"nl_input": "This Python code is used for sorting a list of strings based on the natural order of numbers and letters. The key function is used to convert strings into numbers if they are digits, and then sort the list based on these converted keys.\n", "url": "e8ba965e00c981d460681f001f1b646b", "gt": "Sort the list into natural alphanumeric order ."}, {"nl_input": "This Python function is used to generate a random ID. The ID is a string of 15 characters, composed of uppercase letters, lowercase letters, and digits. The function uses the `random.choice` function to randomly select a character from a pool of all possible characters (uppercase letters, lowercase letters, and digits). This process is repeated 15 times to create the random ID.\n", "url": "25a29e374311824cbed549355d28c30b", "gt": "Get a random ( i . e . unique ) string identifier"}, {"nl_input": "The provided Python code is converting a list of lists into a dictionary. The main purpose of this code is to transform a list of lists into a dictionary where each key in the dictionary is a unique element from the first list, and the corresponding value is a list of all elements that match that key from the second list.\n", "url": "1b73a949780175c73d5778ca8e2f5b2e", "gt": "Convert list of key value lists to dict"}, {"nl_input": "The provided Python code is a function that takes a JSON object as input, converts it into a string, and then dumps the string into a JSON object. The function is named \"string\" and it takes one argument, \"value\", which is expected to be a JSON object. The function returns a string.\n", "url": "a9048b56499578414cb6dca3141d871d", "gt": "string dict / object / value to JSON"}, {"nl_input": "This Python function is designed to convert a MongoDB cursor object to a dictionary. The function takes a cursor object as input and returns a dictionary. If the cursor object is not provided, it is set to the JSON representation of the cursor object after being converted to BSON. If the cursor object contains an \"_id\" field, it is removed and its value is assigned to the \"id\" field in the dictionary.\n", "url": "82821e87505d717d99a5a6982e80b533", "gt": "Handle conversion of pymongo cursor into a JSON object formatted for UI consumption"}, {"nl_input": "This Python function is designed to write a string to a file. The function takes two parameters: a file path and a string. It opens the file at the specified path in write binary mode, writes the string to the file, and then closes the file.\n", "url": "cfe10971d3e9565b10d9a8da615d0b58", "gt": "writes a string to file"}, {"nl_input": "The provided Python code is a method that pads an image with a certain padding value. The method is defined as a special method in Python, which is called when the object of the class is called.\n\nThe purpose of this code is to pad an image with a certain padding value. The padding is applied to the image to make it compatible with a certain size. The padding is either added at the beginning or the end of the image, depending on the padding_mode.\n\nThe padding is filled with a certain value (specified by the fill parameter).\n\nThe padding is added to the image either at the top, bottom, left, or right of the image. The padding is added to the image to make it compatible with a certain size.\n\nThe padding is added to the image to make it compatible with a certain size. The padding is either added at the beginning or the end of the image, depending on the padding_mode.\n\nThe padding is added to the image to make it compatible with a certain size. The padding is either added at the beginning or the end of the image, depending on the padding_mode.\n\nThe padding is added to the image to make it compatible with a certain size. The padding is either", "url": "9a8806be60753c5afc2c2886b26a8147", "gt": "Args : img ( PIL Image ) : Image to be padded ."}, {"nl_input": "The provided Python code is a function that attempts to close a given database session. The function is named `close_database_session` and it takes a parameter `session` which is presumably a database session object.\n\nThe function uses a `try` block to attempt to close the session. If an `OperationalError` occurs during this process, the function will raise a `DatabaseError` with the original error message and code.\n\nThe `except` block catches any `OperationalError` exceptions that might occur during the session close process and re-raises a `DatabaseError` with the original error message and code.\n\nThe purpose of this function is to ensure that a database session is properly closed, even in the event of an `OperationalError`. This is important to prevent potential issues with the database connection, such as a deadlock situation.\n", "url": "01b6ef83cb7b0e20fe4063575ba37afc", "gt": "Close connection with the database"}, {"nl_input": "This Python function is designed to check if a given datetime object is the same as the current date. If it is, the function returns True, otherwise it returns False.\n", "url": "5e650f644d8fd521a2fb566997bac200", "gt": "Return True if created today ."}, {"nl_input": "This Python function is designed to normalize the column names in a pandas DataFrame. The function iterates over each column name in the DataFrame, converts it to lowercase, and replaces any spaces with underscores. This is done to ensure that the column names are in a consistent format for data analysis and manipulation.\n", "url": "30bf76a15a72979f26c21ec5492d7e9e", "gt": "r Clean up whitespace in column names . See better version at pugnlp . clean_columns"}, {"nl_input": "This Python code is a function definition for a function named `set_trace`. The function is used to set a trace on a Python program. A trace in the context of debugging is a way to see the state of a program at various points during its execution. This is often used to understand the flow of control in a program.\n\nThe function `set_trace` is part of the `pdb` (Python Debugger) module, which is a package for creating Python programs that can be debugged. The `pdb` module provides a set of functions for creating a debugger, which can be used to step through the code, inspect variables, and more.\n\nThe function `set_trace` is used to set a trace on the current frame of the call stack. This means that the function that is currently being executed will be called whenever a line of code is executed. This is useful for debugging and testing purposes, as it allows you to see the state of the program at different points during its execution.\n", "url": "0a05a5da32b1fb72cca49d13dc8e3410", "gt": "Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ ."}, {"nl_input": "This Python code is used to save a variable to a file using the pickle module. The variable is saved in binary format. The 'wb' mode is used to open the file for writing in binary mode. The 'pickle' module is used to serialize and deserialize Python objects, and the 'dump' function is used to serialize the variable and write it to the file. The 'close' function is used to close the file after writing.\n", "url": "c2a530e3185141f26984493fe461a1e4", "gt": "Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output"}, {"nl_input": "The provided Python code is a method definition for a class in a specific application. The method is named `stop` and it is a part of a class. The purpose of this method is to stop a certain process or action.\n\nHere's a brief summary of the code:\n\n1. The method is a part of a class.\n2. The method is named `stop`.\n3. It checks if a certain flag `_stop` is set and if the same flag is not set (indicating that the process has been posted or completed).\n4. If both conditions are met, it sets the `_stop` flag to `None`, effectively stopping the process.\n", "url": "ffe1a2a9c49e02611417c3d70568ca6c", "gt": "Stops the analysis as soon as possible ."}, {"nl_input": "This Python code is a function that takes a function `f` and a dictionary `x` as input, and returns a new dictionary that only includes the key-value pairs from `x` where the function `f` returns `True`.\n\nThe function `_` is a placeholder for the actual function name, and `f` and `x` are placeholders for the actual parameters. The function `_` is a common pattern in Python for creating anonymous functions, which are functions that are defined without a name.\n\nThe `items` method is a built-in Python method that returns a list of tuples, where each tuple is a key-value pair from the dictionary.\n\nThe `if` statement is a control flow statement that executes a block of code if a condition is `True`. In this case, the condition is `f(k, v)`, which is the result of calling the function `f` with the key-value pair `(k, v)`.\n\nThe `return` statement is used to end the execution of the function and return a value. In this case, the function returns a new dictionary that is the result of creating a new dictionary with the same key", "url": "f241dcba436401f13b432446f7acf74c", "gt": "filter for dict note f should have signature : f :: key - > value - > bool"}, {"nl_input": "The provided Python code is a function that checks if a given type is an enumeration type. An enumeration type is a type that represents a finite set of values. The function `is_enum_type` checks if the given type is an instance of the `type` class and if it is a subclass of a tuple of enumeration types.\n", "url": "8f828b31221d8d3d250582d6e33119d8", "gt": "Checks if the given type is an enum type ."}, {"nl_input": "The provided Python code is a function that converts a protobuf object to a JSON string. The function takes two parameters: a protobuf object and an optional indentation level. The protobuf object is a message defined in a .proto file, and the indentation level is an optional parameter that determines the level of indentation for the JSON string. The function uses the `json.dumps` method to convert the protobuf object to a JSON string, with the indentation level specified by the `indent` parameter.\n", "url": "ae464d2f99fa7222e80bee299a792d9f", "gt": "Serialises a protobuf object as json"}, {"nl_input": "This Python function is used to retrieve a value from a dictionary or a default value if the key is not found. The function takes two parameters: `key` and `default`. The `key` is the name of the data to be retrieved, and `default` is the value to be returned if the key is not found in the dictionary.\n", "url": "b20b2cbf97fe0d5450903f1b53292657", "gt": "return the key from the request"}, {"nl_input": "This Python function is designed to convert a string representation of a number into an integer or a float. The function first checks if the string starts with a negative sign and if the rest of the string is a digit. If this is the case, it converts the string to an integer. If the string does not start with a negative sign and is a digit, it converts the string to a float. If the string does not start with a digit, it returns a float representation of the string.\n", "url": "e7bad2f188ea39babea17d023e47e629", "gt": "Converts the string representation of a json number into its python object equivalent an int long float or whatever type suits ."}, {"nl_input": "This Python function, `reindex_axis`, is used to reindex a pandas Series or DataFrame. The purpose of this function is to reindex the series or dataframe based on the provided labels. If the provided axis is not zero, it raises a ValueError. The function also warns the user about the deprecation of the function and suggests using the `reindex` function instead.\n", "url": "feb258741d3bed95c3717ef0f1fccc39", "gt": "Conform Series to new index with optional filling logic ."}, {"nl_input": "The provided Python code is a function that prints a string to a specific output stream (defaulting to the standard output stream, often `sys.stdout`). The function takes several parameters, including the string to be printed, the foreground color (`fg`), the background color (`bg`), the end character (`end`), and the output stream (`target`).\n\nThe function uses a third-party module, `_color_manager`, to set the colors of the output. It then writes the string to the target stream and flushes the output buffer.\n\nThe function is used to print colored output to the console, which is often used in terminal-based applications for displaying information in different colors.\n", "url": "5e7880a46ffa2a7b19d6212e49eb068b", "gt": "Print a colored string to the target handle ."}, {"nl_input": "This Python function, `get_rounded`, is designed to round a given number of digits. The function takes one argument, `digits`, which is the number of digits to be rounded. The function then creates a copy of the input number and rounds it to the specified number of digits.\n", "url": "ce214949d37d2602b1bae63f9c7323a2", "gt": "Return a vector with the elements rounded to the given number of digits ."}, {"nl_input": "This Python function is used to fill any missing values in a numpy array with a specific value. The function takes two parameters: an array (arr) and a fill_value. If the fill_value is not a numpy NaN (not a number), the function fills the array with the fill_value. If the fill_value is a numpy NaN, the function checks if the array contains any NaN values. If it does, it fills the array with the fill_value.\n", "url": "f62e3c00eea2ee9dfa9d98e0e1e50c53", "gt": "if we have a compatible fill_value and arr dtype then fill"}, {"nl_input": "This Python code is designed to handle runtime errors and value errors. The function `on_error` is designed to handle exceptions that are of type `RuntimeError` or `ValueError`. It writes the name of the exception class and the error message to the standard error stream (`sys.stderr`), and then writes additional details to the standard error stream and terminates the program with a status code of 1.\n", "url": "82b961ae1166cc5272220f0ff3a4e2f0", "gt": "Error handler"}, {"nl_input": "This Python function is designed to validate if a given value is callable. If the value is callable, it returns the value itself. If the value is not callable, it raises a `CallableError`.\n", "url": "3f6168cffe8cb21984c6a12267502db1", "gt": "Perform a simple check if the value is callable ."}, {"nl_input": "The provided Python code is a function that uses a custom representation printer to pretty-print an object. The printer is capable of handling different types of objects, including complex ones, and it can be configured to use a specific width for the output. The function also has the ability to print the output in a newline-separated format.\n", "url": "c8a5512cc83335ec25437a84dcfb884a", "gt": "Pretty print the object s representation ."}, {"nl_input": "The provided Python code is a function that takes a string as input and converts it into a format that is more human-readable by replacing underscores with spaces and converting the first character of each word to lowercase.\n", "url": "4af2cb83cba01f1a2877affc9f9af1fd", "gt": "Convert CamelCase to lower_and_underscore ."}, {"nl_input": "The provided Python code is a function that checks if a given string is a palindrome. A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward, ignoring spaces, punctuation, and capitalization.\n\nThe function `is_palindrome` takes two arguments: a string `string` and a boolean `strict`. If `strict` is `True`, the function will return `True` if the string is a palindrome, and `False` otherwise. If `strict` is `False`, the function will return `True` if the string is a palindrome, even if it contains spaces, punctuation, and capitalization, and `False` otherwise.\n\nThe function first checks if the string is a full string using the function `is_full_string`. If `strict` is `True`, the function will then check if the string is a palindrome by comparing it to its reverse. If the reverse of the string is the same as the original string, the function will return `True`.\n\nIf `strict` is `False`, the function will remove all spaces, punctuation, and capitalization", "url": "0a8601aa40e8e29e9a34b4bfee20bdb0", "gt": "Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) ."}, {"nl_input": "The provided Python code is a function that converts a string in snake_case format to camelCase format. The function splits the input string into a list of fragments using the underscore character as the delimiter, and then it joins the first fragment with the camelCase version of the rest of the fragments using the `title` function and `join` method.\n", "url": "96f5c07d79e853ad64b6e045f2ea2e3b", "gt": "Convert string from snake case to camel case ."}, {"nl_input": "The provided Python code is a method that updates a property of an object based on keyword arguments. The method takes in three parameters: the object's properties, keyword arguments, and a collector object. The method then updates the property of the object with the values from the keyword arguments, and the collector object is used to collect the updated property values.\n", "url": "0a32a04e8445904777f8caeebdb8fffd", "gt": "Primary entry point to turn kwargs into properties"}, {"nl_input": "The provided Python code is a function that disables SSL certificate validation. The function is used to set up an HTTPS context, which is a context object that is used to create an HTTPS connection. The function then yields the HTTPS context, and finally, it restores the default HTTPS context.\n", "url": "e8d31bf9064cd469a1dc39294f7fe457", "gt": "Context manager to temporarily disable certificate validation in the standard SSL library ."}, {"nl_input": "The provided Python code is a function that calculates the size of a given data type in bytes. The function takes a data type as an argument and returns the size of that data type in bytes. If the data type has a 'size' attribute, it returns the size of the data type. Otherwise, it converts the data type to a numpy datatype and returns the size of that datatype in bytes.\n", "url": "991303bd65d07a7092b5456f65501117", "gt": "Returns the number of bytes to represent this dtype ."}, {"nl_input": "This Python function takes a URL as input and returns the hostname of the URL. The hostname is the part of the URL that comes after the '//' in the URL. It uses the urllib.parse module's urlparse function to parse the URL, and then returns the netloc (network location) of the parsed URL, which is the hostname. If the netloc is empty, it returns an empty string.\n", "url": "13343f8f3c5515600e035d8cca7abd84", "gt": "Parses hostname from URL . : param url : URL : return : hostname"}, {"nl_input": "The provided Python code is a function that takes a list as input and returns a new list with duplicate elements removed. The function uses a set to keep track of the elements that have already been encountered, and then uses a list comprehension to create a new list that only includes the elements that have not been encountered before.\n", "url": "6156271232598d8b1fcc3d17b7f70287", "gt": "Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable ."}, {"nl_input": "This Python function is used to retrieve a value from an object based on a key. The function takes three parameters: a key, an object, and a default value. If the key is an integer, it calls a private function to retrieve the value for the key. If the key is a string, it splits the key into a list of keys and calls a private function to retrieve the value for each key.\n", "url": "b6bb535456a96c9b909bb499e8a0d64f", "gt": "Helper for pulling a keyed value off various types of objects"}, {"nl_input": "This Python function, `_stdout_raw`, is used to print a string to the standard output (usually the console). The function takes a string `s` as an argument and prints it. The `end` parameter is used to specify the character to be printed after the string, and the `file` parameter is used to specify the output stream to which the string is printed. The `sys.stdout.flush()` function is used to ensure that the output is immediately displayed.\n", "url": "130fea41886bd6573c8f66d1d1b1cc62", "gt": "Writes the string to stdout"}, {"nl_input": "This Python code is used to get the current memory usage of the process running the code. The function `get_memory_usage` is used to get the amount of memory used by the current process in MB. The `psutil` library is used to access system-related information, and `os.getpid()` is used to get the process ID of the current process. The `memory_info` method of the `Process` class is used to get the memory information of the process, and `rss` is the resident set size, which is the amount of memory used by the process's code and its stack. The function then returns this memory usage in MB.\n", "url": "36e35aabc8ba46fc2ddb8e9843fbb19f", "gt": "Gets RAM memory usage"}, {"nl_input": "The provided Python code is a function that checks if a given value is either an integer or a finite float. The function takes a value as input and returns a boolean value indicating whether the input is finite or not.\n", "url": "20a9dee3715bfda8b9951585455866ce", "gt": "Return true if a value is a finite number ."}, {"nl_input": "This Python function is used to retrieve a column from a database using its name. The function takes two parameters: a class instance (cls) and a string (name). It then uses the class's private attributes to retrieve the column from the database map.\n", "url": "09fe8b23516543ed7b0beb4c00c2c151", "gt": "Returns the column mapped by db_field name"}, {"nl_input": "The provided Python code is a function that downsamples an array using a striding factor. The function takes two arguments: an array and a factor. The factor is a list of integers that determines the strides for the downsampling process. The function then returns a new array where each element is a tuple of the original array elements at the corresponding stride positions.\n", "url": "4a46bee21402859242a82bb3267915e7", "gt": "Downsample x by factor using striding ."}, {"nl_input": "The provided Python code is a method that is being called when an object is about to be destroyed. It's a part of the `__del__` method, which is a special method in Python that is automatically called when an object is about to be garbage collected.\n\nThe purpose of this code is to close the session when the object is about to be destroyed. This is done by calling the `loop.run_until_complete(self._session.close())` method, which is a coroutine that waits for the session to close.\n\nThe `self._cleanup_session` attribute is a boolean flag that indicates whether the session should be cleaned up. If it's set to True, the session will be closed.\n\nThe `self._session` attribute is a reference to the session object.\n\nThe `self.loop` attribute is a reference to the event loop, which is used to schedule the cleanup of the session.\n\nThe `self` parameter is a reference to the object that the method is being called on.\n", "url": "a8a603e0ae848a1659ac97bbf97c393d", "gt": "Cleanup the session if it was created here"}, {"nl_input": "The provided Python code is a function that takes a string as input and removes all spaces and tabs from it. The function is named \"strip_spaces\" and it takes one argument, \"x\". The function replaces all occurrences of spaces and tabs in the string \"x\" with nothing (''), effectively removing them.\n", "url": "5c2cb0d747482f06316ecf2034c1b403", "gt": "Strips spaces : param x : : return :"}, {"nl_input": "This Python function, `_rindex`, is used to find the last occurrence of a specific element in a list. The function takes two parameters: a list `mylist` and an element `x`. It returns the index of the last occurrence of `x` in `mylist`.\n", "url": "f0181095e2b214bca904dedc120dac57", "gt": "Index of the last occurrence of x in the sequence ."}, {"nl_input": "This Python code is defining a method named `_pad` that pads a given text with a certain number of spaces on both sides. The method is used to ensure that the text is centered in a certain area.\n", "url": "2182fa769b2e6aebf55d8607b1aeae43", "gt": "Pad the text ."}, {"nl_input": "This Python code is used to remove punctuation from a given text. The code defines a function `remove_punctuation` that takes a string `text` and a list of exceptions (default is empty). It then uses regular expressions (`re`) to find all punctuation characters in the text and replaces them with an empty string. The punctuation characters are not included in the returned string if they are in the list of exceptions.\n", "url": "05d248c97e02432ffcafa5fc4d135e4c", "gt": "Return a string with punctuation removed ."}, {"nl_input": "This Python code is used to fetch the names of all tables in a SQLite database. The function `get_tablenames` takes a cursor object as input and executes a SQL query to fetch the names of all tables in the database. It then fetches all the results from the query and converts them into a list.\n", "url": "af7417dd34ffedc528d5b41aa79a25a3", "gt": "Conveinience :"}, {"nl_input": "The provided Python code is a function that converts a byte string into a JSON-formatted string. The function takes a single argument, 'value', which is expected to be a byte string. If the input is a byte string, the function first encodes the byte string into a base64 string using the 'base64.standard_b64encode' function. Then, it decodes the base64 string into a string using the 'decode' method with the 'ascii' encoding. The result is then returned.\n", "url": "ccb63a861341c1600c1672d2347c2a48", "gt": "Coerce value to an JSON - compatible representation ."}, {"nl_input": "This Python function is designed to get the current timezone offset in a specific format. It first retrieves the current date and time using the `get_datetime_now` function, then converts this to a specific timezone using the `astimezone` method. The timezone offset is then formatted as a string in the format \"+HHMM\" or \"-HHMM\", where HH is the hour offset and MM is the minute offset. The function returns a tuple containing the timezone information and the formatted timezone string.\n", "url": "9a9656208511dc76df08f3417ff13f0b", "gt": "Discover the current time zone and it s standard string representation ( for source { d } ) ."}, {"nl_input": "This Python code is designed to strip leading and trailing whitespace from a pandas DataFrame's column(s). The purpose of this code is to clean the data in a DataFrame before performing any further analysis or modeling. The function `strip_columns` takes a pandas DataFrame as input and iterates over its column names. If a column's data type is either 'S' (string) or 'U' (unicode), it converts the column to a numpy defchararray and applies the `strip` function to remove leading and trailing whitespace.\n", "url": "c614fa426ccf3da4b2087a058e08c051", "gt": "Strip whitespace from string columns ."}, {"nl_input": "This Python function checks if all elements in a given numpy array `x` are of a certain type (specified by `types`). It uses the `any` function to check if any element in the array `x` satisfies the condition `isinstance(el, t)` for any `t` in `types`. If all elements satisfy the condition, the function returns `True`; otherwise, it returns `False`.\n", "url": "5ab579ff3b2ee7681b98e2869ba83148", "gt": "Do all elements of x have a type from types?"}, {"nl_input": "This Python function is designed to check if an element with a specific CSS selector is present in a web page using a Selenium WebDriver. The function takes in three parameters: a Selenium WebDriver instance, a CSS selector, and a By class. It attempts to find the element with the given CSS selector using the provided By class. If the element is found, the function returns True, otherwise it returns False.\n", "url": "9d5df68fdf38594b8242be10f8ee487c", "gt": "Returns whether the specified element selector is present on the page ."}, {"nl_input": "This Python function is designed to return a list of tuples, where each tuple contains a string and a data type of a field in a schema. The function is used to extract the name and data type of each field in a schema.\n", "url": "1001aab66e7872b45d9825d901ea4412", "gt": "Returns all column names and their data types as a list ."}, {"nl_input": "The provided Python code is a function that checks if a given list (or numpy array) is an integer vector. The function first checks if the input is a numpy array. If it is, it then checks if the array is a 1-dimensional array and if all its elements are either integers (i.e., 'i') or unsigned integers (i.e., 'u'). If both conditions are met, the function returns True, otherwise it returns False.\n", "url": "4c44318e0564a3746341c25cb08796fb", "gt": "r Checks if l is a numpy array of integers"}, {"nl_input": "This Python code is used to create a log file named \"run.log\" in a specific directory. The log file is created with the current timestamp.\n", "url": "8595eb12cbc332479f76bff0d5054589", "gt": "Create a run . log within folder . This file contains the time of the latest successful run ."}, {"nl_input": "This Python function is designed to retrieve a value from a request's headers based on a given key. The function takes two parameters: a request object and a key. It then uses the `get` method of the `headers` attribute of the request object to retrieve the value associated with the given key. Finally, it converts the retrieved value to its native format using the `to_native` function.\n", "url": "d0f81def36969915a8a8466379b2a7ab", "gt": "Try to read a value named key from the headers ."}, {"nl_input": "This Python function is used to parse cookies from a request object. The purpose of this function is to retrieve a value from the COOKIES dictionary of the request object, which is a dictionary of all cookies sent by the client. The function takes three parameters: the request object (req), the name of the cookie (name), and the field to extract (field). The function returns the value of the specified field in the cookie with the given name.\n", "url": "7c99a79a7ad75ac06ade2a1e106df71a", "gt": "Pull the value from the cookiejar ."}, {"nl_input": "This Python code is used to prettify SQL queries. The purpose of this code is to take a raw SQL query as input and convert it into a more readable format. The input SQL query is split into individual lines, and for each line, the comma-separated values are split into individual elements. These elements are then enclosed in double quotes, and these are all joined together with a comma and a newline character (\"\\n\") to form the prettified SQL query.\n", "url": "457aff9c7058c3ba33b7ae0d5386ee0f", "gt": "Returns a prettified version of the SQL as a list of lines to help in creating a useful diff between two SQL statements ."}, {"nl_input": "The provided Python code is a function that converts a string to a list of characters, then converts each character to an integer using the ctypes library's c_int type, and finally, it uses the libspice.prsint_c function to convert the string to an integer. The function is then returned with the integer value.\n", "url": "c69e122da2d2e1d72e89cfa0116a4f34", "gt": "Parse a string as an integer encapsulating error handling ."}, {"nl_input": "The Python code is defining a function `xeval` that takes two arguments: `source` and `optimize`. If no `optimize` argument is provided, it defaults to `True`. The function then calls `xcompile` with `source` and `optimize` as arguments, and returns the result of this call.\n", "url": "cd6c0b5919ed35ca54f03aed7155d59c", "gt": "Compiles to native Python bytecode and runs program returning the topmost value on the stack ."}, {"nl_input": "The provided Python code is designed to set a 2-byte integer value at a specific index in a bytearray. The function takes three parameters: a bytearray, a byte index, and an integer. It then converts the integer to a 2-byte binary string, packs this string into a 2-byte unsigned short, and stores this value at the specified byte index in the bytearray. The function then returns the updated bytearray.\n", "url": "6fec9d169b0a9416a97ce4a338dd32d8", "gt": "Set value in bytearray to int"}, {"nl_input": "The provided Python code is a function that adds a variable to a JavaScript window object. The function takes two parameters: a name and a variable. It then uses the `addToJavaScriptWindowObject` method of the main frame of the page to add the variable to the window object with the given name.\n", "url": "3502745173b0a9b89ae0a7f4243ce2a3", "gt": "Add an object to Javascript ."}, {"nl_input": "This Python function is used to condense a list of items into a single string. The purpose of this function is to join a list of items into a single string, with optional separators and trailing separators.\n", "url": "4d487dd5451d858ae1df55545338d20c", "gt": "Create a list of items seperated by seps ."}, {"nl_input": "This Python code is used to create a regular expression (regex) that matches strings that can be separated by a certain character. The separator is a string that is used to separate the different parts of the string. The regex is then used to match any string that can be formed by concatenating one or more non-separator characters or escaped separator characters.\n", "url": "c293149f21c05346b0edfd6e017c0a32", "gt": "Utility function to create regexp for matching escaped separators in strings ."}, {"nl_input": "This Python code is a method that is used to create a special method called `__getattr__`. The `__getattr__` method is a built-in method in Python that is used to handle attribute access. It is called when an attribute of an object is not found.\n\nThe purpose of this code is to create a special method that is used to access an attribute of an object. This is done by using the `functools.partial` function to create a new function that is a partial version of the original function.\n\nThe new function is then used to access the attribute of the object. The `self. _api_prefix + name` part of the code is used to create the full name of the attribute to be accessed.\n\nThe `self. _obj.request` part is used to access the attribute of the object. The `self. _api_prefix + name` part is used to create the full name of the attribute to be accessed.\n\nThe `return` statement is used to return the new function that is a partial version of the original function.\n", "url": "941e68a199cee63e302662e2ce8fe281", "gt": "Return wrapper to named api method ."}, {"nl_input": "This Python function takes a comma-delimited string as input and converts it into a list. If the input is already a list, it simply returns the list. If the input is a string, it splits the string into a list of elements based on the comma delimiter. If the input is neither a list nor a string, it returns an empty list.\n", "url": "bef112878733e2d59a2929a7920b88a7", "gt": "Convert comma - delimited list / string into a list of strings"}, {"nl_input": "The provided Python code is a function that restores the default settings of a certain application. The function is designed to restore the settings of a certain application, such as the default cache directory, seed, and set seed. The function also logs an informational message indicating that the settings have been reset to their default values.\n", "url": "3ba6b208b4ed697b5fe003d50b17d99c", "gt": "Restore settings to default values ."}, {"nl_input": "This Python function is used to extract the name of the parent folder from a given file path. The function uses the `os.path.split` and `os.path.abspath` functions to split the file path into its components and then returns the second component of the split path, which is the name of the parent folder.\n", "url": "b020996768e441735bad95910a16907e", "gt": "Finds parent folder of file"}, {"nl_input": "The provided Python code is a function that normalizes a given text by replacing newline characters with spaces and replacing multiple consecutive spaces with a single space. The function is used to clean and preprocess data before it is used for further analysis or modeling.\n", "url": "ffaf50749737d70a6ecb6ce9b0f9ac24", "gt": "This removes newlines and multiple spaces from a string ."}, {"nl_input": "The provided Python code is calculating the average of the squares of the gradients of a given data set. The function `average_gradient` takes a data set as input and returns the average of the squares of the gradients of the data. The gradients of a data set are calculated by taking the gradient of the data set with respect to its position in the data set. The `np.average` function is then used to calculate the average of these squared gradients.\n", "url": "11dee73808ab5dea87b4d7e3fe459006", "gt": "Compute average gradient norm of an image"}, {"nl_input": "This Python function is used to get the start and end indices of a specific item in a list based on its position in the list. The function takes an index as input and returns the start and end indices of the item at that position. If the index is 0, the function returns the start and end indices of the first item in the list. Otherwise, it calculates the start index as the previous item's end index plus 1 and the end index as the current item's index.\n", "url": "82969a6dbd0cf5948252addf78f02f52", "gt": "Return a tuple of ( start end ) indices of an item from its index ."}, {"nl_input": "The provided Python code is a function that takes an iterable as input and returns a string with all elements joined by commas. The function uses the `join` method of Python's string class to concatenate all the elements of the iterable into a single string, separated by commas.\n", "url": "d5cd6bdee354cd4c13e1317060fe6702", "gt": "Join the given iterable with"}, {"nl_input": "This Python code is used to create an adjacency matrix for a graph. The adjacency matrix is a square matrix where the entry at position (i,j) is 1 if there is an edge between nodes i and j, and 0 otherwise. The code firstly defines the number of edges in the graph, then it initializes an empty adjacency matrix with the same number of rows and columns. It then iterates over the edges in the graph, and for each edge, it sets the corresponding entry in the adjacency matrix to 1. Finally, it returns the adjacency matrix.\n", "url": "77ba8682acb16363f35ee39438c5c00b", "gt": "Get adjacency matrix ."}, {"nl_input": "The provided Python code is a function that takes a list of column names as input, and returns two lists: one for the left columns and one for the right columns. The function works by iterating over the input list, and for each column, it checks if the column is a string. If it is, it adds the column to both left_cols and right_cols. If the column is not a string, it adds the first and second elements of the column to both left_cols and right_cols.\n", "url": "b43d396e0c2cb764c7a3923e30cee800", "gt": "helper function used for joins builds left and right join list for join function"}, {"nl_input": "This Python code is designed to raise an HTTPError if the response status code is not 200 (OK). The function `raise_for_not_ok_status` takes a response object as input and checks if the status code of the response is not 200. If the status code is not 200, it raises an HTTPError with a descriptive message.\n", "url": "0c0e2e21a0ef56f98b03f742885dd7b1", "gt": "Raises a requests . exceptions . HTTPError if the response has a non - 200 status code ."}, {"nl_input": "The Python function `yaml` is used to convert an object into a YAML formatted string. The `OrderedDict` is a dictionary that maintains the order of keys. The `ordered_dump` function is used to convert the dictionary into a YAML string. The `SafeDumper` is a YAML dumper that is safe for use in a multi-threaded environment. The `default_flow_style` is set to `False`, which means that the output will be a block style YAML.\n", "url": "3e751fb619760a9827d1958fe4a20f42", "gt": "returns the yaml output of the dict ."}, {"nl_input": "This Python code is used to remove stopwords from a list of words. A stopword is a common word that does not carry much meaning or information and is usually removed to clean up the text. In this case, the code is used to remove common words like \"and\", \"the\", \"is\", etc.\n", "url": "6ce9ae857507f7292c65caae0d829141", "gt": "Removes stopwords contained in a list of words ."}, {"nl_input": "This Python code is used to find unique rows in a numpy array. The function `_unique_rows_numpy` takes a numpy array as input and returns a new array with unique rows.\n", "url": "5585a4d97c570d3a3d4ee8539bdc383c", "gt": "return unique rows"}, {"nl_input": "The provided Python code is a function that calculates the minimum values of a list of intervals. The function takes a list of Interval objects as input and returns a new Interval object representing the minimum values of the input intervals.\n", "url": "e7a213e5ce364fbbb4eebdb777dcae72", "gt": "Return possible range for min function ."}, {"nl_input": "This Python function is designed to check if a given value is a nullable list. A nullable list is a list that can contain either a value or None. The function takes two parameters: a value and a type. It then checks if the value is a list, and if it is, it checks if all elements of the list are of the same type or are None.\n", "url": "9f1568e9761dff31a32f5c4b9e8edd9a", "gt": "Return True if list contains either values of type vtype or None ."}, {"nl_input": "The provided Python code is a function that retrieves the active window for a specific application. The function is designed to be used in a class-based context, and it uses a dictionary to store the active window for different applications. If the active window for a specific application is not found in the dictionary, it defaults to the first window in the list.\n", "url": "dde85ac504b2390acdd3091d4eb9bcae", "gt": "The current active : class : . Window ."}, {"nl_input": "This Python code is used to create a table with specific columns and rows based on the input ports. The table is then returned. The purpose of this code is to display the ports in a tabular format, with each port's name, port number, protocol, and description.\n", "url": "f97eba655064cbbbe5fab244004635ad", "gt": "This function returns a pretty table used to display the port results ."}, {"nl_input": "This Python function is designed to check if a request should use a French error handler or not. It does this by checking if a specific error code (404, 405) has been dispatched and if so, it returns True. If not, it checks if a URL rule has been assigned to the request. If not, it returns False. The function also checks if the endpoint of the URL rule is owned by the request.\n", "url": "1f9a6c557386541c8bf3018a1e3947c6", "gt": "Encapsulating the rules for whether the request was to a Flask endpoint"}, {"nl_input": "This Python function is designed to read the name or scan code of an event from the system. If the `suppress` parameter is set to `True`, it will return the event name, but if it's `False` or not provided, it will return the scan code of the event.\n", "url": "fffa142ba9856c6a86224d3d99407a7d", "gt": "Blocks until a keyboard event happens then returns that event s name or if missing its scan code ."}, {"nl_input": "This Python code defines a function `is_integer` that checks if a given object is an integer. The function uses the `isinstance` function to check if the object is either an integer or a long integer.\n", "url": "2832fbd8beeec023e6e6ef3e6b82340c", "gt": "Is this an integer ."}, {"nl_input": "The provided Python code is a function that converts a string in CamelCase format to Snake_Case format.\n", "url": "6c93672cda684ac1a95b2d799714bebf", "gt": "Convert CamelCase to snake_case ."}, {"nl_input": "The provided Python code is a function that converts a given data into a bytearray. The function takes an argument of any type and returns a bytearray. If the input data is an integer, it converts the integer into a bytearray. If the input data is a string, it converts the string into a bytearray using the 'latin-1' encoding.\n", "url": "c5046e85180e9f65f88280117dffd4cf", "gt": "Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1"}, {"nl_input": "This Python code is a generator function that processes a list of lines from an input. The function strips leading and trailing whitespace from each line, checks if the line is not empty and does not start with a '#', and then yields the line after removing any comments.\n", "url": "ca1be3d31ee8cf3523dfc4b4d395589e", "gt": "Remove comments and empty lines"}, {"nl_input": "The provided Python code is a function that takes a string as an argument and prints it with a timestamp. The function is named \"good\" and it's used to print a message with a timestamp. The message is prefixed and suffixed with two special characters (\"# \"). The timestamp is also included in the message.\n", "url": "e2aa9367d8be0f1d00d8b3baa409dd7a", "gt": "Print emphasized good the given txt message"}, {"nl_input": "This Python code is used to check if a given input is an integer. If the input is an integer, it returns the integer. If the input is not an integer, it returns the input.\n", "url": "dd11b3695df51c0247478c289387f290", "gt": "This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal ."}, {"nl_input": "The provided Python code is a function that toggles the playing status of a music controller. The function is named `toggle_pause` and it's a method of a class. The class is `self`, which is a reference to the instance of the class. The method is being called on an instance of the class named `controller`. The `controller` instance has a `playing` attribute, which is a boolean value. The `playing` attribute is being toggled between its current value and its opposite value. The `toggle_pause` function is also a method of the `music` class, which is an instance of a class named `music`.\n", "url": "fd17bc7997ec03214258fa4bd8501d56", "gt": "Toggle pause mode"}, {"nl_input": "The Python code is converting Markdown content to plain text. It uses two functions: `md_to_text` and `html_to_text`. The `md_to_text` function is converting Markdown content to plain text. If the input content is in HTML format, it uses the `html_to_text` function to convert the HTML content to plain text.\n", "url": "a98a0d961b4a5dfb134ed7d96517dc6a", "gt": "Converts markdown content to text"}, {"nl_input": "The provided Python code is a function that uses the `subprocess` module to execute a bash command in a subprocess. The command is to run a bash script with a given filename as an argument. The `flush` method is used to ensure that the output is immediately displayed.\n", "url": "d1387105e649f48d23a75e735be58fdf", "gt": "Runs a bash script in the local directory"}, {"nl_input": "The provided Python code is a function that normalizes a given text by replacing newline characters with spaces and replacing multiple consecutive spaces with a single space. The function is used to clean and preprocess data before it is used for further analysis or modeling.\n", "url": "ffaf50749737d70a6ecb6ce9b0f9ac24", "gt": "This removes newlines and multiple spaces from a string ."}, {"nl_input": "This Python function, `get_object_or_child_by_type`, is designed to retrieve an object or a child object of a certain type from a list of objects or children. The function takes a variable number of types as input, and returns the first object that matches one of the provided types. If no objects match any of the provided types, it returns `None`.\n", "url": "a0eea2c799b9e9787443166f8163bbac", "gt": "Get object if child already been read or get child ."}, {"nl_input": "The Python code is a method that handles the key release event. The method is named `keyReleaseEvent` and it takes an event as a parameter. The event is then passed to the `keyboard_event` method, which is a method of the same class. The `keyboard_event` method is used to simulate a key release event. The key that is released is specified by the `key` method of the event, and the action type is set to `ACTION_RELEASE`. The second parameter is a flag that indicates whether the key is currently pressed. In this case, it's set to 0, which means the key is not currently pressed.\n", "url": "0dedd93aa4ea060e3981a64d1946e3b8", "gt": "Pyqt specific key release callback function . Translates and forwards events to : py : func : keyboard_event ."}, {"nl_input": "The Python code is used to write lines of text to a file, then flush and synchronize the file object. The file path is provided as an argument, and the list of lines to be written are also provided as an argument. The function opens the file in write mode, writes the lines to the file, then flushes and synchronizes the file object. Finally, the file object is closed.\n", "url": "9c5ed7678eec60027b77c36e9f85ed9f", "gt": "Fill file at"}, {"nl_input": "This Python code is used to check if a specific process is running based on its process ID. The function `is_running` takes a process ID as input and returns a boolean value indicating whether the process is running or not.\n\nThe function works by using the `subprocess` module to execute the `ps` command with the `-p` option to display the process IDs of all running processes, and then checking if the process ID of the process being checked is in the output of the `ps` command.\n\nThe `str.decode(encoding)` method is used to decode the output of the `ps` command into a string, and the `in` operator is used to check if the process ID of the process being checked is in the string.\n\nThe `sys.getdefaultencoding()` method is used to get the default encoding for the system, which is used to decode the output of the `ps` command.\n", "url": "08c543187101769aa1d6bf51dce8be2e", "gt": "Uses the Unix ps program to see if a process is running ."}, {"nl_input": "This Python code is used to recursively remove a directory and its contents. The function `rrmdir` takes a directory path as an argument and recursively removes the directory and its contents.\n\nHere's a brief summary of the code:\n\n1. The function `rrmdir` is defined to remove a directory and its contents.\n2. The `os.walk` function is used to traverse the directory tree.\n3. For each file in the directory, it removes the file.\n4. For each directory in the directory tree, it removes the directory.\n5. After the traversal, the function removes the original directory itself.\n", "url": "0d26e92ada91f0c98d4a321d3bcc7a28", "gt": "Recursivly delete a directory"}, {"nl_input": "The provided Python code is a function that normalizes a given data matrix using the log-transformation. The function first checks if the input data is a sparse matrix. If it is, it creates a copy of the data and then applies the log2 transformation to the data. If the data is not sparse, it first converts the data to float64 type and then applies the log2 transformation.\n", "url": "cc88f21701ab6077cbe986ba301bb315", "gt": "Perform log transform log ( x + 1 ) . Parameters ---------- data : array_like"}, {"nl_input": "This Python code is used to extract resources from a PDF file. The purpose of this code is to extract all pages from a PDF file and return them as a list of resources.\n", "url": "a0f3d82a41b02af3c9649aa06b89db3d", "gt": "Retrieve contents of each page of PDF"}, {"nl_input": "The Python code is a function that generates a positive integer for a given field. The function takes four parameters: anon, obj, field, and val. The function uses the faker library to generate a positive integer for the field.\n", "url": "85d319ea47a8b2db80fd83fa200969b4", "gt": "Returns a random positive integer ( for a Django PositiveIntegerField )"}, {"nl_input": "The provided Python code is a recursive function that flattens a union operation in a table. The function takes a table as input and checks if the table is an instance of a Union operation. If it is, the function recursively calls itself to flatten the left and right sides of the union operation, then concatenates the result with the distinct elements of the union operation. If the table is not a union operation, the function simply returns the table.\n", "url": "f3c15a88ba4b34b9a86e75aa4a8c83b8", "gt": "Extract all union queries from table ."}, {"nl_input": "The Python code is defining a function `unit_ball_L2` that generates a random unit ball in the L2 (Euclidean) norm. The function takes an input `shape` and initializes a tensor of zeros with the same shape using TensorFlow's `tf.Variable` and `tf.zeros` functions. The function then constrains the tensor to have a L2 norm of 1 using the `constrain_L2` function.\n", "url": "e5fa2723774427d207b10c231427d4c8", "gt": "A tensorflow variable tranfomed to be constrained in a L2 unit ball ."}, {"nl_input": "This Python code is a function that walks through a directory and its subdirectories, and searches for any files with the extension \".py\" in the given path. It then calls a separate function, `search_script_file`, to process each such file.\n", "url": "a2f84605b27e7336f7c619e6e6ecb26f", "gt": "Recursively loop through a directory to find all python script files . When one is found it is analyzed for import statements : param path : string : return : generator"}, {"nl_input": "The provided Python code reads a set of unique strings from a file and stores them in a set data structure. The set is created by reading the file line by line, stripping off any trailing whitespace, and adding the resulting string to the set.\n", "url": "af678636432a410c764ca9cb0a1afa68", "gt": "Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line ."}, {"nl_input": "This Python code is used to batch an array of items into smaller arrays of a specified size. The function takes two parameters: an array of items and the size of each batch. It then returns a new array where each element is a batch of the original array.\n", "url": "673c4038436f7b604c37ed0acf9a5adf", "gt": "Batches a list into a list of lists with sub - lists sized by a specified batch size ."}, {"nl_input": "The provided Python code is a function that selects a value in a 2D array (matrix) based on its row and column indices. The function is named `select_up` and it takes an instance of a class as an argument.\n\nThe function first calculates the index of the value in the 2D array based on the row and column indices. It then retrieves the value at this index from the 2D array.\n\nThe function is part of a larger class, and the class is represented by the `self` parameter. The class has a private attribute `_index` which is a dictionary that maps row and column indices to their corresponding indices in the 2D array. The `_select_index` method is used to calculate the index of the value in the 2D array based on the row and column indices.\n\nThe function returns the value at the calculated index.\n", "url": "f4e10c5aa2fe8595abd6657ba28db1c5", "gt": "move cursor up"}, {"nl_input": "The Python code is calculating the ratio of the current value to the total value and returns it as a string with a percentage completed.\n", "url": "205d2257a363e4a52180c14d82ad05e0", "gt": "Returns the progress ratio and percentage ."}, {"nl_input": "This Python code is used to check if a given input is an integer. If the input is an integer, it returns the integer. If the input is not an integer, it returns the input.\n", "url": "dd11b3695df51c0247478c289387f290", "gt": "This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal ."}, {"nl_input": "This Python function `string_to_int` converts a string to an integer. The string is iterated over, and for each character, it checks if it is an integer. If it's not, it converts it to its ASCII value using the `ord` function. The ASCII value is then added to the running total, which is initially set to 0. The function finally returns the total.\n", "url": "1731237c9b4f7c37e8c66ec5a989582f", "gt": "Convert a string of bytes into an integer as per X9 . 62 ."}, {"nl_input": "This Python code is designed to return all the letters from a given string. It iterates over each character in the string, checks if it is a letter using the `isalpha()` method, and if it is, it appends it to the output string.\n", "url": "a81ea10e95124147157d96bd92d03a50", "gt": "Get letters from string only ."}, {"nl_input": "This Python function is designed to find a field in a class based on its name. The function iterates over all fields of the class and returns the first field whose name matches the input parameter. If no such field is found, it returns None.\n", "url": "a3cd5a39a6a438b727432f565b6b0acf", "gt": "the field member matching name or None if no such field is found"}, {"nl_input": "This Python code is designed to check if a given string contains any whitespace characters. If it does, it raises a ValueError with a specific message.\n", "url": "c04cc51d17f6cd1739f09e2c0b66a917", "gt": "Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected"}, {"nl_input": "This Python code is a function that takes a dictionary as input and returns a new dictionary that only includes key-value pairs where the value is not null (i.e., not the string '_codes').\n", "url": "ed25600864e57226782fe2815f6ea7a1", "gt": "Like dict but does not hold any null values ."}, {"nl_input": "This Python code is used to load and execute multiple Python files. The purpose of this code is to execute the Python files that are passed as arguments. Each file is executed in the same global and local scope as the previous one.\n", "url": "fafac547be2039f7ecb1de9409b4e007", "gt": "Load and execute a python file ."}, {"nl_input": "The provided Python code is a callback function for a WebSocket connection. It is designed to handle the 'close' event of the WebSocket connection.\n\nThe purpose of this code is to:\n\n1. When the WebSocket connection is closed, it sets the 'connected' flag to False.\n2. Logs an error message 'Websocket closed' to the logger.\n3. Attempts to reconnect the WebSocket connection.\n", "url": "aa593ebc558493cc0add3bd8bb6e70e5", "gt": "Callback for closing the websocket connection"}, {"nl_input": "The provided Python code is a recursive function that flattens a nested list. The function takes a 2D list (grid) as input and returns a 1D list. The function uses list comprehension to flatten the 2D list into a 1D list. If the input list contains other lists, the function calls itself to flatten these sublists. This process continues until all sublists are flattened into a single level.\n", "url": "6c2f0cae41d4a8defbd80e5fc9ecf368", "gt": "Takes a multi - dimensional array and returns a 1 dimensional array with the same contents ."}, {"nl_input": "This Python function is designed to convert a string to snake_case, a common naming convention in many programming languages. The function takes a string as input, and then replaces all uppercase characters with the character followed by an underscore and the lowercase version of the rest of the character. It also replaces all lowercase characters with the character followed by an underscore and the lowercase version of the rest of the character. The function finally converts all characters to lowercase.\n", "url": "da53eabc5a7a8f4162b28d726e183372", "gt": "Convert to snake case ."}, {"nl_input": "This Python code is a function that checks if a given string is of type 'unicode' or 'str'. It does this by checking if the string's type is either 'str' or 'unicode' in its type. If it is, the function returns True, otherwise it returns False.\n", "url": "bf5d68d072e8122a9a46bc9e0824407b", "gt": "Validates that the object itself is some kinda string"}, {"nl_input": "The provided Python code is a function that generates a YAML file and writes a configuration to it. The function `generate_write_yaml_to_file` takes a file name as an argument and returns a function `write_yaml`. The `write_yaml` function takes a configuration as an argument and writes it to a YAML file. The YAML file is opened in write mode ('w+') and the configuration is dumped using the `yaml.dump` function.\n", "url": "d5172b2564f44b89541d52f8c075d897", "gt": "generate a method to write the configuration in yaml to the method desired"}, {"nl_input": "This Python code is used to write audio data to a .wav file. The purpose of this code is to convert the input samples into a format that can be easily written to a .wav file, and then write this data to a specified path. The samples are scaled to the maximum possible value of an integer, which is the absolute value of the minimum integer value in the input samples. This is done to ensure that the audio data is represented in a format that can be easily represented in a .wav file. The audio data is then written to the specified path using the specified sample rate (default is 16000 Hz).\n", "url": "02774e4da081abce4e8cff9febd5339d", "gt": "Write to given samples to a wav file . The samples are expected to be floating point numbers in the range of - 1 . 0 to 1 . 0 ."}, {"nl_input": "The provided Python code is a function that is used to update the last update time of a Bokeh notebook. The function is named `_push_render` and it is a part of a class. The purpose of this function is to push the current state of the Bokeh notebook to the server. The `handle` parameter is a reference to the current Bokeh notebook, and `self.last_update` is used to keep track of the last time the function was called.\n", "url": "02f514c324cacaf0704c2a6509112ebf", "gt": "Render the plot with bokeh . io and push to notebook ."}, {"nl_input": "This Python function is used to get the dimensions of a list or a tuple. The function takes a list or tuple as an argument and returns a list of their dimensions. The dimensions are calculated by counting the number of elements in the list or tuple.\n", "url": "986d95a235b4666e17e297bc1814526c", "gt": "Takes a nested list and returns the size of each dimension followed by the element type in the list"}, {"nl_input": "This Python code is used for decompressing data from a stream. The function `load_streams` is used to decompress a stream of data. The `chunks` parameter is a `Peekable` object that contains the data to be decompressed. The function `load_stream` is a helper function that decompresses a single chunk of data.\n\nThe function uses a `while` loop to iterate over the chunks until there are no more chunks left. If Python 3 is detected (`six.PY3` is `True`), it uses the `zlib` module's `decompressobj` function to create a decompression object with a window bits set to 16. If Python 3 is not detected, it uses the `zlib` module's `decompressobj` function with a window bits set to 16.\n\nThe function then calls `load_stream` to decompress each chunk of data. The `load_stream` function uses the decompression object (`dc`) and the remaining chunks (`chunks`) to decompress the data.\n\nFinally, if there is any unused data left after decompression,", "url": "d81906107a72bbbb48477c029365c550", "gt": "Given a gzipped stream of data yield streams of decompressed data ."}, {"nl_input": "The provided Python code is a function that checks if a given input is a non-empty string. The function uses a try-except block to handle potential errors. If the input is not a string, it raises a TypeError. If the string is empty after stripping leading and trailing whitespace, it also raises a ValueError. If neither of these errors occur, the function returns True.\n", "url": "4c267ab3b1fbf3f4c4270f715d93e37c", "gt": "Validate if non empty string"}, {"nl_input": "The provided Python code is a function that checks if a given input is a 2D numpy array of boolean values. The function uses the `isinstance` function to check if the input is a numpy array, and then checks if it has 2 dimensions and if its data type is boolean. If both conditions are met, the function returns `True`, otherwise it returns `False`.\n", "url": "8a3b1c52b2ad77e9fd817568f4cec12c", "gt": "r Checks if l is a 2D numpy array of bools"}, {"nl_input": "The provided Python code is a function that takes a list and a number as input, and returns a new list that is a chunk of the original list. Each chunk is of the specified size, 'n'.\n", "url": "9b703ce1495ac3025601f5addf5595e4", "gt": "Return n size lists from a given list l"}, {"nl_input": "This Python code is used to check if a given input is an integer. If the input is an integer, it returns the integer. If the input is not an integer, it returns the input.\n", "url": "dd11b3695df51c0247478c289387f290", "gt": "This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal ."}, {"nl_input": "The provided Python code is a function that takes an iterable of strings as input and returns an iterable of integers. The function uses a lambda function to convert each string to an integer.\n", "url": "d03c341cc5f160d047d5458a3393cbdf", "gt": "Convert a list of strings to a list of integers ."}, {"nl_input": "This Python code is designed to remove empty items from a dictionary. The purpose of this code is to filter out any items in the dictionary that are not present in the 'required' list. It also handles the case where a value is an integer or a non-empty string.\n", "url": "a8c133739d961e115a4cc14c827b0992", "gt": "Return a new dict with any empty items removed ."}, {"nl_input": "The provided Python code is a function that downloads and installs a setuptools package. The function takes two arguments: `argv` and `version`. The `argv` argument is a list of command-line arguments, and the `version` argument is a default version number. The function then proceeds to download the setuptools package, build the package, and install it.\n", "url": "6cb48314baad69035e44a579e4c28a4a", "gt": "Install or upgrade setuptools and EasyInstall"}, {"nl_input": "The Python code is a function named `do_exit` that is used to close a current task and its associated resources. The function takes an argument `arg` which is not used in this context. The function checks if a current task exists, if it does, it closes it and also closes its associated resources. Finally, it deletes the resource manager.\n", "url": "552e6841d09f58e5e1c8fb096c977099", "gt": "Exit the shell session ."}, {"nl_input": "This Python code is a function that takes a string source as input, tokenizes it using the `tokenize.generate_tokens` function, and then converts each token into a list. The function is designed to read a file line by line, tokenize each line, and then return a list of these tokenized lines.\n", "url": "2aef12f2c1527ef8de50aefbdd1bf8a2", "gt": "Tokenizes * source * and returns the tokens as a list of lists ."}, {"nl_input": "This Python code defines a function `add_range` that takes a sequence, a begin and an end value, and adds a range to the sequence. The range is defined by the begin and end values, stripped of any leading or trailing single quotes. If the range is successfully added, it returns `True`, otherwise it returns `False`.\n", "url": "873e2e123d4b3e09c5cf9042128e4ea4", "gt": "Add a read_range primitive"}, {"nl_input": "The Python function `pout` is designed to print a message to the standard output (usually the console). If a log object is provided, it will use the `info` method of the log object to log the message. If no log object is provided, it will not log the message.\n", "url": "6a20ea317b052d61a5e30244282c661a", "gt": "Print msg to stdout and option log at info level ."}, {"nl_input": "This Python code is used to extract colors from an image. The function `get_colors` takes an image as input, calculates the size of the image, and then converts the image to RGB format. It then uses the `getcolors` method to get the colors of the image. Finally, it returns a list of the colors in RGB format.\n", "url": "1009f0bae620cb88f3f2c0ffef639cb5", "gt": "Returns a list of all the image s colors ."}, {"nl_input": "This Python code is used to convert a string to PascalCase, a common naming convention in many programming languages. The function `to_pascal_case` takes a string as input and converts it to PascalCase.\n\nThe function uses the `re` module in Python, which provides support for regular expressions. The `sub` method of the `re` module is used to replace substrings in a string.\n\nThe regular expression `r'(?!^)_([a-zA-Z])'` is used to find all occurrences of underscores followed by a letter in the string. The `lambda` function is used to define a function that takes a match object as input and returns the uppercase version of the matched group.\n\nThe `capitalize` method of the string is used to convert the first character of the string to uppercase.\n\nThe function returns the converted string.\n", "url": "4850c6548e9a829b0ecf457c6f739fdc", "gt": "Transform underscore separated string to pascal case"}, {"nl_input": "This Python function `list_to_csv` takes a list, tuple, or set as input and converts it into a CSV (Comma Separated Values) string. The function checks if the input is of a type that is a list, tuple, or set. If it is, it joins the elements of the list, tuple, or set into a string with a comma as the delimiter, and returns the resulting string.\n", "url": "fba927400ace7484b9037afcd300e79b", "gt": "Converts list to string with comma separated values . For string is no - op ."}, {"nl_input": "The Python code is designed to find all duplicate elements in a list. It uses a list comprehension to iterate over the list and a set to store the unique elements. It then returns a set of all duplicate elements.\n", "url": "3f760b95cc5ab5274f1b7ef94bbb83ac", "gt": "Return the duplicates in a list ."}, {"nl_input": "This Python code calculates the Chi-Square statistic for a given table, with classes, a list of top values, a list of probabilities for each class, and a list of population counts for each class. The Chi-Square statistic is a measure of the independence of the categories.\n", "url": "3af9a5c791b244e41cb0891c47ff4327", "gt": "Calculate chi - squared ."}, {"nl_input": "The provided Python code is a recursive function that calculates the size of a binary tree. The function is used to count the number of nodes in the tree. If the tree is empty, the function returns 0. If the tree is not empty, the function returns 1 plus the sizes of the left and right subtrees.\n", "url": "8f388f52ff9e9531e8395ea311574a61", "gt": "Recursively find size of a tree . Slow ."}, {"nl_input": "This Python code is used to fetch the last record from a specific table in a database. The purpose of this code is to retrieve the last record inserted into the specified table.\n", "url": "43e0333244d180f72905137d8d1335f7", "gt": "Just the last entry ."}, {"nl_input": "The provided Python code is a function that moves the cursor in a text editor to a specific line number. The function takes two parameters: an instance of a text editor and a line number. It then sets the cursor position to the index of the specified line in the document.\n", "url": "85bf8f526e4cc0590ecb0b556389c65a", "gt": "Move cursor to this line in the current buffer ."}, {"nl_input": "The provided Python code is a function that is designed to terminate all threads and reset their respective variables.\n\nThe function `terminate` is a method of a class, and it is used to terminate all threads and reset their respective variables.\n\nThe function iterates over all threads in the class, and for each thread, it calls the `quit` method to terminate the thread. It then resets the `_thread` and `_workers` variables to an empty list.\n\nThe `_thread` variable is a list that holds the identifiers of all threads in the class. This is used to keep track of all threads that have been started.\n\nThe `_workers` variable is a list that holds the identifiers of all workers in the class. This is used to keep track of all workers that have been started.\n\nThe function then returns nothing, as it is a method of a class.\n", "url": "8a01d94ec727f7f460e884f936334ec5", "gt": "Terminate all workers and threads ."}, {"nl_input": "This Python function is used to parse cookies from a request object. The purpose of this function is to retrieve a value from the COOKIES dictionary of the request object, which is a dictionary of all cookies sent by the client. The function takes three parameters: the request object (req), the name of the cookie (name), and the field to extract (field). The function returns the value of the specified field in the cookie with the given name.\n", "url": "7c99a79a7ad75ac06ade2a1e106df71a", "gt": "Pull the value from the cookiejar ."}, {"nl_input": "This Python code is used to check the version of a binary file using the `clang-apply-replacements` tool. The `clang-apply-replacements` is a command-line tool that applies replacements to C/C++ code. If the tool is not found or cannot be executed, it will print an error message to stderr and exit with a non-zero status code.\n", "url": "6adea12a7dde7655f0f1a389ceb335ef", "gt": "Checks if invoking supplied clang - apply - replacements binary works ."}, {"nl_input": "The Python code is a function that converts a string of comma-separated numbers into a string of period-separated numbers.\n", "url": "1834a6c375a0ddbea017871ca95904c0", "gt": "Convert numbers to floats whether the decimal point is . or"}, {"nl_input": "The provided Python code is a function that generates a random leaf node from a given binary tree. The function works by checking if the internal node of the binary tree is True. If it is, it then checks if a random number generated by the random module is greater than 0.5. If it is, the function recursively calls itself to find a random leaf node in the left subtree of the binary tree. If not, it recursively calls itself to find a random leaf node in the right subtree. If the binary tree is a leaf node (i.e., it has no children), it simply returns the binary tree itself.\n", "url": "3f554dfb1717ee0df76ea31085afcf39", "gt": "Get random binary tree node ."}, {"nl_input": "This Python code is a function named `call_spellchecker` that takes three parameters: `cmd`, `input_text`, and `encoding`. The function is used to call a spellchecker process and pass the input text to it. The spellchecker process is expected to split the input text into lines and check each line for spelling errors. If a line is found to be incorrect, it is appended to the output. The function also handles truncation of lines at `0x1fff` (a common limit for Unix-like systems) to prevent the process from running out of memory.\n", "url": "d13d06b0d9509b466ca8f6f77508ccde", "gt": "Call spell checker with arguments ."}, {"nl_input": "This Python function, `isin`, checks if a value is present in a list of values. The function takes two arguments: `value` and `values`. The `value` is the value to be checked, and `values` is a list of values to be checked against. The function iterates over the `value`, and for each value, it checks if it is present in the `values` list. If it is not, the function returns `False`. If it is not found in the `values` list, the function returns `True`.\n", "url": "6108b1d5909a32358df805e683091bc8", "gt": "Check that value is in values"}, {"nl_input": "This Python function takes a list of dictionaries and a key as input, and returns a list of unique values associated with the specified key in the dictionaries.\n", "url": "bcf740019b55c972892333070f45ed82", "gt": "Return a list of dictionaries which are sorted for only unique entries ."}, {"nl_input": "The provided Python code is a function that takes an iterable as input and returns the last element of the iterable. The function uses a try-except block to handle the StopIteration exception, which is raised when the iterable is exhausted. If the iterable is not empty, it assigns the first element to the variable \"first\" and then generates all the elements of the iterable to a generator \"second\". The function then yields the first element and then continues to the next iteration.\n", "url": "1ee47a36d336de1330bd893bd95750fb", "gt": "Yield all items from iterable except the last one ."}, {"nl_input": "This Python code is a function that retrieves the primary keys of a given class (cls) from a database. The function uses a mapper object associated with the class, which is a way to access the database metadata of the class. It then uses a list comprehension to iterate over the primary key columns of the mapper, retrieving the corresponding values from the mapper.\n", "url": "344250efb585be8c0f0d437f27185d11", "gt": "Get primary key properties for a SQLAlchemy cls . Taken from marshmallow_sqlalchemy"}, {"nl_input": "This Python code is creating an inverted dictionary from a given dictionary. The inverted dictionary is a dictionary where the keys are the values from the original dictionary, and the values are the keys from the original dictionary. This is useful in certain scenarios where you need to map the values of one dictionary to the keys of another.\n", "url": "979f3f0fe1af433ff17407bf66d96cad", "gt": "Return a dict with swapped keys and values"}, {"nl_input": "This Python function is designed to extract the dimensions of a video capture object (capture) using OpenCV's built-in methods. The function takes a video capture object as input, retrieves the width and height of the video frame using the `get` method of the capture object, and returns them as a tuple.\n", "url": "aaaa24a0f289ed002bc3da51e3d15cdf", "gt": "Get the dimensions of a capture"}, {"nl_input": "The provided Python code is a method that calculates the memory used by an object. The method is named `memory_used` and it's a part of a class. The purpose of this method is to calculate the memory used by an object by subtracting the memory used by the start of the object (`_start_memory`) from the memory used by the end of the object (`_end_memory`). If either of these values is not available (i.e., they are `None`), the method returns `None`.\n", "url": "b9198474e1ef2266728aed7e2f57c2cc", "gt": "To know the allocated memory at function termination ."}, {"nl_input": "The Python code is a function that reads a file located at a specified path. The function takes a filename as an argument and returns the content of the file.\n", "url": "5b53077086acefdfc481f0156c22d45a", "gt": "Read and return filename in root dir of project and return string"}, {"nl_input": "This Python code defines a class named \"Task\" with two attributes: \"name\" and \"contained_key\". The \"__init__\" method is a special method in Python classes, which is automatically called when an object of the class is created. It initializes the attributes of the class.\n", "url": "1cd1dc7bbfb30f40638f2a27dd200559", "gt": "Instantiate an anonymous file - based Bucket around a single key ."}, {"nl_input": "The Python code is designed to calculate the cross product matrix of a given vector. The cross product matrix of a vector is a 3x3 matrix that represents the rotation matrix that rotates a vector around the axis of rotation.\n", "url": "2492a256abb481d43a2a066b8da72044", "gt": "Returns a 3x3 cross - product matrix from a 3 - element vector ."}, {"nl_input": "This Python code is used to find the mappings of a specific index in an Elasticsearch instance. The function `find_mapping` takes two parameters: `es_url` and `index`. It first finds a backend for the Elasticsearch instance using the `find_perceval_backend` function. If a backend is found, it retrieves the mappings from the backend using the `get_elastic_mappings` method. If a mapping is found, it logs the mapping in a debug mode. Finally, it returns the mapping.\n", "url": "88e0c23054a375aa864fdce761d35810", "gt": "Find the mapping given an index"}, {"nl_input": "This Python function checks if a given number is a power of 2. A number is a power of 2 if it is an integer that is a perfect square. The function uses the `math.log2` function to calculate the base-2 logarithm of the number, and then checks if the result is an integer. If it is, the function returns `True`, indicating that the number is a power of 2. Otherwise, it returns `False`.\n", "url": "38e59d8098901fb657abe07ea53e4970", "gt": "Return whether num is a power of two"}, {"nl_input": "The Python code is a function that checks if a given file exists. If the file does not exist, it raises an error message. If the file does exist, it returns the absolute path of the file.\n", "url": "457753fd65f06a706c64700d4933ab00", "gt": "Check if arg is a valid file that already exists on the file system ."}, {"nl_input": "The provided Python code is a function that generates a general header for a given set of data. The function takes three parameters: `headerfields`, `oldheader`, and `group_by_field`. It then uses these parameters to generate a general header for a set of data.\n", "url": "721c3006e76c0a49f0cdb41715be8519", "gt": "Returns a header as a list ready to write to TSV file"}, {"nl_input": "The provided Python code is a function that checks if a given value is a string. It uses a try-except block to handle cases where the value is not a string, and then uses the isinstance() function to check if the value is a subclass of str.\n", "url": "f6c2c4043a72ee6ac596800045699aa3", "gt": "Determines whether the passed value is a string safe for 2 / 3 ."}, {"nl_input": "This Python code is a function that calculates a series of values based on a cosine function and a sine function, but with a different formula. The function is named \"sbessely\" and takes two parameters: \"x\" and \"N\". The function initializes an array of \"N\" elements, with the first element set to the cosine of \"x\" divided by \"x\", and the second element set to the cosine of \"x\" divided by \"x^2\" plus the sine of \"x\" divided by \"x\". The rest of the elements in the array are calculated as a ratio of the difference between the current element and two previous elements divided by \"x\" times the previous element. The function returns the array of calculated values.\n", "url": "2c2d10e576f0ffc704b857558dbe68d1", "gt": "Returns a vector of spherical bessel functions yn : x : The argument . N : values of n will run from 0 to N - 1 ."}, {"nl_input": "This Python code is designed to find all the columns in a pandas DataFrame that are of type 'object' or a category. It does this by iterating over each column in the DataFrame and checking if its data type is 'object' or a category. If it is, it adds the column name to the list of object columns.\n", "url": "ff434fe169ce9fa91ed8e9ecd5323b31", "gt": "Returns names of object columns in the DataFrame ."}, {"nl_input": "This Python code is used to plot a Kernel Density Estimation (KDE) of a given data set. The KDE is a technique used to estimate the probability density function of a random variable by fitting a smooth, smoothing kernel function to the data.\n\nThe code takes in four parameters:\n\n1. `data`: A list or numpy array of data to be plotted.\n2. `ax`: The matplotlib Axes object to plot on.\n3. `title`: An optional string to set the title of the plot.\n4. `color`: An optional string to set the color of the plot.\n5. `fill_bt`: A boolean value indicating whether to fill the area under the curve (True) or not (False).\n\nThe code first checks if the input data is a list or a numpy array. If it's a list, it converts it to a numpy array.\n\nThen, it creates a KDE object `e` from the data and fits it to the KDE.\n\nThe KDE object `e` is then used to plot the kernel density estimate. The `plot` method of the KDE object is used", "url": "20d4c9337731d52fe439d7ae337e6913", "gt": "Plot a smoothed ( by kernel density estimate ) histogram . : type data : numpy array : param data : An array containing the data to be plotted"}, {"nl_input": "The provided Python code is a function that removes a parameter from a dictionary. The function takes two parameters: `self` and `name`. The `self` parameter is a reference to the current instance of the class, and `name` is the name of the parameter to be removed. The function uses the `pop` method to remove the parameter from the dictionary.\n", "url": "5e2992e3203231f5d04080655e6e6c94", "gt": "Remove the specified parameter from this query"}, {"nl_input": "The provided Python code is a function that disconnects from a websocket connection. The function is named `disconnect` and it's a part of a class. The purpose of this function is to close the websocket connection if it is not None.\n", "url": "aaa8ca744df057fc7df107df0da2946e", "gt": "Closes the connection ."}, {"nl_input": "The provided Python code reads from standard input (stdin) until the end of the file (Ctrl + D). The purpose of this code is to read data from the user's input and then process it.\n", "url": "e0733d51ee06d0addebb4595beb97e0b", "gt": "Read text from stdin and print a helpful message for ttys ."}, {"nl_input": "This Python code is used to download a file from an S3 bucket. The purpose of this code is to download a file with a specific key from a specific bucket and save it to a local file.\n", "url": "12fc3abe142e491a071b985a41eacbcc", "gt": "Download file from S3 Bucket"}, {"nl_input": "The Python code is a function that attempts to convert a value of a certain type to another type. The function takes two parameters: a binding object and a value. It first retrieves the type of the binding object, then tries to cast the value to that type. If the cast fails, it simply returns the original value.\n", "url": "2d8dc20b01a0f3edb16213fdac9acaa8", "gt": "Type casting ."}, {"nl_input": "This Python function is used to read a specific size of bytes from a memoryview object. The function takes two parameters: start_position and size, which represent the starting position and the size of the bytes to be read, respectively. The function returns a memoryview object that represents the read bytes.\n", "url": "20bcf139232a957c771376918dce26db", "gt": "Return a view into the memory"}, {"nl_input": "This Python function is used to get the index of the first column in the current row of a data table. The function uses the `currentIndex` method to get the current index, and then uses the `sibling` method to get the index of the first column in the current row.\n", "url": "8ff34d03fd1a41d19991e700bf7264c1", "gt": "Returns the index of column 0 of the current item in the underlying model . See also the notes at the top of this module on current item vs selected item ( s ) ."}, {"nl_input": "The provided Python code is a recursive function that calculates the size of a binary tree. The function is used to count the number of nodes in the tree. If the tree is empty, the function returns 0. If the tree is not empty, the function returns 1 plus the sizes of the left and right subtrees.\n", "url": "8f388f52ff9e9531e8395ea311574a61", "gt": "Recursively find size of a tree . Slow ."}, {"nl_input": "This Python code calculates the median of a list of numbers. The median is the middle value in a sorted list of numbers. If the list has an even number of values, the median is calculated as the average of the two middle numbers.\n", "url": "a2ed58dc05b0f96ed45e74171c63422e", "gt": "Return the median of numeric data unsing the mean of middle two method . If data is empty 0 is returned ."}, {"nl_input": "This Python function is designed to compare two floating-point numbers for equality, with a certain number of decimal places to consider them equal. If the absolute difference between the two numbers is less than or equal to a certain threshold, the function returns True, indicating that the two numbers are almost equal. Otherwise, it returns False.\n", "url": "fa3233a6cd42dc3060664f97aa1c6dd5", "gt": "Return True if two numbers are equal up to the specified number of places after the decimal point ."}, {"nl_input": "This Python function, `_rindex`, is used to find the last occurrence of a specific element in a list. The function takes two parameters: a list `mylist` and an element `x`. It returns the index of the last occurrence of `x` in `mylist`.\n", "url": "f0181095e2b214bca904dedc120dac57", "gt": "Index of the last occurrence of x in the sequence ."}, {"nl_input": "This Python code is a function that sets the minimum and maximum limits of a plot in a tabular widget. The function takes two parameters, `set_min` and `set_max`, which default to `True`. If `set_min` is `True`, it gets the current minimum limit of the x-axis of the plot and sets the text of the widget associated with the minimum limit to the value of `xmin`. If `set_max` is `True`, it gets the current maximum limit of the x-axis of the plot and sets the text of the widget associated with the maximum limit to the value of `xmax`.\n", "url": "52074cdb32ef6249813156e7efc7b978", "gt": "Populate axis limits GUI with current plot values ."}, {"nl_input": "This Python function is used to redirect the standard output (stdout) of a process. The function takes a new file-like object (new_stdout) as an argument, and it yields None. It then sets the stdout to the new file-like object, and finally, it restores the original stdout. This is useful for testing or debugging, where you want to redirect the output of a process to a file for later inspection.\n", "url": "22f5ab096acfd0ced92efc860645bcaf", "gt": "Redirect the stdout"}, {"nl_input": "The provided Python code is a function that rotates a list by a certain number of steps. The function takes two parameters: a list `l` and an optional parameter `steps`. If no `steps` parameter is provided, it defaults to 1. The function then checks if the length of the list `l` is not 0. If it is, it calculates the remainder of the `steps` parameter divided by the length of the list `l`. This remainder is then assigned to `steps`. If `steps` is not 0, it extracts the first `steps` elements from the list `l` and stores them in a new list `firstPart`. Then, it deletes the first `steps` elements from the original list `l`. Finally, it extends the list `l` with the `firstPart` list.\n", "url": "707569fdd77ebde2ce9e44aeb15df944", "gt": "r Like rotate but modifies l in - place ."}, {"nl_input": "This Python code is used for replacing all occurrences of a dictionary of replacements in an input string. The dictionary keys are replaced with their corresponding values.\n", "url": "85d3c78c884351b4ba1ab4b9bbd83d89", "gt": "Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** ."}, {"nl_input": "This Python code is used for calculating the Short-Time Fourier Transform (STFT) magnitude. The STFT is a method used in audio processing to decompose a signal into its constituent frequencies. The magnitude of each frequency component is calculated, which is the absolute value of the complex number.\n\nThe code first applies a frame window to each frame of the input signal. The window function used is a periodic Hann window, which is a type of window function that is symmetric and has a period of the window length. This is done to ensure that the signal is centered around zero, which is a requirement for the STFT.\n\nThe windowed frames are then multiplied by the window function. This is done to apply the window to each frame of the signal.\n\nFinally, the magnitude of each frequency component is calculated using the Fast Fourier Transform (FFT) of the windowed frames. The FFT is a method used to transform a function of time into a function of frequency.\n\nThe function returns the absolute value of the FFT of the windowed frames, which gives the magnitude of each frequency component in the signal.\n", "url": "dbd5611f954c88c313e4e96e1ccb797b", "gt": "Calculate the short - time Fourier transform magnitude ."}, {"nl_input": "This Python function calculates the distance between each point in a dataset (X) and a given center point. The function uses the 'seuclidean' metric, which is a type of Euclidean distance metric. The result is the sum of all distances.\n", "url": "103206f393d3e14ed03ee8f1adc4a0d0", "gt": "Calculate the SSE to the cluster center"}, {"nl_input": "This Python code is used to implement a method in a class named RedisListPopper. The purpose of this method is to pop the last element from a Redis list and delete the list if it is empty. If the list does not exist, the method returns None.\n", "url": "08901634f481f05ed3b04c1da455b8b2", "gt": "Emulate lpop ."}, {"nl_input": "The provided Python code is a method definition for an object, specifically a class. The method is named `__exit__` and it's a special method in Python that is automatically called when an exception occurs.\n\nThe purpose of this method is to handle the closing of an ASAR (Android Shared Archive) file. The ASAR file is a compressed format used to store Android app files. The method checks if the object (self) has an attribute named `asarfile`. If it does, it closes the file and sets `asarfile` to `None`.\n\nThe parameters `type`, `value`, and `traceback` are optional and are used to handle exceptions. They are not used in this code, so they are not included in the summary.\n", "url": "1d447a9da9154b393c31270b1bb034a1", "gt": "When the with statement ends ."}, {"nl_input": "This Python code creates a symbolic link from a source to a destination. The purpose of this code is to create a symbolic link in a Windows system. The link is created if it does not already exist, and it is created in the directory from which the source is being linked.\n", "url": "1be0c088c4ccabf8a0a9cbc7a533fb82", "gt": "Creates symbolic link for either operating system . http : // stackoverflow . com / questions / 6260149 / os - symlink - support - in - windows"}, {"nl_input": "The Python function `logout` is designed to log out a user from a Flask application. The function takes a parameter `cache` which is typically a cache object used for caching data. The function then sets the value of the 'auth0_key' in the Flask session to None, effectively logging out the user. It also clears the session to ensure no data is left in it. Finally, it returns True to indicate that the logout operation was successful.\n", "url": "6b1aedce31fc54b676ef475bbccca0f4", "gt": "Logs out the current session by removing it from the cache . This is expected to only occur when a session has"}, {"nl_input": "The provided Python code is calculating the Hamming distance between two strings. The Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different.\n", "url": "864a82eccd4052bf4623bc043e1da9f7", "gt": "Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows ."}, {"nl_input": "This Python code is used to convert an array of intervals to a set of boundary points. The purpose of this code is to convert an array of intervals into a set of points that are guaranteed to be within the intervals.\n", "url": "5521725c7f9fb840aa2233e10462e5e9", "gt": "Helper function which returns an array with the Intervals boundaries ."}, {"nl_input": "This Python code is used to submit a form with a specific ID. The purpose of this code is to find an element with the given ID in the web page and submit it.\n", "url": "2456b464c2cdd924c757ebcacad877ac", "gt": "Submit the form having given id ."}, {"nl_input": "This Python code is used to create a slug (shortened version of a string) from a given filename. The slug is a string that is used in URLs, filenames, and other human-readable identifiers. The function `slugify_filename` takes a filename as input, splits it into a base name and an extension, then uses a helper function `get_slugified_name` to create a slug from the base name. The slug is then returned along with the original extension.\n", "url": "d03c8445844950a0fdafc88eb5631845", "gt": "Slugify filename"}, {"nl_input": "The provided Python code is a function that is used to run a test suite using the Nose testing framework. The function is named \"run\" and it takes in one argument, \"self\". This argument is used to access the instance of the class.\n\nThe function is trying to import the Nose library. If the Nose library is not found, it raises an ImportError. This error is caught and handled by the except block, which prints an error message and then the function continues to execute.\n\nThe function also takes a list of arguments, which are passed to the Nose library's run function. The first argument is the name of the script that is running the tests, which is set to the first argument of the current script. The rest of the arguments are passed to the test_args attribute of the instance.\n\nIf the Nose library is not found, the function prints an error message and then raises the ImportError. This error is then caught and handled by the except block, which prints an error message.\n\nThe function returns the result of the Nose library's run function, which is the result of running the tests.\n", "url": "595642aaa9f754ce601e2d291d98ec1a", "gt": "Runs the unit test framework . Can be overridden to run anything . Returns True on passing and False on failure ."}, {"nl_input": "The Python code is designed to parse comments from a file. It does this by first stripping the comments from the file, then parsing each comment and extracting the next line. The parsed comments are then returned as a list.\n", "url": "1dc3a21cdc2e7628cf01cea3b18aacba", "gt": "Return a list of all parsed comments in a file . Mostly for testing & interactive use ."}, {"nl_input": "The provided Python code is a method that registers a plugin in a specific application. The purpose of this method is to restore the scrollbar position of a specific widget in a main window of the application. The method is connected to the 'restore_scrollbar_position' signal, and it also adds a dockwidget to the main window.\n", "url": "864135b3a55a9a79c0d47a33500139f2", "gt": "Register plugin in Spyder s main window"}, {"nl_input": "This Python function checks if an object is iterable, i.e., it has a method called `__iter__`. It also checks if the type of the object is not a subclass of `str` or `unicode`. If all these conditions are met, the function returns `True`, otherwise it returns `False`.\n", "url": "e8d906db3eac56229992dd6701dafd90", "gt": "Is an object iterable like a list ( and not a string ) ?"}, {"nl_input": "The provided Python code is a function that checks if a file is writable by others. The function takes a filename as input and returns True if the file is writable by others, and False otherwise. The function uses the `os.stat()` function to get the file's mode and the `stat.S_IWOTH` constant to check if the file is writable by others.\n", "url": "b4b9c1d50409852d0126efded851221b", "gt": "Check if file or directory is world writable ."}, {"nl_input": "The provided Python code is a function that generates a list of dates between two given dates. The function takes two parameters: `start_date` and `end_date`, which are expected to be datetime objects. The function then generates a list of dates by adding a timedelta of `n` days to the `start_date` for `n` in the range of the number of days between `start_date` and `end_date`.\n", "url": "2ec6dccbbbb87558aac51d057330ced6", "gt": "Returns all dates between two dates ."}, {"nl_input": "This Python function calculates the SHA-256 hash of an input array. The SHA-256 hash is a cryptographic hash function that produces a 256-bit (32-byte) hash value. This hash is used to uniquely identify the data. The function takes an input array and calculates its SHA-256 hash.\n", "url": "1b3888d1a58935502e5b2adb2b60e05c", "gt": "Create a SHA256 hash from a Numpy array ."}, {"nl_input": "This Python function `img_encode` is used to encode an image array into a base64 string. The function takes an image array and optional keyword arguments. The image array is converted to a BytesIO object, and then the image is saved to the BytesIO object using the `imsave` function. The image format is determined by the 'format' keyword argument, and if not provided, it defaults to 'png'. The image is then encoded into a base64 string, and finally, a string is returned in the format 'data:image/{};base64,{}' where '{}' are placeholders for the image format and base64 string.\n", "url": "d2d722cc0e28ad756bd471900ecc9d88", "gt": "Encode ndarray to base64 string image data Parameters ---------- arr : ndarray ( rows cols depth ) kwargs : passed directly to matplotlib . image . imsave"}, {"nl_input": "The Python code is a function that returns a list of all function objects in the global namespace. The function uses a list comprehension to iterate over all values in the global namespace, and includes only those that are instances of the `Function` class.\n", "url": "c39dfb1294e1cedacd1dba82fe10444c", "gt": "A list of functions declared or defined in this module ."}, {"nl_input": "This Python function checks if the given object is an iterable (i.e., a list or tuple) and returns True if it is, otherwise it returns False.\n", "url": "4fe4993dee777785be3fcaec037b4d45", "gt": "test if object is a list or tuple"}, {"nl_input": "The provided Python code is a function that uses the `re.gsub()` method to replace occurrences of a certain string in a given string. The function takes four parameters: the string to be processed (`s`), the string to be replaced (`find`), the replacement string (`replace`), and an optional count parameter (`count`, with a default value of 0). The function returns the modified string.\n", "url": "360c91549b5a9b4a4c05559eccff8f03", "gt": "A non - optimal implementation of a regex filter"}, {"nl_input": "The provided Python code is converting a list of lists into a dictionary. The main purpose of this code is to transform a list of lists into a dictionary where each key in the dictionary is a unique element from the first list, and the corresponding value is a list of all elements that match that key from the second list.\n", "url": "1b73a949780175c73d5778ca8e2f5b2e", "gt": "Convert list of key value lists to dict"}, {"nl_input": "This Python function is designed to convert a datetime object to UTC time. The function takes a datetime object as input and returns a new datetime object in UTC time. If the input datetime object does not have a timezone information, it is assumed to be in UTC time and the function returns the same datetime object. If the input datetime object has a timezone information, it is converted to UTC time using the `astimezone` method of the datetime object.\n", "url": "2a5f56a6f9bf9db10ce4af896725130d", "gt": "Convert any timestamp to UTC ( with tzinfo ) ."}, {"nl_input": "The provided Python code is a function that parses a string into a date object. The function takes a string `s` as input and returns a date object from the string. The string is parsed using the `strptime` function from the `datetime` module, which converts a string into a datetime object. The `date_format` attribute of the object is then retrieved and returned as a date object.\n", "url": "023556d0f9084731234739f423f423b8", "gt": "Parses a date string formatted like YYYY - MM - DD ."}, {"nl_input": "This Python code is a function that retries a call to a given function `func`, with a specified number of retries. If the function fails, it will cleanup and then retry the function. The number of retries is determined by the `retries` parameter, which defaults to 0 if not provided. The cleanup function is a lambda function that does nothing by default. The `trap` parameter is a tuple of exceptions that the function will catch and cleanup.\n", "url": "1a64146c41dcc175d7dced14a4e1efc2", "gt": "Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate ."}, {"nl_input": "This Python function, `utcfromtimestamp`, is used to convert a Unix timestamp (a count of seconds elapsed since 00:00:00 Thursday, 1 January 1970 UTC) to a datetime object in UTC timezone.\n", "url": "3d70f3cd7bb4fcd28a864cd53385c91a", "gt": "Returns a datetime object of a given timestamp ( in UTC ) ."}, {"nl_input": "This Python code is designed to determine the dimensions of an array. The function `get_dimension_array` takes an array as input. If the array is a list of lists, it calculates the length of the array and the length of the longest sublist. If the array is not a list of lists, it calculates the length of the array and a constant value of 1. The function returns a list containing these two values.\n", "url": "cdc6bd5ccb9ba6e6aaf76e2667547b09", "gt": "Get dimension of an array getting the number of rows and the max num of columns ."}, {"nl_input": "This Python function, `print_log`, is used to log messages to the standard error stream (`sys.stderr`). The function takes two or more arguments: `text` and `colors`. The `text` argument is the message to be logged, and the `colors` argument is a list of color codes to be used for formatting the log message.\n\nThe function uses the `sprint` function from the `sprint` module to format the log message, and then writes it to the standard error stream. The color codes are formatted using the `format` function and the `*` operator to unpack the list of color codes.\n\nThe log message includes the name of the script that is running the function, followed by the `text` argument. The color codes are also included in the log message.\n\nThe `+ \"\\n\"` is used to ensure that each log message is written on a new line.\n", "url": "336b9bafdd37d354437a6c0bf18ca5ba", "gt": "Print a log message to standard error ."}, {"nl_input": "The provided Python code is a function that takes a string as input and returns a decoded version of the string in base64 format.\n", "url": "e1355896799feac76852156156c7c4ce", "gt": "Decodes a given base64 string into bytes ."}, {"nl_input": "This Python function `setdefaults` is used to set default values for keys in a dictionary. The function takes two parameters: a dictionary `dct` and a dictionary `defaults`. It then iterates over the keys in the `defaults` dictionary, and if a key is not already present in the `dct` dictionary, it sets the value of that key to the corresponding value in the `defaults` dictionary. The function then returns the modified dictionary.\n", "url": "9bbbb20f503ba46da76eaa77b98784af", "gt": "Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs ."}, {"nl_input": "This Python function is designed to set the locale for a given request. The function takes a request object as input and returns the locale selected by the 'lang' query parameter in the request. If the 'lang' query parameter is not present in the request, it defaults to the locale selected by the 'babel.select_locale_by_request' function.\n", "url": "61f13c0b5a9183042dccc906393eddee", "gt": "Return locale from GET lang param or automatically ."}, {"nl_input": "This Python function, `cpp_checker`, is designed to check the C++ code using the GCC compiler. The function takes two parameters: `code` and `working_directory`. The `code` parameter is the C++ code to be checked, and the `working_directory` parameter is the directory where the code is located.\n\nThe function uses the `gcc_checker` function, which is a helper function that is used to check the C code using the GCC compiler. The function takes four parameters: `code`, `extension`, `args`, and `working_directory`. The `extension` parameter is set to '.cpp', which indicates that the code is in C++. The `args` parameter is a list of command-line arguments that are passed to the GCC compiler. The `args` list includes the C++ standard flag '-std=c++0x', and any additional include flags specified by the `INCLUDE_FLAGS` constant. The `working_directory` parameter is set to the `working_directory` parameter passed to the function.\n\nThe function returns the result of the `gcc_checker` function, which is the output", "url": "a095b82ce6afd497cdc7fa027a60c84f", "gt": "Return checker ."}, {"nl_input": "The provided Python code is a function that checks if a socket is connected. The function is_connected() is designed to check if a socket is connected. It does this by trying to get the socket's name and checking if the second element of the result is not 0. If the socket is not connected, it returns False, otherwise it returns True.\n", "url": "513d431a27bb592c41048d90039995f4", "gt": "Return true if the socket managed by this connection is connected"}, {"nl_input": "This Python code is converting a string from CamelCase to snake_case. The function `camel_to_` takes a string `s` as input and performs two main operations:\n\n1. The first sub-operation replaces each uppercase letter with the letter followed by an underscore and the uppercase letter.\n2. The second sub-operation replaces each lowercase letter followed by an uppercase letter with the lowercase letter followed by an underscore.\n3. The `lower()` function is then called to convert all the characters to lowercase.\n\nThe purpose of this code is to convert a string from CamelCase to snake_case, which is a common format for writing functions and variables in programming languages.\n", "url": "e62605ac6be1e0109853647a645d5a0f", "gt": "Convert CamelCase to camel_case"}, {"nl_input": "The provided Python code is a function that formats an integer value into a human-readable size. The function takes an integer as input and attempts to format it into a human-readable size using the `fmt.human_size` function. If the `fmt.human_size` function raises a `ValueError` or `TypeError`, the function returns \"N/A\". If the `fmt.human_size` function is successful, the function returns the formatted size. The function also includes error handling to deal with any potential errors that might occur during the formatting process.\n", "url": "d92799ba562962beae001113ca6732fe", "gt": "Format a byte sized value ."}, {"nl_input": "This Python code is used to copy the User-Agent from the Selenium WebDriver to a headers dictionary. The User-Agent is a string that the browser sends to the server to identify the browser and its version. This is used to prevent the browser from making requests to the server with a different User-Agent, which can lead to unexpected behavior or misbehavior.\n", "url": "0bad6ea9859d756f7237f3fa3dcf1973", "gt": "Updates requests session user - agent with the driver s user agent"}, {"nl_input": "This Python code defines a function `force_iterable` that takes a function `f` as an argument. The function `force_iterable` is a decorator that wraps the original function `f`. The purpose of this decorator is to ensure that the returned result of the original function `f` is iterable. If the result is not iterable, it is wrapped in a list with a single element.\n", "url": "1cf347f32e0553e66342c5b228b6d453", "gt": "Will make any functions return an iterable objects by wrapping its result in a list ."}, {"nl_input": "This Python code is designed to check if a specific line exists in a file. The function `is_line_in_file` takes two parameters: a filename and a line of text. It opens the file, reads each line, and checks if the line matches the input line. If a match is found, it returns `True`. If no match is found after checking all lines, it returns `False`.\n", "url": "4c56c26e86dccb73a7524fa62749b3c7", "gt": "Detects whether a line is present within a file ."}, {"nl_input": "This Python function checks if a file exists and is not empty. It takes a file name as input and returns True if the file exists and is not empty, and False otherwise. The function uses the os.path.exists() function to check if the file exists, and os.path.getsize() function to get the size of the file. If any of these operations fail, the function catches the OSError exception and returns False.\n", "url": "ba4351c8eadd8c502a13959ccbb889d2", "gt": "Check if a file exists and is non - empty ."}, {"nl_input": "This Python code is used to find the greatest common divisor (GCD) of an array of numbers. The GCD is the largest number that can perfectly divide all the numbers in the array without a remainder. The function `_gcd_array` takes an array of numbers as input and returns the GCD of all the numbers in the array.\n", "url": "7a0e230522dc1bfb6f427d5c55f1b354", "gt": "Return the largest real value h such that all elements in x are integer multiples of h ."}, {"nl_input": "This Python function, `lin_interp`, is used for linear interpolation. The purpose of this function is to calculate the value of a variable `y` at a specific point `x` within a range defined by two other variables `rangeX` and `rangeY`. The function takes three arguments: `x`, `rangeX`, and `rangeY`. `x` is the point at which the value of `y` is to be determined, `rangeX` is a tuple representing the range of `x` values, and `rangeY` is a tuple representing the range of `y` values. The function returns the value of `y` at the point `x`.\n", "url": "bba8e86c58de9c086c25b972de480920", "gt": "Interpolate linearly variable x in rangeX onto rangeY ."}, {"nl_input": "The provided Python code is used for unpickling a pickled object from a file. The pickle module in Python is used for serializing and de-serializing a Python object structure. The dill module is used to pickle and unpickle Python objects.\n", "url": "64f148c6a3c867b3f9380ee9172cce34", "gt": "Unpickle a python object from the given path ."}, {"nl_input": "This Python function is used to check if a given string can be converted to an integer. It does this by first checking if the string is an instance of either `int` or a subclass of `int` (like `bytes`, `bytearray`, `long`, etc.) and then checking if the string can be converted to an integer.\n", "url": "eaa5d3df3bbe1169308e890817a30790", "gt": ">>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False"}, {"nl_input": "The provided Python code is a function that checks if one set is a subset of another. It's a method of a set in Python, and it's used to check if all elements of the first set are present in the second set.\n", "url": "b13301061e6e68891948ff771a0dd969", "gt": "Report whether another set contains this set ."}, {"nl_input": "This Python code is a Django-specific implementation of a static file serving view. It is used to serve static files, which are files that are not meant to be rendered as HTML. The code is designed to follow the logic of Django's static file serving view, which checks if the application is in debug mode and if the insecure option of the runserver command is not used. It also checks if the pipeline is enabled and if the collector is enabled. If these conditions are not met, it raises an ImproperlyConfigured exception.\n\nThe function `serve_static` is used to serve static files. It takes in a request object, a path to the file to serve, an optional insecure flag, and any additional keyword arguments. If the insecure flag is not set and the application is not in debug mode, it raises an ImproperlyConfigured exception. If the pipeline is not enabled and the collector is not enabled, it collects the requested file and serves it as quickly as possible.\n", "url": "cc5b140743d1613ffe94214545936630", "gt": "Collect and serve static files ."}, {"nl_input": "This Python code is used to merge two dictionaries. The purpose of this code is to recursively update the values of a dictionary with values from another dictionary. If the key in the first dictionary is also a dictionary, the function will recursively call itself to update the nested dictionaries.\n", "url": "367ef0f0e3ea4a8eafab16a7ab44c725", "gt": "Recursively merge dicts ."}, {"nl_input": "The provided Python code is a function that removes trailing zeros from a list of numbers. The function takes a list of numbers as input and returns a new list with the trailing zeros removed.\n", "url": "18282b3d8bec1a731e59daf433dfd841", "gt": "Removes trailing zeroes from indexable collection of numbers"}, {"nl_input": "The provided Python code is a method definition for an object, specifically a class. The method is named `__exit__` and it's a special method in Python that is automatically called when an exception occurs.\n\nThe purpose of this method is to handle the closing of an ASAR (Android Shared Archive) file. The ASAR file is a compressed format used to store Android app files. The method checks if the object (self) has an attribute named `asarfile`. If it does, it closes the file and sets `asarfile` to `None`.\n\nThe parameters `type`, `value`, and `traceback` are optional and are used to handle exceptions. They are not used in this code, so they are not included in the summary.\n", "url": "1d447a9da9154b393c31270b1bb034a1", "gt": "When the with statement ends ."}, {"nl_input": "This Python function is used to get the current position of the cursor on the screen. The function uses the ctypes library to interact with the Windows API functions. The function `GetCursorPos` is used to get the current position of the cursor, and the `windll.user32.GetCursorPos` function is used to get the cursor's position. The cursor's position is then returned as a tuple (x, y).\n", "url": "967b8409877fab7c6d1a05090f226266", "gt": "Returns the current xy coordinates of the mouse cursor as a two - integer tuple by calling the GetCursorPos () win32 function ."}, {"nl_input": "This Python code is designed to browse a directory using a GUI-based dialog. The function `browse_dialog_dir` is used to open a directory selection dialog. The dialog is based on the `python gui_dir_browse.py` script, which is expected to be a GUI-based script that allows the user to select a directory. The selected directory is then returned by the function. If no directory is selected, the function returns an empty string.\n", "url": "d5e734d1fcfeb6be60382165bf589df5", "gt": "Open up a GUI browse dialog window and let to user pick a target directory . : return str : Target directory path"}, {"nl_input": "This Python code is used to change the height of a set of matplotlib bars in a plot. The purpose of this code is to adjust the height of the bars in a plot based on a new value. The bars are changed to the new height, and their position is also recentered.\n", "url": "b0be624b8cf1eb2cc8c65f5ac8f1b1fc", "gt": "Make bars in horizontal bar chart thinner"}, {"nl_input": "This Python function is used to uncheck a checkbox in a web page. The function takes an optional parameter 'force_check' which defaults to False. If 'force_check' is True, the function will uncheck the checkbox even if it is already checked. If 'force_check' is False, the function will uncheck the checkbox only if it is currently checked.\n", "url": "cf3e688ced0a0895f3c3cf7463d322ee", "gt": "Wrapper to uncheck a checkbox"}, {"nl_input": "The provided Python code is a custom implementation of a 1x1 convolutional layer in PyTorch, a popular deep learning framework. The function `conv1x1` takes three parameters: `in_planes`, `out_planes`, and `stride`. It returns a 1x1 convolutional layer with the specified number of input and output planes, and the specified stride.\n", "url": "1c63a8f567508c2dbbd974597db516e0", "gt": "1x1 convolution"}, {"nl_input": "This Python code is used to find the version of the ffmpeg command-line tool. The tool is used to encode and decode audio files. The version of ffmpeg is returned as a string in the format \"X.Y.Z\". If the ffmpeg version cannot be found, it returns None.\n", "url": "5672c84f0fb6f7657f191a3093ff16c4", "gt": "Returns the available ffmpeg version"}, {"nl_input": "The Python code is a function that draws a horizontal line on the screen. The function takes five parameters: the x and y coordinates of the line, the width of the line, and the color of the line. The function then uses the `rect` function to draw the line.\n", "url": "bb672ed0a0391881ee18bccacf406e44", "gt": "Draw a horizontal line up to a given length ."}, {"nl_input": "The provided Python code is a function that calculates the longest run of consecutive elements in a given data array (`da`) along a specified dimension (`dim`). The function `longest_run` is designed to return the length of the longest run of consecutive elements in the data array. If no dimension is specified, it defaults to 'time'.\n", "url": "f96218fe24cc389de0fb1c77fe88bf40", "gt": "Return the length of the longest consecutive run of True values ."}, {"nl_input": "The provided Python code is a function that loads a classifier from a file named 'classifier.dump'. The classifier is a pickled object that was previously saved using the pickle module. The function opens the file in read and write mode, loads the pickled object from the file, and then closes the file.\n", "url": "9fddf29122817bde842baa42b083ce22", "gt": "Unpickles the classifier used"}, {"nl_input": "This Python code is creating a dictionary that maps attribute names in a class to their corresponding column names in a database. The function `gen_columns(cls)` is a generator that yields tuples of attribute names and their corresponding column names. The dictionary `attr_col` is then created by mapping these attribute names to their corresponding column names.\n", "url": "3d729ca5bcd13294547ba7baae28b3bc", "gt": "Asks an SQLAlchemy class how its attribute names correspond to database column names ."}, {"nl_input": "The provided Python code is a destructor (`__del__`) method for a class. The purpose of this method is to clean up any resources that the class is using, such as handles (`_hConv`) and identifiers (`_idInst`).\n", "url": "61e447348557f0698e3e0553701346ba", "gt": "Cleanup any active connections and free all DDEML resources ."}, {"nl_input": "The provided Python code is a function that retrieves a variable's value from the current execution frame. The function takes a string argument, which is the name of the variable to be retrieved. It uses the `inspect` module to get the current execution frame, then traverses up the call stack to find the variable's value. If the variable is found, it is returned; otherwise, `None` is returned.\n", "url": "7e2c5d8ffcd2cc1804e4430e37ffcd29", "gt": "Get the value of a local variable somewhere in the call stack ."}, {"nl_input": "This Python code is a generator function that reads lines from standard input (stdin) and yields each line as it is read. The purpose of this code is to read lines from standard input and then yield each line as it is read. This is useful for a variety of tasks, such as processing large files or streaming data in real-time.\n", "url": "e7f60e34eae397045ead8f39e3e261c4", "gt": "Generator for reading from standard input in nonblocking mode ."}, {"nl_input": "The provided Python code is a function that calculates the number of levels in a nested list structure. The function takes a list of lists as input and returns a list of the lengths of each sublist. If the input list is empty, the function returns an empty list.\n", "url": "a6c5e82314e0faff8a2fffca5ce8286b", "gt": "Get the number of factor levels for each categorical column ."}, {"nl_input": "This Python function reads a string from a buffer, with an optional byte order. The function first reads a numeric value from a USHORT buffer, then reads the specified number of bytes from the buffer, and finally decodes the bytes into a string in UTF-8 encoding.\n", "url": "48e0185c07ad636ecb25d70cb2b5dd3d", "gt": "Read a string from a file - like object ."}, {"nl_input": "This Python function `replace_all` takes a string `text` and a dictionary `dic` as input. It iterates over the dictionary, replacing each key-value pair in the `text` with the corresponding value from the `dic`. The function then returns the modified string.\n", "url": "248a51a67e1e4f407628e9ccafebb8d6", "gt": "Takes a string and dictionary . replaces all occurrences of i with j"}, {"nl_input": "The Python code is defining a function `from_series` that takes two parameters: a class `cls` and a series `series`. The function is expected to create a pandas DataFrame from the given series, and then create a Dataset from the DataFrame. The function then returns the value of the series from the DataFrame.\n", "url": "8acad3dcdc0bc175f9a4ddd4dac2d19c", "gt": "Convert a pandas . Series into an xarray . DataArray ."}, {"nl_input": "This Python code compares two strings character by character and returns True if they are the same length and contain the same characters in the same order, False otherwise.\n", "url": "71f181ff4390f325cea684ca6661f4f8", "gt": "Compare two strings while protecting against timing attacks"}, {"nl_input": "This Python function is designed to check if a given extension is a valid one for a file that is being watched by a HamlPy program. HamlPy is a Python library for generating Haml templates from Python code.\n", "url": "741cd035bc31b069280d84e5c84487d1", "gt": "Return True if the given extension is one of the watched extensions"}, {"nl_input": "This Python code is creating an inverted dictionary from a given dictionary. The inverted dictionary is a dictionary where the keys are the values from the original dictionary, and the values are the keys from the original dictionary. This is useful in certain scenarios where you need to map the values of one dictionary to the keys of another.\n", "url": "979f3f0fe1af433ff17407bf66d96cad", "gt": "Return a dict with swapped keys and values"}, {"nl_input": "This Python code is used to extract words from a list of lines. The purpose of this code is to find and yield all the words in each line of the input list. The words are defined as sequences of alphanumeric characters or underscores.\n", "url": "866cf01cf4308a742bd39972cdf57ead", "gt": "Extract from the given iterable of lines the list of words ."}, {"nl_input": "This Python function is designed to query a database procedure and return a row from the result set. The function takes three parameters: `procname`, `args`, and `factory`. The `procname` is the name of the database procedure to be executed, `args` is a tuple of arguments to be passed to the procedure, and `factory` is a function that is used to create a row object from the result of the query.\n\nThe function then enters a loop that executes the `query_proc` function with the provided `procname`, `args`, and `factory`. The `query_proc` function is expected to return a list of row objects. The function then returns the first row object in the list, or `None` if the list is empty.\n\nThe function is used to query a database procedure and return a row from the result set.\n", "url": "4bb07195c20355ce50cc040f5e70a269", "gt": "Execute a stored procedure . Returns the first row of the result set or None ."}, {"nl_input": "The provided Python code is a function that applies a function `f` to an object `obj`, with any number of additional arguments. The function `vectorize` is a helper function that converts a function into a vectorized form.\n\nThe function `apply` takes in five parameters:\n\n- `f`: The function to be applied.\n- `obj`: The object to apply the function to.\n- `*args`: Variable length list of additional positional arguments.\n- `**kwargs`: Variable length dictionary of additional keyword arguments.\n\nThe function returns the result of applying `f` to `obj`, with any additional arguments and keyword arguments.\n\nThe `vectorize` function is a helper function that takes a function `f` and a tuple `args` and `kwargs`, and returns a new function that applies `f` to the first element of `args` and `kwargs`, then to the rest of `args` and `kwargs`.\n\nThe `*` in `*args` and `**kwargs` is a syntax for unpacking the elements of a list or dictionary into positional arguments and keyword arguments, respectively.\n", "url": "1a639907a649d5db69f9b6fdd58119d3", "gt": "Apply a function in parallel to each element of the input"}, {"nl_input": "The provided Python code is designed to find the longest contiguous sequence in a dictionary of contiguous sequence lengths for each file. The dictionary is keyed by file name and the values are lists of contiguous sequence lengths. The function `find_largest_contig` initializes an empty dictionary `longest_contig_dict` to store the longest contiguous sequence for each file. It then iterates over the dictionary items, sorting the contiguous sequence lengths in descending order. The largest contiguous sequence is then stored in the `longest_contig_dict` dictionary for the corresponding file name. Finally, the function returns the `longest_contig_dict`.\n", "url": "fe624b37a24fae6c2ac1da10c64e2a3a", "gt": "Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig"}, {"nl_input": "This Python code is used to remove duplicates from a list. The function `dedupe_list` takes a list as input and returns a new list with duplicate elements removed. It uses a set to keep track of the elements that have been seen before, and only includes elements that have not been seen before in the new list.\n", "url": "695e29d80ca42056024f20cf87ce69a0", "gt": "Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed"}, {"nl_input": "The provided Python code is used for pickling (serialization) of a given object (`thing`) and saving it to a file (`fname`). The pickling process is a way to convert a Python object into a byte stream, which can then be stored or transmitted over a network.\n", "url": "a0c6bdbe745a48b0c5ff9e6435ea812c", "gt": "save something to a pickle file"}, {"nl_input": "The provided Python code is a function that deletes a connection from a global variable named `_CON_SYM_`. The function first checks if `_CON_SYM_` is a global variable. If it is, it pops the value of `_CON_SYM_` from the global scope. Then, it checks if the connection is not started. If the connection is not started, it stops the connection.\n", "url": "fe9deca4af0d80078524960ad2b74574", "gt": "Stop and destroy Bloomberg connection"}, {"nl_input": "The provided Python code is a function that determines whether a process is interactive or not. The function checks if the process is running in a terminal or not, and if it's interactive or not.\n\nThe function is named `determine_interactive` and it's a method of a class. The class is not specified in the function, so it's assumed that the function is part of a class.\n\nThe function is trying to determine whether the process is interactive or not. It does this by checking if the standard output (stdout) is a terminal or not, and if the process group (pgid) of the process is the same as the process group of the terminal.\n\nIf the process is interactive, the function sets the `interactive` attribute of the object to `True` and returns `False`. If the process is not interactive, the function sets the `interactive` attribute to `False` and returns `False`.\n\nIf the `interactive` attribute of the object is `False`, the function returns `False`. Otherwise, it returns `True`.\n", "url": "76aa03205e7480cb1280364d8181ad15", "gt": "Determine whether we re in an interactive shell . Sets interactivity off if appropriate . cf http : // stackoverflow . com / questions / 24861351 / how - to - detect - if - python - script - is - being - run - as - a - background - process"}, {"nl_input": "This Python function takes a URL as input and returns the hostname of the URL. The hostname is the part of the URL that comes after the '//' in the URL. It uses the urllib.parse module's urlparse function to parse the URL, and then returns the netloc (network location) of the parsed URL, which is the hostname. If the netloc is empty, it returns an empty string.\n", "url": "13343f8f3c5515600e035d8cca7abd84", "gt": "Parses hostname from URL . : param url : URL : return : hostname"}, {"nl_input": "This Python function, `napoleon_to_sphinx`, is used to convert Google's NAPOLEON style docstrings to Sphinx style. The NAPOLEON style is a style that is used to document Python code, and Sphinx is a tool for generating documentation from source code.\n\nThe function takes two parameters: `docstring` and `config_params`. The `docstring` is the NAPOLEON style docstring to be converted, and `config_params` is a list of parameters that control the conversion process.\n\nThe function first checks if the \"napoleon_use_param\" and \"napoleon_use_rtype\" parameters are not in the `config_params` list. If they are not, it adds them to the list with their respective default values (False).\n\nThen, it creates a `Config` object with the parameters from `config_params`.\n\nFinally, it converts the NAPOLEON style docstring to Sphinx style using the `GoogleDocstring` function, and returns the result.\n", "url": "40b653bcdc05a7556a73500d75ea2a95", "gt": "Convert napoleon docstring to plain sphinx string ."}, {"nl_input": "This Python code is a function that normalizes an image array to the range [0, 255]. The function works by subtracting the minimum value of the image from all pixel values, and then dividing the result by the range of the image. This transformation ensures that all pixel values are in the range [0, 255], which is a requirement for many image processing tasks.\n", "url": "9b7c3a7b5223587100d77ad757569265", "gt": "Scale the image to uint8"}, {"nl_input": "This Python function is designed to calculate the last day of a specific month, given a specific date. The function takes a datetime object as input, adds 32 days to it, then sets the day to the first day of the next month. It then subtracts 1 hour from the new date to get the last day of the current month.\n", "url": "820668a155ea53034787f1042a2328c0", "gt": "Returns day number of the last day of the month : param t : datetime : return : int"}, {"nl_input": "This Python code is a function that calculates the orientation of Earth based on a given date. The function takes a date as input, converts it into radians, and then performs a series of rotations to align the Earth's orientation with the local time.\n", "url": "d5c0c0b2fdf91739d6b7fcf66bbb3579", "gt": "Earth orientation as a rotating matrix"}, {"nl_input": "This Python code is used to validate an XML input against a specific XML Schema (XSD). The purpose of this code is to ensure that the XML input conforms to the XSD schema. If the XML input does not conform to the XSD schema, an error is raised.\n", "url": "2605045c4bab070d37e542733c536732", "gt": "This method validate the parsing and schema return a boolean"}, {"nl_input": "This Python function, `rand_elem`, is designed to randomly select elements from a given sequence (`seq`) and optionally repeat this process `n` times. The function uses the `random.choice` function to select a random element from the sequence, and the `repeat` function to repeat this process `n` times if a value is provided.\n", "url": "4b7b7a1e82c377437cb8d2c97b053eef", "gt": "returns a random element from seq n times . If n is None it continues indefinitly"}, {"nl_input": "The provided Python code is a function that checks if two given boxes intersect. The function takes two parameters, `box1` and `box2`, which are represented as tuples of four elements: the minimum and maximum x-coordinates, the minimum and maximum y-coordinates. The function then checks if the intersection of the two boxes' x-coordinates and y-coordinates is non-empty, i.e., if the boxes intersect. If they do, the function returns `True`; otherwise, it returns `False`.\n", "url": "048248cc31234e7e17b1e3d8f525a955", "gt": "Determines if two rectangles each input as a tuple ( xmin xmax ymin ymax ) intersect ."}, {"nl_input": "This Python function is used to count the number of leading whitespace characters in a given text. It does this by iterating over each character in the text and checking if it is a whitespace character. If it is, it returns the index of that character. If it is not a whitespace character, it returns the index of the next non-whitespace character.\n", "url": "a2f407d02b38bb235bf47e7d92789cdf", "gt": "Returns the number of characters at the beginning of text that are whitespace ."}, {"nl_input": "The provided Python code is a function that negates the values of two variables, `from_value` and `to_value`. The function is named `negate` and it is a method of a class. The purpose of this function is to swap the values of `from_value` and `to_value`, and also to toggle the `include_lower` and `include_upper` flags.\n", "url": "0bd3c70c60c995acfc00f9af226fdcd9", "gt": "Reverse the range"}, {"nl_input": "The provided Python code is a function that calculates the uptime in seconds. The function uses the `os.stat()` function to get the last modification time of the `/dev/pty/mst/pty0` file, which is typically used to get the system boot time. It then calculates the current time and subtracts the boot time to get the uptime in seconds.\n\nThe function also handles two exceptions: `NameError` and `OSError`. The `NameError` is raised when the variable `__boottime` is not defined, and the `OSError` is raised when there is an error opening the file.\n\nThe function returns `None` if either of these exceptions is raised.\n", "url": "a316ccd8b999becea02b2d527a5e8beb", "gt": "Returns uptime in seconds or None on Syllable ."}, {"nl_input": "This Python function, `remove_empty_text`, is designed to filter out any empty text from a list of Utterance objects. The function takes a list of Utterance objects as input and returns a new list with only the Utterance objects that have non-empty text.\n", "url": "5ca8d1be36d4955478ff4ef72fbc653a", "gt": "Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing"}, {"nl_input": "This Python code is a function that handles a click event on a stop button. The function is designed to interrupt computations or stop debugging if not currently reading from the input stream.\n", "url": "435335bb0dc17309dd5d006b3f7bc474", "gt": "Method to handle what to do when the stop button is pressed"}, {"nl_input": "The provided Python code is a function that checks if a given object is a function. The function is_function is designed to check if a given object is a function. It first checks if the object is an instance or a class, and if it is, it returns False. Then, it uses the isinstance function to check if the object's callback attribute is a Callable or a classmethod. If both conditions are met, the function returns True, indicating that the object is a function.\n", "url": "0e6cf5fd3544a439b3491daa4a358c98", "gt": "return True if callback is a vanilla plain jane function"}, {"nl_input": "This Python function, `random_choice`, is designed to randomly select an element from a given sequence. The sequence can be a list, tuple, or a set. If the sequence is a set, it is converted to a tuple before the random choice is made.\n", "url": "1ee8eef5f28bf7d5c8091fb2794bc444", "gt": "Same as : meth : random . choice but also supports : class : set type to be passed as sequence ."}, {"nl_input": "This Python code is a method that is used to detach all classes and objects from a specific instance of a class. The method is named \"detach_all\" and it is a part of a class. The purpose of this method is to clear all the objects and classes that are attached to the instance.\n", "url": "c6cd16b1f8c53bd52a696c9afd132194", "gt": "Detach from all tracked classes and objects . Restore the original constructors and cleanse the tracking lists ."}, {"nl_input": "The Python code is calculating the ratio of the current value to the total value and returns it as a string with a percentage completed.\n", "url": "205d2257a363e4a52180c14d82ad05e0", "gt": "Returns the progress ratio and percentage ."}, {"nl_input": "This Python code is used to extract the top-level domain (TLD) from a URL. The TLD is the part of the domain name that comes after the last dot. The function `top_level` takes two parameters: `url` and `fix_protocol`. If `fix_protocol` is set to `True`, the function will try to fix the URL protocol (http:// or https://) if it's missing. The function then extracts the TLD from the URL.\n", "url": "40adfe081dbdd317187bc7c9fdb5dc37", "gt": "Extract the top level domain from an URL ."}, {"nl_input": "This Python code is designed to determine the type of a given tree based on its label. The label of a tree is determined by the `label` method of the tree object. The `assert` statement is used to ensure that the `tree_type` is one of the predefined subtree types. If it's not, an error message is displayed with the `format` function. The function then returns the `tree_type`.\n", "url": "ce3b5bf4b5f786aed0b49184b37aa877", "gt": "returns the type of the ( sub ) tree : Root Nucleus or Satellite"}, {"nl_input": "This Python function checks if a specific column in a pandas DataFrame is not null. It takes as input a DataFrame and a column name, and returns a boolean indicating whether the column is not null.\n", "url": "d09752f6ad8ae3d274cbfd233771df7a", "gt": "Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise ."}, {"nl_input": "The provided Python code is designed to smooth an array by applying a specified amount of smoothing to each element. The default amount of smoothing is 1, but it can be adjusted by the user. The function `smooth_array` takes two parameters: `array` (the array to be smoothed) and `amount` (the amount of smoothing to be applied). If no `amount` is provided, it defaults to 1.\n\nThe function first checks if the `amount` is 0. If it is, the function simply returns the original array as it does not need to perform any smoothing.\n\nIf the `amount` is not 0, the function initializes a new array `new_array` with the same length as the input `array`.\n\nThen, for each element in the `array`, the function calls the `smooth` function, which is assumed to take two parameters: the `array` and the index `n` of the element. The `smooth` function is a placeholder for the actual function that performs the smoothing operation.\n\nFinally, the function returns the `new_array`, which is the smoothed version of the input `array`.\n", "url": "6ef3923ed895238369f9017c3075320b", "gt": ""}, {"nl_input": "The provided Python code is used to disable the buffering of the standard output (stdout) in a system. The buffering is a process of storing data in a buffer before it is displayed or written to the console. This is done to prevent the console from becoming cluttered with output data.\n\nThe code first saves the original stdout object, then it replaces the stdout object with a file-like object (fdopen) that writes to the same file as stdout. This effectively disables the buffering of stdout.\n", "url": "f4af9faea801abd2f6afcb51f3fd0f91", "gt": "This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits"}, {"nl_input": "The Python code is designed to check if a given file is a JSON file. It uses a try-except block to load a configuration dictionary from a JSON file. If the file is a JSON file, the function returns True, otherwise it returns False.\n", "url": "b6d56ef631a02d9785fd953fd088c09e", "gt": "Check configuration file type is JSON Return a boolean indicating wheather the file is JSON format or not"}, {"nl_input": "This Python code is used to generate a string representation of a tuple. The function `_tuple_repr` takes a tuple as input and returns a string. If the tuple has only one element, it returns a string representation of the element. If the tuple has more than one element, it generates a string representation of all elements in the tuple, separated by commas.\n", "url": "fbd29b6022db8726318c01905aec93b8", "gt": "Return a repr () for a list / tuple"}, {"nl_input": "The provided Python code is a function definition for a class named `reset`. The function is designed to reset certain properties of an object, which are:\n\n- `prevframe`: This property is set to `None`. It is likely a property of the class that keeps track of the previous frame.\n\n- `wasmoving`: This property is set to `False`. It is likely a property of the class that indicates whether the object was moving in the last frame.\n\n- `t0`: This property is set to `0`. It is likely a property of the class that keeps track of the time at which the object was last moved.\n\n- `ismoving`: This property is set to `False`. It is likely a property of the class that indicates whether the object is currently moving.\n\nThe function then resets these properties to their initial state.\n", "url": "746c5b08e8078cfe8bd345b2f06d87d1", "gt": "Reset analyzer state"}, {"nl_input": "The provided Python code is a custom implementation of a circular queue data structure. The queue is designed to have a fixed capacity, and it allows enqueueing and dequeuing elements. The capacity is set to 10 by default, but it can be changed during initialization.\n\nThe queue operates on a first-in, first-out (FIFO) basis. This means that the element that is added first will be the first one to be removed.\n\nThe queue uses two pointers, _front and _rear, to track the start and end of the queue. The _front pointer points to the first element in the queue, and the _rear pointer points to the last element.\n\nThe queue is implemented using a dynamic array, which allows for efficient resizing when the queue is full. The resizing is done by creating a new array with twice the capacity of the old array, and copying all elements from the old array to the new array. The new array is then assigned to the _array attribute of the queue.\n\nThe enqueue operation adds an element to the rear of the queue. If the queue is full, a resize operation is performed.\n\nThe dequeue operation removes an element from the front", "url": "0b503029f353eb61ae98362d02f635c4", "gt": "Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array ."}, {"nl_input": "This Python code defines a function `process_bool_arg` that takes an argument `arg`. If `arg` is a boolean (True or False), it returns `arg`. If `arg` is a string, it checks if the string is \"true\" or \"1\" (case insensitive), it returns `True`. If `arg` is a string that is \"false\" or \"0\", it returns `False`.\n", "url": "6794fea99ea3f5a130f9b9f4a2d2e46a", "gt": "Determine True / False from argument"}, {"nl_input": "The provided Python code is a function that takes a command string as input and modifies the system's argument vector (sys.argv) by splitting the command string and appending the arguments to it.\n", "url": "4e23368ecbd13cad64e50daa0581d413", "gt": "DEBUG FUNC modify argv to look like you ran a command"}, {"nl_input": "This Python function is used to check if a given argument (arg) is not in a list of values (values). It uses the 'NotContains' operation from the 'ops' module to perform the check. The function then returns the result of this operation as an expression.\n", "url": "9cede792fe3f616f2e77fbe7d4feee1a", "gt": "Like isin but checks whether this expression s value ( s ) are not contained in the passed values . See isin docs for full usage ."}, {"nl_input": "The Python code is saving a session data to a file using the pickle module. The session data is a dictionary that represents the cookies of the current web session.\n", "url": "aeedffc3c75a7937797d81d203e6e748", "gt": "Not meant to be used directly use : meth : Instaloader . save_session_to_file ."}, {"nl_input": "The provided Python code is a function that takes a string and a list of tokens as input, and returns a Text object. The function is used to create a text object from a given string and a list of tokens. The purpose of this function is to parse a given string into a structured format, which can be used for various purposes such as text analysis, text generation, or machine learning tasks.\n", "url": "eea459ea63f8d4aa2b864c391ee02500", "gt": "Transforms the output of parse () into a Text object . The token parameter lists the order of tags in each token in the input string ."}, {"nl_input": "The provided Python code is a function that takes a dictionary (`d`) as input and pretty-prints it in a JSON format. The function uses the `json.dumps()` method to convert the dictionary into a JSON string. The `sort_keys=True` parameter sorts the keys in the output JSON, `indent=4` sets the indentation to 4 spaces, and `separators=(\",\",\":\")` sets the separator for keys and values in the output JSON.\n", "url": "bbb8c24e82437ea03fccdc924a99d399", "gt": "Print dicttree in Json - like format . keys are sorted"}, {"nl_input": "This Python function is used to extract the User-Agent header from a request. The User-Agent header is a string that contains information about the client software and its operating system. It's often used to identify the type of device or browser that's making the request.\n", "url": "c92742645c96823709ad5b8166cb1c65", "gt": "Retrieve the request s User - Agent if available ."}, {"nl_input": "This Python code is used to create a plot with a legend, grid, and labels for the x and y axes. The `finish_plot` function is used to create a plot and then apply a legend, grid, and labels to the plot.\n", "url": "e5568372381b6eebbeb157515f43207b", "gt": "Helper for plotting ."}, {"nl_input": "This Python function is used to check if a certain entity has been initialized. The function takes an instance of a class and a specific entity as arguments, and returns a boolean value indicating whether the entity has been initialized.\n", "url": "09121d31a8d0eeeb5cf9dcd83ba98108", "gt": "Internal helper to ask if the entity has a value for this Property ."}, {"nl_input": "The provided Python code is a function definition for a command-line argument parser. The function takes no arguments and returns an instance of the `argparse.ArgumentParser` class. This class is used to create a command-line parser that can be used to parse the command-line arguments.\n\nThe function first initializes an instance of `argparse.ArgumentParser`, specifying the program name (`CONSOLE_SCRIPT`) and a custom formatter class (`argparse.ArgumentDefaultsHelpFormatter`).\n\nThen, the function calls `build_parser` method on the parser instance, which is a method of the `argparse.ArgumentParser` class. This method is used to add the arguments and options that the parser should recognize.\n\nFinally, the function returns the parser instance. This parser can be used to parse the command-line arguments when the script is run from the command line.\n", "url": "df7be6d0213c51a7bb23985c9f9ed388", "gt": "Create a parser for CLI arguments and options ."}, {"nl_input": "The provided Python code is a function that compares two objects for equality. The function uses a method called \"equality\" to compare the objects. The \"log\" function is a utility function that logs the comparison result. The function returns the result of the equality check.\n", "url": "d71243e301d8df8a50df0fa246ce4dc0", "gt": "Calculate equality between two ( Comparable ) objects ."}, {"nl_input": "The Python code is implementing a custom method for a list called \"pop\". The purpose of this method is to remove and return the last element of the list.\n", "url": "20ee54ac666aa4789a78c32a4103b045", "gt": "Pop the heap value from the heap ."}, {"nl_input": "This Python function is used for compressing a buffer of data using gzip compression. The function takes a buffer of data as input, creates a gzip file-like object (zbuf) and a gzip file (zfile) with the specified mode (write binary mode and compress level 9). It then writes the input buffer to the gzip file and finally closes the gzip file. The function finally returns the content of the gzip buffer.\n", "url": "5b86e1dfc1552e2ad8e2a95d9bf9feaa", "gt": "Note that this code compresses into a buffer held in memory rather than a disk file . This is done through the use of cStringIO . StringIO () ."}, {"nl_input": "The Python code is a function that finds the most significant bit in a list of binary numbers represented as numpy arrays. The function works by finding the indices of the first occurrence of 1 in the numpy array, and then returns the first index found.\n", "url": "085fc95e9cfffcdc0589e1ae27ff97d1", "gt": "A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right ."}, {"nl_input": "This Python function is used to parse a query string from a request object. The function takes three parameters: a request object (req), a name (name), and a field (field). It then uses a helper function, get_value, to retrieve the value of a specific field from the query string of the request.\n", "url": "af8896eebbf01d8cdca7e081f088e946", "gt": "Pull a querystring value from the request ."}, {"nl_input": "The provided Python code is used to convert a list to a dictionary. The list is expected to contain pairs of keys and values, and the function converts this list into a dictionary.\n", "url": "bf10521bc0f9003ddbc220d64ecc68eb", "gt": "Takes a list of ( key value ) pairs and turns it into a dict ."}, {"nl_input": "The provided Python code is a function that attempts to deserialize a string into a date object. The function uses the `dateutil.parser.parse` function to parse the string into a date object, and if this fails (indicating that the string is not a valid date), it simply returns the string as is.\n", "url": "926e7dc9d7779ac0c61e5c1297b2a5e9", "gt": "Deserializes string to date ."}, {"nl_input": "This Python function, `tuple_search`, is designed to search for a specific value in a tuple. The function takes three parameters: a tuple `t`, an index `i`, and a value `v`. It iterates over each element in the tuple, and if the element at index `i` equals the value `v`, it returns the element. If the value is not found, it returns `None`.\n", "url": "b01054cbea99f2bb7ce3ffbe8771e4ac", "gt": "Search tuple array by index and value : param t : tuple array : param i : index of the value in each tuple : param v : value : return : the first tuple in the array with the specific index / value"}, {"nl_input": "This Python code is a function that takes in three parameters: `data`, `headers`, and `kwargs`. The function is designed to create a vertical table from the given data and headers, and then filter the data based on the keyword arguments provided.\n", "url": "3a3657a34dc0ed457876ae075ffdc328", "gt": "Wrap vertical table in a function for TabularOutputFormatter ."}, {"nl_input": "The Python code is defining a class `UnaryOperator` with three attributes: `operand`, `operator`, and `args`. The `__init__` method is used to initialize these attributes. The `* * args` syntax is used to pass any number of additional arguments to the `__init__` method.\n\nThe `super` function is used to call the `__init__` method of the superclass `UnaryOperator`. This is done to ensure that the `__init__` method of the superclass is also called when creating an instance of the class.\n\nThe `self` parameter is a reference to the current instance of the class and is used to access variables that belongs to the class. It does not have to be named `self` , you can call it whatever you like, but it has to be the first parameter of any function in the class.\n\nThe `self` parameter is a reference to the current instance of the class and is used to access variables that belongs to the class. It does not have to be named `self` , you can call it whatever you like, but it has to be the first parameter of any function in the class.\n\nThe `*", "url": "1ba9155be7b2df6ba7e4674d731803fc", "gt": "Accepts a NumberGenerator operand an operator and optional arguments to be provided to the operator when calling it on the operand ."}, {"nl_input": "This Python function, `multi_replace`, takes three parameters: `instr` (the string to be modified), `search_list` (a list of search strings to be replaced), and `repl_list` (a list of replacement strings). It uses a for loop to iterate over the search_list and repl_list, replacing each search string in the original string with its corresponding replacement string. The function then returns the modified string.\n", "url": "4aa3a520458b5764e46c4f07eac8abf2", "gt": "Does a string replace with a list of search and replacements"}, {"nl_input": "The Python code is designed to open a serial port. The purpose of this code is to open a serial port and then print a message indicating the status of the operation. If the operation fails, it will print an error message.\n", "url": "4c38388e223a226c56f8c77f1fc60153", "gt": "Set the serial port e . g . : / dev / tty . usbserial - A4001ib8"}, {"nl_input": "This Python function checks if a list of features (which could be a list of strings or a list of dictionaries) contains any empty lists. If it does, it returns True, otherwise it returns False.\n", "url": "6bb7ab54a926ea8c1cf12f33c4e6128a", "gt": "Check features data are not empty"}, {"nl_input": "This Python function is used to load a YAML file. The YAML file is a human-readable data serialization standard that is often used to store configuration data. The function opens a file at the given filepath, reads the contents of the file, and then uses the `yaml.load()` function to parse and load the YAML data from the file.\n", "url": "ea01144e47e6054ffabeb2fd14ef547a", "gt": "Convenience function for loading yaml - encoded data from disk ."}, {"nl_input": "The Python code is a function that displays a tooltip on a QToolTip widget. The function takes an optional parameter 'tip' which is the text to be displayed in the tooltip. If no 'tip' is provided, it defaults to an empty string. The function then uses the 'mapToGlobal' and 'pos' methods to get the position of the widget, and 'showText' method to display the tip text in the tooltip.\n", "url": "894341368638fcabfe7714433b1b6e50", "gt": "Show tip"}, {"nl_input": "This Python function takes a 3x3 matrix as input and converts it into a 3x3 numpy array. The function's purpose is to convert a 3x3 matrix into a 3x3 numpy array, which is commonly used in machine learning and data analysis.\n", "url": "121d84c275378f7017a360c67108ed82", "gt": "Converts Matrix3 in an array : param m : Matrix3 : returns : 3x3 array"}, {"nl_input": "The provided Python code is a function that counts the frequency of each item in a list of lists (args). The function uses a defaultdict from the collections module to create a dictionary where each item in the list is a key, and its value is the count of its occurrence.\n", "url": "12da05d47f0365acc6d5050614aa24a8", "gt": "count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )"}, {"nl_input": "This Python function, `get_week_start_end_day`, is designed to return the start and end dates of the current week based on the current day of the week. The function uses the `date` and `timedelta` modules in Python's standard library to perform the calculations.\n", "url": "7186890458a16d68f3ae86fdaed044f3", "gt": "Get the week start date and end date"}, {"nl_input": "The Python code is creating a pool of threads to run a set of processes concurrently. The purpose of this code is to parallelize the execution of a set of tasks, which can be thought of as a set of independent processes. The number of threads in the pool is determined by the 'threads' parameter, and the tasks to be executed are provided by the 'processes' parameter.\n", "url": "cf394654dccebe70bab591518bfddb75", "gt": "execute jobs in processes using N threads"}, {"nl_input": "This Python code defines a function `timeit` that takes in three parameters: a function `func`, a log file `log`, and a time limit `limit`. The function `timeit` is designed to execute the given function and print the execution time. If the execution time exceeds the given limit, it logs the function name, the execution time, and the arguments to the log file.\n", "url": "c3a9f0a7366d3d26740db725d27afbd3", "gt": "Print execution time of the function . For quick n dirty profiling ."}, {"nl_input": "The provided Python code is a function that reads a specific number of bytes from the end of a file. The function is named \"tail\" and it takes two parameters: a filename and a number of bytes. It then opens the file in binary mode (\"rb\") and checks if the size of the file is greater than the number of bytes specified. If it is, it seeks to the end of the file by moving the file pointer by the number of bytes specified and then reads the remaining bytes from the file.\n", "url": "297a85bb493d0c806f74039a8a5906f1", "gt": "Returns the last number_of_bytes of filename"}, {"nl_input": "This Python code is used to update a dictionary with the values of certain attributes of an object. The function `update_dict` takes three parameters: an object `obj`, a dictionary `dict`, and a list of attributes `attributes`. It then iterates over the list of attributes, checks if the object has the attribute and if it's not None, and if so, updates the value of the attribute in the dictionary.\n", "url": "dca9f4b5be5a5a31bfe15714e1760c23", "gt": "Update dict with fields from obj . attributes ."}, {"nl_input": "The Python code is a function that checks if a given string can be converted to an integer. It does this by trying to convert the string to a float and then to an integer. If the conversion is successful, the function returns True, otherwise it returns False.\n", "url": "aef9f5feefc059d9e764b382b27992ec", "gt": "Checks if a string is an integer . If the string value is an integer return True otherwise return False . Args : string : a string to test ."}, {"nl_input": "The provided Python code is used for reverse geocoding, which is the process of converting geographic coordinates (latitude and longitude) into a human-readable address. The code takes two parameters: `lat` and `lng`, which represent the geographic coordinates of a location. It then uses these coordinates to perform a reverse geocoding operation, converting them into a human-readable address.\n", "url": "15b12c412bbefcab9f103d1dc80a8eb5", "gt": "Given a lat & lng what s the string search query ."}, {"nl_input": "The provided Python code is a function that checks if a given string is a palindrome. A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward, ignoring spaces, punctuation, and capitalization.\n\nThe function `is_palindrome` takes two arguments: a string `string` and a boolean `strict`. If `strict` is `True`, the function will return `True` if the string is a palindrome, and `False` otherwise. If `strict` is `False`, the function will return `True` if the string is a palindrome, even if it contains spaces, punctuation, and capitalization, and `False` otherwise.\n\nThe function first checks if the string is a full string using the function `is_full_string`. If `strict` is `True`, the function will then check if the string is a palindrome by comparing it to its reverse. If the reverse of the string is the same as the original string, the function will return `True`.\n\nIf `strict` is `False`, the function will remove all spaces, punctuation, and capitalization", "url": "0a8601aa40e8e29e9a34b4bfee20bdb0", "gt": "Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) ."}, {"nl_input": "This Python code is used to set the title of the console window. The purpose of this code is to change the title of the console window to the input message. If the platform of the system is Windows, it uses the ctypes library to call the SetConsoleTitleW function from the kernel32 DLL, which sets the title of the console window.\n", "url": "adb202dabb7da58b5d21780a6344bf64", "gt": "Sets the title of the console window ."}, {"nl_input": "This Python function is designed to find the index of the nearest value in a given array to a given value. The function takes two parameters: a value and an array. The function calculates the difference between each element in the array and the given value, squares the result, and then finds the minimum value. The index of this minimum value is then returned.\n", "url": "2a95f703627a46eaed3c2acda1993e1a", "gt": "expects a _n . array returns the global minimum of ( value - array ) ^2"}, {"nl_input": "The provided Python code is a function that takes a list as an input and returns a new list that contains only the unique elements from the original list.\n", "url": "7656d146fe450dcc47f61df1b20ef0ad", "gt": "Makes the list have unique items only and maintains the order"}, {"nl_input": "The provided Python code is a function that prints a string to a specific output stream (defaulting to the standard output stream, often `sys.stdout`). The function takes several parameters, including the string to be printed, the foreground color (`fg`), the background color (`bg`), the end character (`end`), and the output stream (`target`).\n\nThe function uses a third-party module, `_color_manager`, to set the colors of the output. It then writes the string to the target stream and flushes the output buffer.\n\nThe function is used to print colored output to the console, which is often used in terminal-based applications for displaying information in different colors.\n", "url": "5e7880a46ffa2a7b19d6212e49eb068b", "gt": "Print a colored string to the target handle ."}, {"nl_input": "The provided Python code is a function definition for a convolutional block, which is a common structure in deep learning models. The function takes several parameters including the inputs, filters, dilation rates and kernel sizes, and also accepts any number of additional keyword arguments. The function then calls an internal function, `conv_block_internal`, which performs the actual convolution operation.\n", "url": "07584e5fda69b8f7642955511010ad86", "gt": "A block of standard 2d convolutions ."}, {"nl_input": "The provided Python code is a function that cleans a given text by converting it to a string and then filtering out any characters that are not within the ASCII range for non-space characters (i.e., between 32 and 126 inclusive). The cleaned text is then joined back into a string.\n", "url": "0f171b4626d9f0ea2a003661289af42f", "gt": "Removes all non - printable characters from a text string"}, {"nl_input": "The provided Python code is a function that moves the object (self) back to its previous position. The function takes as input the current time (dt) and updates the object's position, rectangle's topleft and feet's midbottom coordinates.\n", "url": "6cbd916f3ecf9c37c1a7d1e9af1ab594", "gt": "If called after an update the sprite can move back"}, {"nl_input": "This Python function is designed to convert a value into a string type. If the value is already a string, it returns the value as is. If the value is a bytes object, it converts it to a string using the specified encoding and error handling. If the value is neither a string nor a bytes object, it attempts to convert it to a string using the default encoding and error handling.\n", "url": "3d2fbb3f4b88d174fd2f578d0977f650", "gt": "Convert a value to str on Python 3 and unicode on Python 2 ."}, {"nl_input": "The provided Python code is a function that takes a date string in the format 'mm/dd/yyyy' and returns the corresponding year. If the date string is not in the correct format, the function returns 0.\n", "url": "6c997aefc629ec3ddb36fa1869964c25", "gt": "Returns the year ."}, {"nl_input": "The provided Python code is a function that uses a database cursor to execute multiple SQL insert statements. The function takes two parameters: a SQL string (the query to be executed) and a list of values to be inserted into the SQL string. The function then commits the changes to the database.\n", "url": "8c81da54c84a8bf387c8abd981115c12", "gt": "Abstraction over executemany method"}, {"nl_input": "The Python code is defining a function named `_loadfilepath` that opens a file at the given filepath and loads its content as a JSON object. The function takes several optional keyword arguments, which are passed to the `json.load` function.\n", "url": "36327fa884ccc7f85d0e3324f4100445", "gt": "This loads a geojson file into a geojson python dictionary using the json module . Note : to load with a different text encoding use the encoding argument ."}, {"nl_input": "The provided Python code is a function that checks if a given string is a valid date in the format \"YYYY-MM-DD\". The function takes a string as input and attempts to convert it into a datetime object using the `strptime` function from the datetime module. If the conversion is successful, it checks if the resulting datetime object is in the same format as the input string. If it is, the function returns `True`, otherwise it raises a `ValueError`. If a `ValueError` is raised, the function returns `False`.\n", "url": "8dce08e6c99c22329f7a299e12d01400", "gt": "Retrun True if x is a valid YYYYMMDD date ; otherwise return False ."}, {"nl_input": "This Python function is designed to create a linear variogram model. The model is a simple linear regression model where the slope is determined by the first element of the input list `m` and the nugget is determined by the second element. The function then returns the predicted value of the model based on the input `d`.\n", "url": "16d9a2609aa57f6f628be3348335008d", "gt": "Linear model m is [ slope nugget ]"}, {"nl_input": "This Python function is designed to calculate the top margin of a graph based on various factors such as whether a graph title or subtitle is displayed, and the size of the title and subtitle fonts.\n", "url": "ecd265ebe30c4d7de7c6d953ed229c88", "gt": "Calculate the margin in pixels above the plot area setting border_top ."}, {"nl_input": "This Python code checks if a specific executable file exists in the system's PATH environment variable. The purpose of this code is to verify if a specific executable file is available for execution.\n", "url": "e8c5f4c92b428c3492797c43a4145c2f", "gt": "Test if an executable is available on the system ."}, {"nl_input": "This Python code is used for substituting keys in a dictionary with their corresponding values from a source dictionary. The keys in the source dictionary are used to replace the keys in the dictionary.\n", "url": "dd91f2aba163192f99af05825ee90b86", "gt": "Perform re . sub with the patterns in the given dict Args : dict_ : { pattern : repl } source : str"}, {"nl_input": "The provided Python code is a function that calculates the sum of elements in a given array. The function takes three parameters: a, axis, and keep_dims. The sum of elements in a is calculated along the specified axis. If the axis is not a numpy array, it is converted to a tuple. The 'keepdims' parameter is a boolean that determines whether the output tensor has a dimension of 1. If 'keepdims' is True, the output tensor has the same size as the input tensor, and the specified axis is retained. If 'keepdims' is False, the output tensor has the same size as the input tensor, and the specified axis is collapsed.\n", "url": "3f66655eab2db02115b31c2f24051dad", "gt": "Sum reduction op ."}, {"nl_input": "This Python code is an asynchronous function that writes a command to a device using an I2C (Inter-Integrated Circuit) bus. The function takes a command as input, which is a list of parameters. It then converts the parameters into integers, and writes them to the device using the `i2c_write_request` method of the `core` attribute of the `self` object.\n", "url": "3d672b6acb926c7111962a80dbc3aba9", "gt": "This method performs an I2C write at a given I2C address : param command : { method : i2c_write_request params : [ I2C_DEVICE_ADDRESS [ DATA_TO_WRITE ]] } : returns : No return message ."}, {"nl_input": "The Python code is a method that is part of a class, `OnRootView`, which is a method of a class named `RootNode`. This method is designed to handle the root node of a tree view. It does the following:\n\n1. It sets the model of the tree view adapter to the tree.\n2. It records the history of the view.\n3. It configures the view type choices for the view.\n", "url": "92051de4dfff09b7d8998a84f1a1242e", "gt": "Reset view to the root of the tree"}, {"nl_input": "This Python code is converting a numpy record array to a list of tuples, where each tuple represents a record in the record array and each element in the tuple is converted from a numpy type to a python type.\n", "url": "abe0f8e81e16f427a549329c886a3d0c", "gt": "Slow conversion of a recarray into a list of records with python types ."}, {"nl_input": "The Python code is designed to check if a given password is between 4 and 75 characters long. The password is considered valid if it meets the specified criteria.\n", "url": "e407d959ae51e2deeb9c5729241dcd19", "gt": "Check if a password is valid"}, {"nl_input": "This Python function is designed to round a given array to the nearest integer. If the input is not an ndarray, it will convert the input to an ndarray and then round it to the nearest integer.\n", "url": "67238b7feb1584fc9527370198fcce31", "gt": "arr_out = round_array ( array_in )"}]